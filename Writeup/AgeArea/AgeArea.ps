%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: AgeArea.dvi
%%CreationDate: Tue Feb 20 11:16:35 2018
%%Pages: 9
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR17 CMBX12 CMR12 CMBX10 CMR10 CMMI10 CMR8 CMMI8 CMSY8
%%+ CMR6 CMSY10 CMEX10 CMTI10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Pdownload35 -o AgeArea.ps AgeArea.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.02.20:1116
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 856 2013-12-09 10:34:40Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.21, 2013/11/28
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def

    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 

  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 801 2013-07-09 18:10:41Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.04, 2011/10/21
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro 0 0
%!
% PostScript header file pst-text.pro
% Version 1.0, 2005-11-29 (hv)
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc {
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow { 
  /String exch def
  /CharCount 0 def
% hv begin 2005-11-29   1.00
%   String length
%   { String CharCount 1 getinterval ShowChar
%     /CharCount CharCount 1 add def
   /CharSize 1 def
   currentfont /FontType get 0 eq
   { currentfont /FMapType get dup 2 eq exch dup 5 eq exch 9 eq or or
     { /CharSize 2 def} if
   } if
   String length CharSize idiv
   { String CharCount CharSize getinterval ShowChar
     /CharCount CharCount CharSize add def
% hv end 2005-11-29   1.00
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar { 
  /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def

%%%  MV 10-09-99 00:36
    /sc?currentpoint where {pop sc?currentpoint} {currentpoint} ifelse
%   currentpoint

    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def
%
end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/UniqueID 5000828 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 65 /A put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F2034B2E69DA5061426805353EB4D80E20739BC4C510
6C45275B8261DCBA10DE1D104B12F46ACD230977EE7D7D1D35D2814139E38C4B
CA6937CCFA653349B1EF64A98457F7B4B5D8F2978F16ECCEF7054905863AA46E
DD524CB33459220C71E9EFA7845A3A760A507B3D3ABC525B35930B613710A13D
098832C58EBBC8B0CA6AD516E6385792C59220331D0922A1F6F838A8DE13C337
900462F952EABBDC2EB1FBF94A66186C177501453CD3FE3582073DD86F04406B
41B6AEB440DA475E13240445D46726A6D45185D56BAB8807CEC8A8F7CE1AD149
7CE2E1BB5DE4E5B9592241DD136479A65905FD0062C91DFF7349874BFEA5D9EA
2F610ADB9AE7757B2307A1BB9D6797D9F9C4844A59841C7C7682105E23A374BC
A91885E7410F56F60C29AB8B417E2D6092F8BB70A2DD5DEDD4BA1077D7CC62FD
EA43428C6F79C332342E15F75B08A1ED360CD1885730E570A3252A5ECC419A7F
D124C3FB3A7D58C0EF6AC117F50D7D4B6CD852200A1F3193BE101CB99C685815
93A6CEBAFE9A9136C3AAE071B00E732B7721C7A3A8D01276AE06E8767ACBAA92
E17518435ECFC9B42C21EB1D9BA4DD79569DE87FE23F11E65E7C1141A7903C92
4ABA53A4B5C7C390F436CB4C0DB7279511CC1700DA348283522B5AEC490A066D
1099371F128C794D9D6EF7E18E83010405CAA3AF558B233BED8EE2895A696AAE
F0EB67902FA53D9E8BCF2B5EBA3A06F2A4771CF854FE240328C4A2F37B9C73FA
6933A798B6E803A0A99CABA87DA35B532BCA16C510BFB7B509983872C58A3EF6
7D2D71970060C270EE7CD127704CD3EF0235E14156EB241070DE216B7E52495F
23F1173793087399AE2CD42EA3950E8C685E163310E87EE665F4E74227B5A328
BE08D81F6EB1A4EF4848651EB7A024989A6D910914C0224A700E1245ADAD0B4B
92B19F8D6DA3B137B76BFD5E32149937E5B2316E80E1217FAC6ABF3636ED2010
11F687AA6A1FA145D9D8831BCCCA57A43E7425065DE7E3FCB42096A87D4B0945
0AFC294825B15F4038E34C9DBD8455E3AF5B5D9288B8F54F0F326AAB7E8A8FF8
DAB3D2E3FB7123F4AF5488D4B3F5B529A4C4FE5E147CE5ADC833BDC7BA531B02
7C4FA96BBAD84FAD6D4F4A42E929388633C2CBC92DD03C1A8A8FA53E7D7E009F
7EC6E0481335A231C8379C3F3A715763613804BCB54EDC5B0217311606744A28
C46926156ADE820EBDE531A0075392DFCE913C44B3AE8281B2B8FC9274AC2473
904A0918D771BA97E2AEB57589B7D25BD0B8DB1CFB3951E09AD5AD0C2CA19CE6
DD8882E1163B8906094ABB1A7C1270A36C2D80E7E32A732ECF3856D43066A459
E4322ABDF8C90170E014FE8F31A5FD35CB74EF0FA13C6DA5DBB23FF09BDC40B3
CE28A9BF7CD5171C22D3BC7CB0E70B000576DB79216FF236C2AE08DA546903B8
01BE42F5D89971F77720ACE22C99833F96F145D24F2535ED94CC4F33B525F1B1
6C3146B42EA2159F8EE8C9F376DD1C34FFDC5213A75B366A122A092BEBA2F632
D586EBFD5C9781DD0BF828EE90940996F394E25822B724600C7124A90E22D2D2
D7E02F4D95D813F623F7106B0378F7229326834EBB62BB78CDD6ED2B452B1CF9
3711A74422608B6380F5E9943682A51642BA27C943B460063E42F47BD69C7E30
E2A058EE2076C77CADC68C8862C4DF8E9DC3C3D4D4F2AAE22AD1AB0F34F55F53
B44608F5085EDBCFEAB3B345C2572473A97FC0E445AB0BE895925D1D9B7070D1
B3C7862C267FA89B79E20F85C4F999767A919BC790A462BE31BE21A1AC72BD6F
7CA4A8268D416A0C3C0669EACBDD18FDCA312260088E9852B7E65B719225BD4A
B0E543A7325DC5A5B0D8ADB5563588D38C1151A012779EAF09BB2716A0A15521
CFBCF3BDA6B5BD673BE8DC07AEC47A17DB951D3AAD05E9141ABF0F04806A8DA9
0F266B86C9388B9CF7A504681E2573CD98FABD3E0C1367A7FFA135DBBFEB11A9
FDDACE6231A63AEE0808D7BAF391FC2C06BA1C18590A9C8CA18E9D5BB8417594
C168C440DF3AF0E9ACF470482CBD9A592B2EE0F2A2C0F3B213E93686D71738FE
955FD7C67F11323E059BCD0C4A3D3EF05A00A57078A6C9289FBFAB908E868942
C11B028371D5B7758A43F98F4DC4792308CDFE2779CA6BD28B9D022370A8C359
9C2D0F6F144DBD3D517E721DE0479A0B43F0E464181EA9CB6705FFA4D732120E
A035F587051A2EB0AAA345FC8092E63DE84FF17D908E839F0B12CFE9F948B2D7
CA2166E698AC5D1FB28329D24CC5B1F441279A96CBD928586B383D1E632D53B9
EAA73506B7892E57A8B7F79A8BD93C19B83AF6E957498629300CAEC3690F1324
9A3CBFBADC4759A60FD4998773A0957F36848BEA72A57EC499D31E06625BB014
B76BF98B9BD5E476F579F9975563C7A35222601D2F77C8E0952E4201311D3827
BA1CD76E4BCA3F8A83DD5153A6D9848ACD3B3AFEEAADF80B37ED3C83B3EBB1F1
EC7A556652D4BD9714356FBA03A9AD627871385C283509B02F7BC14831D3608F
99C9B8C3C13730744A2343B9BE4FABBD0A2A60EC8B58BC0AFE9A307008035E13
964F6DE11481C3DB20C0C5299769BF8A3C472717921F559CE8FA09853DCB8B03
D7DCEE04E76C83E8565A59FD3165A4562C1EFE07F076700A7F72BE82A37C215D
A40DA8B56AEC80A8316290D91C6E7274B415AB3A299551E087BE9B7D9FFB58D8
0624B1D8627578EF0AB0B089A42EE23A0220CD1CAD81852F41F1D3D13626ABE9
6456C08B2C6C9044E36BCD856C293120A95158D83103AFA012AC84D5ADB2F20C
5A9993AC671A25EE7F3F90D70F175FD4454A1BBD8E157F9A9DBFDE25650CCB39
396389DBD3CC84707111C58004A4BB7FA113EB7A60748A7E64843725FD46BB2A
9BBF4DE22ECC4160259D973DDD03C18A99FB30C5AE1A0DECC0BE25321643495A
FA07BE38FEF83F09F98531C997C0A3444C32714DB7B286650F313641ABE572B5
BA5204E7471DCDD573CC43A455D087CB8EE388F29D080FC61C813DF016DD7BC0
BD76F66EEEEF0FDB6D17D4DC90755CB2C1649B00E2FF249A87F947596DEF20EF
84F675B55CF7E14E3E1C3AB4D7F7F954F26EA769F6A8B306D56A4CAA49E080D0
B59369D396D0D5DB10E539F7171BF507887F56C2D9FC4461B372F35F21D6B79C
2CC7C1D5C5DCFEDFA5FB95DA5639E779951A89AE2FE2D557A1DBDF46577132C3
103C1242EB093E0F51F5FBC6CF93161096488507D0CF17FAF2E867BD34D8E7FD
31688EDCD7A2A8D8DF9E55C70229DA7B4A7EB40BE0CBC9DCB66AFE016517DF6F
174A9056B3CB0D878ACD77FCC0EB7984D2AC4CCF968AE0B957B7ECC9CC001C5E
19AD661DC9EA3730A1E56C0847DAE110078D9D7F32608A0965785AA627DB5C91
2C59A0C68AFF14AC856B9358AE00133652E31F242F8316C4EAABE1314F39A542
AC87ABDA6D26B189565FFFEFDA124D0C233B9DD63F9D84FD25048F82845DD4D2
335EF64A478E4A15D558B3B9DE28F24C8E1D252D9C74B5A9B2A1C5346A6027F8
41FDF94D014E26AD0A6948828F5804674CC966C851E2919DBCBAAD0214FB93D3
610FDC729EF1E8862EB12C492BD8F7DA28DE8D2F2A683F71FA46A9F9963BEFFE
72AB457F868A2D9F086B3A00F553B2137D0E9CECBB0B3A7613FFCD35E08705B4
99DDF8D16733EB26B981E15FE8CA3664C8A840557D1E4B00050E063F5E1FAB12
39044B29A311B3C14137BA504E25AC746477F7548D9414A0382FD8E4A520CA5A
874BC17F8594B42FE7D89A80E7DF7EF955A9ADBDD053FFE120386898EF959D54
BEE1322FD756781C9D990EF7AF07C205C6B70A460004EBED88E9A89863C695CB
90596BD2B96BBBBCF060928A29D6CB2AFE6B22F7B4D595E5C7F8A533230F745D
C2E8A784F511D6C53334299A307B942C2A5A900BC1E0661B798901A832902DC3
ABB308798A643A431E071C02D4337C150C9DF3BEF90BA150A0AB6E7E9A1039EA
B381CD54215B028D0A601E1746DD25591C52BD41DAE9DFBB18DC59F366BDA90E
D39734D156DE29DCCE31A358933C39B5DB82CFA6BEF0A1C88444FF6F7A067FF2
4CD6ADF4F62CCD2E89D078B2D993F8BCF56406E89363A7C2944094A696B5CDDF
9FE2B41F6FE7180080C03C9C107330218D6B1B8BC27744D76D51507B485768FF
8EE3B9B1AA07D1CC4DCB17C4A12DA75DBC108EE3BE37E671CA405D0CD5514EB0
247916461170336605A4E6EAB2F262342DEF60F42D7098AC8A89D3CEFC513E2B
5ECCF45FF4FD6B9D2653732B7F5778363DA6C5D0C770B729038A20EB1F1FAC29
77E15ED0F36A8C8A8CED0232F525C48C08C31519D491601FD31ADEBACFB1A7E9
82ECC445495FB23082D4FD62E09FD42ECB294A509D144EFC0B71E652D21C3E0B
9A7AABA7DF44843DA116C87B77D483D6CFE09992BE22047E02B0121EF6B2D2E4
0DCF64202AD79874437B0D30E2F3CFA58410349CA330A52475325748D02DB193
01AD0459EAACF2AB07EEE54AFE416E9320C1B7B933145C16F1812AB2F85DC1BC
AAD604F6158D912BA06F53E16888922D4E388750D4EA8C01DC60B0D579596156
F4DB960141A7DCCB88D0DEBFE075B072723301E1EA445F5F9875735BD33BFBBE
36F933B73D254FAD85C3C56146B492E208DB6BE60C2F7E371BCE3C953926DDB9
4DEC119CD1F519DFD4FAF9077EBDC30C4E4D9E147B56B7CBAEA2CF994FEA89F5
3879F6FC655DC6212E63D3F51FDE5C1A159CD106B48D2EFADBDDEEA7132319B1
347633A0EA2A3532E646F95DEC43047BB3E45F75C38A93CA7267DAC70254E8B5
4A3D4B13C2B2DB122D337073A8B6494BEFD7A6EB95BA0FC9FC31868832F777C2
612315C0BFC90FDBCA8AC3A047B02DA45F11395EED5273B21900F6DB8B38DF59
A66E881C5833FCB5F89102A37CA8D26FB577F40FE16DD889ED41A8459E58C5A4
C31E7A6483472D202886903469CD7F86DE32424CD8BC07F0D239133A59FA1109
4B3BD0193C8A4472A38D87D0ECAC27DFA21343E64E8987EA9F1A3121765A4E6B
F7D3EF6A980DDB25052C10D95E1E9C771CE952D6BEB7668BF74C2A8072FBFB30
31C3239EE033DDB95EED2FD9DF868F1C47B1B478FE28C2CF4C88DDAE6E084B89
8B66AC710DABC82F5AB5AF57C112669A540C82C491202DB9477DFC562E39247E
27C352039E003D3FE3246395AF259A0B74B311F18CCCE805492848D008E2FBAF
609965A9430A79E19A0A99DE313AFE0A474593E920381AB7A5973947967171B6
D0467E909C83FC69E10F66AA3C80604F2F6D489739B9827B456F9382D4A142D1
82432C4E01B58DF4480E1B5A93E21FC4C391DDD494BC31BF553FD88BB3E47519
3AA50FE57A57CF486DC93A4A67CFBE51E5AFA8713F40B49B8885F93D3788DEF8
079E270E9BCD89670116B81998158D9CD4AAF74783DC02A5637E3CDBA236DA57
4F63DE759627C36134F1562D0B64D5AD8334779F6A9A99545B3B1193494A94E3
1B19F4226E320CE82AA7E20760957533F07D0CA58B96D82ADB94717F2070E3E2
6B147AB6033A4C1577B0C731AAED4ECAEC0DAD0ADD65FE6F8668AC72E9115946
8BBAC06BACCF72A2E48E7E07B4DD991B165F1EEA290DBA7C1409A075FF191AAA
0906B88EB132E6A21DCD06518794254027A12865609215E97FE8ED88355BA8A3
2023495EC3FE572E97AD347800A63E7CBBB7347414F4918B3E582EC6853CAAD5
7787F0A396867960F63A66F7EE52E91A37EAB7FAD75F966CE645EB72F5D5EE40
0F3892465712E49BD3F49243F7C90FA2775A5B0D8132CCA0AF61118D2CA89FD5
A5CB1C77CD0CB17BE354A2E5C09672C18AB91F3E89A1B9751637B669D328EC7D
080EE5B64D90692D8B27A21792B277EBF0EFA1925D0716F5C787491AF1FD6F29
2D72B507F36D9CF7D4B2BF72EA20738A68511A72C5967407013869BBE5090FAF
AF03108048AF419C6ADE5192A859B51F18B09F43CCBBB72128F2D986FEBCF467
68104AFBCBA6EB1EA75409BA9F293DC80AE21F26816AF311FD202C92F71F96A5
DD3BE5B3065AD6BDE9A88D2CB23CDD1283CB8AC8E6C3517AA40BAACAC0AAEFE9
0CE428E6C10C695B55BEADE6589C5873A037B81FDBBA9C5A4DD8740BBD70EA6A
FA43CA11828797DABF12AAA47594B1E3215DD60E2091E3B7E6FAE4A89A9A0F51
686FF8AFBB0772599AC2E6796F3C52637A2519977E03C31B8F066F52AADAFF4B
2CB8D87BFCCC856423C30F45A2537BFA2638F29DF2EBFC5BAFC13A2BE9561F9A
0F16512B22C50FC018210DB9D514BBF162FCBC0C40BEB9FC6749A767321E5B1A
6D0A376D0CC91DC778C9A40D7B76A72EE380B194BA83200040F78759AEA55658
A31A0157F66FED5ACDBF69177927D2023BAEF4D40207F0277DAA9FADDF5D453B
A4070658CC4227158471DD4322376C45D6BF61A0E79070C83B86B018E9E80D30
C6B33671DEBF8544D00852EB0AFAA8D124E6B5EDB5F4010FB615EC5DF3851CEF
D78A62EDC2F9FC55A3623F3494E59B35A445E2123676F25F11135F64F275DBBE
B205EC6A89731E7355BA8B4BB417691C38F5EB568C317D889B4072AC31ACAF9A
108D1ADFF19C09A119088426D3260778BAB1126BBC399EF3513096486D9FC76F
673C95A639CA1093E0BC298400BC2D6C28B83F3EE924E58CF85757AF1AEC4676
10A1B663BA31EF4E8C0BF44887D83856882216CD2FA670101359A5E3B45F3D5D
4C4DE17FB9E72A52ED785EB5A3F33793D5AC48A88882C3C24384698997F1A776
CB2F16403F697268E3985D4E8F0D6C6D88C3499EF66143EF2414EEA9E6A6C092
B0C351480936BBFB7A7E140B968B5267EE9AAB7E2B61D9CD5079B6AC6A4302C9
0487ADDD905F6B81F1E67EBE395A3F34528D89D89365272D1009DE5EF84A4F1E
F099271EAA683E75B5D8C55892DB6600DB1B2013E1165F6B542D29C8EDF195E0
9A80DF6935CEE5CCB8E8641C12A4E00D9DEE78AD60A5445432620FAB2C22E9B8
3DD0654B80D412D5782FE0F1B92B0CCB2B2614057C46B5DA038B2BCEDF9196B7
FC04D44D63B04C1C133AEA41412AFFC016142C1A8B337ADCAA0C808CB847B492
EB5C020C1941690EB741D27955EE5F949FE826E1D9DFEC21AD249B22775135EE
910D312DCEC0E610292DA19886EFD68C80218F00D7E352B035979D4DCED2901E
6B345170311929EBC7887C0B36062637B4CC107A489B27F2F84B384093E90D6B
0793639319D6A5B1EA23C400B65A2E0CDA13844AAE55F6B05912DC6619ACE3B6
68BF8BCD69D910DF8A914F2034F6EDD550B4B6061CFFE8F3A0CEF0ECC3E0B793
7A9F761D2D60D8AAC82B8D4EB41C67A78827953CF43B35485D42F6F673169CF0
CAA20B0E906006EFD81ADC54B19651B87821871968179EF78E1A1E13ADDAD52B
B95725BE5E578E7F863B312ABF4253350096EDF964F62C9336D5F357483566E1
9DB348D2FC1083B46D1F885E541F9664A73B7D5B0DEE6A206FBC51B9EAF987F1
55069D1C77EEB62758BC4B5E1624AEC80D8FC275BFAE72D86FD41A52A4973597
5ECD67270C9624436D64B2393C8B7DF3D8723B4F9CAF95DC8D2117E8642C43A3
647B192B339135F2ED9B78F202EF1C103351E047085A0CA99F2B80430A513002
2C54ED76C1B18DEB58DEEE293CF8E3D0261EFB4621AE3040000AA62526A96329
CE51D8A4F0AF41291E3DAC8E6108EA2210C0C3E8905949E3C89BD70048FB75CD
72BAD1173A1A81D8942B707F873E20A4B4A79F01D68AFBB3E4914E6C1EFD91F2
B6331E9057295692D99F740ABA512130014A0E34CB97DC0200AD1ABD50CEBAF8
71CAAE92C770B34CB53B4D2B382069D8205A34A164833E6E8889423415522A4D
603A07190F87FF2B2383D3DDA12BC3BB21B60B651388439996C3D25B11DD44E0
A39C4EA5F9D92C90AE6519F27ADA0E64FE8E944366539A8FC3CBE726B4023206
A1948CA40842771CA238773FDE1F94B7D95808108500FBA3819A2D7E921A4B48
DE8A3214365C2B1273AEC276E03C8F7EC2CDE157EC885EA0D50D09A7003CD301
8004AF155B73974460ADDB5F75387B733F18E5EDB4BB05ABAC847C62876874BF
60C2806A4B65E17F22497EAD787963FF2F0411DC907112960EA4519D21EDE545
6264F2B017047020B4DC401788B8DC7EB25314755759885855D35BB00DA127C1
4D68EC807735307D7A6F591EA476F6512D14C80A8A98CA21A178CD36106779AE
B73FD238BDFE503DD1D79C775D219247B1EC843A51C15A981D7DA7578593CD23
569B0F008BB90A0330D2A049E7E4EDB8ED2D04E8178AA96C935F338343F7DF4B
1411E2E8296E82FE840B31886C238BD09C9B073948FDA1D8E68E4E497A3CB012
67C32E42788E285BC6C43FE9EA516058929C073CBA846F248503714C79DCFF14
044C8AC466368C9E7AB1698BAC9972CA2E1CEF5822AC7B71CAEFDDF1821A5E7B
40014B3F63AB93B2FCE10CDF8D45205D43C1AC1EDB2253EB85A1E474300AA22A
B556D30A10551F98E0F27E5CD5931F8EB08D0F9D9849C32CA84F45CF959740F6
0CDCDFE237D5FD3BBE0B9B56DABFACA097C16C7902B48007C5890CB026B43215
F6A80927738C97BE7A6298333F0A6A09467A4BDF4FBB1385CB1C737211044535
E447C52D632B3A6E68A6D45D8B7212EFF6E93D54C87345C009AAFDE2CCDB7DC3
0A31E61FFBF710EE8CB0BA187DB0037E67A978267E79F4FEC8601E382B2FCEBE
B7A18432EBD6F190CC3AE4CDC90D135DBFA0C4112A10FF90A987AD0AFBC4F54A
3E0272253F72802C36130B211E8CE55C7CDBFB9D82A37AD474E3DBACB80C8B03
E5997A15499083CD0E799BF2A17A9E165F03953EFC278E128BC56670DB259476
ABD1580D497B3EE48A18CAD074512116CB6344433535DEC11AAAF1CA34CB4317
F532DC41B0A3D7BE1C367BDFAF35B1C4F60CCAB61F7B4144BE9F63F17B9AFD69
FBED547025021CCA383E679486EDDF00AC8A5852C85A89387D4CB9BD3B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/UniqueID 5000768 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 65 /A put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DCD1C1BC03B83FF94C60B1DC71CE8A86B46DBE661C9F8F4677F8A2C7CF1
E41A91EBDA2304735147BE66CDFF2673F09D408297302124C127F0B35690CAE9
CE1679120CC4D582FB69550AD34A047DDFCD9D411724554CCED753DB52D6AA7B
22B0C55EB698ADDBB0F8ED15C971AEF113C74B9E25DA29199237B98DA4023665
C2A63A837E4CAB38F8DF37DBAB5DC80C0C3FA72C8A70DC76B5B36B2EEADDCE74
23CF794B66E4DD3B35BF99893789063BF7B01D5F186B2FDE518B2CF2EDE51F81
38244BC64548AC3433A80B86D6A0CA26D77F403C06D65B7394BF1FC7D06D37A5
E70ACD844E3367DE4DB71312CBB85ADD21D5A1F99BB8427F252D90ABB66D7154
EA5AF4A165DF6415A0880AE784071E6B3E2101F0B663DE14DB1ABF8B7CE0E6D9
D24F9CDD9F80028D37C9CB4067A28D41E879AEFECDA71F649EB3C250BFF809D8
1E427E3BF24E85C75F080D93E0314883988B3A4A2B72A1B4A3D2189AB6ECFFBB
C58151AF05AE335200711ED945E18B4BBCE24A8A162BD9BB26137253BA8B5819
41E759A7CA7CBA129BAAD438E87189F2F6AE7C86F4EA099DEB23705A500332A7
4F141D8778EAF3910486B2EA25AAD16B60DD804D0E5BAB0FEBB77BC95EDED08D
B8941E040D99E8F44E70FF842306ACCF65C0AC9673859DB9C3A724238CB8CE62
255BAF0145692EE3B52643A0DE3E667AD03EEF6C753F57E34AECAB0CFEC7B07A
150D7151E57BB3A026D50C7A88DF5F480147D87DFEFE463F76122EEB5128796E
46CB0AF4B537987C2ED552B37D83F393222659DB735F2A293159AD84AF082B95
6F1454471FC36D805485D619D58FC53FBD6E3F72660ABA559B91ECDEFB267268
86A75650C3919962B0139409A29F5E3FA70B901CD5D2C49144778CFFF1D5B63E
099C92AABDAA73D54689812279C95FB7A4F7E840DD53DD3197A4E6D3099446FA
C0032FD40411E8F3300A8A8934B5216B01D916D41DDB32513DC4ACFCEFE43D6B
22FEF13D3567B047C6B35C477ACF2E172701FDB0FFFBE01DD58D7E54398EF4AF
DA5A404E194BCC39BEADEE5C76D7CD1E602793B950256F25871A9760C80B1EB4
D1E1179C390BC240DA061C9D539B20F4FCFB72DD0C1E860DEA2988E749819787
F04BA7A9CC3EDBF9CDE46895FE31EF0F8DEB63E295E8826BF920C8FEAE3B2080
8C98DC43DB22C6537028798198E2D3B0453ED725B774686310F635AE6153D9E1
8A0514882D4CCFE9D2D2465513E42E548F64A50ED78AEC9D62E0F9CF61EBFC9E
E8832D60E91796C916FAFE58F51818B80BBA52C1C06D94E602481654E5378C8D
137E3A872753CCDE4B2618C031CFB13EE91C91335441C434296DDEF61CDFBF8E
8FAF25DB3B6D6796FCCE2711938D605AAC00F0A58DD1A03FCE8732DE541E5E8A
41FC87E1FCA5CD9B5E8D63E7A7D6CEBA67D8A83EAFCF490DB7185AD55ED0F43F
9A1290E91C463895BD12E8A831DAD661E36E1B01ED4C112B8E1D0991D0294BB9
A13B7E9A8835B12A7133E834379B3477DAD425B7996592FB0395E3B4FEDADF4E
23A07F6C0E1387DD54F5C8BD071C4E9E4CC98C55882E29B65E5BED61B57EED93
07FAFD75CF3BB101D1529F83AA8234F70F342B0E531BF23E9A7D1FD112193CAA
4E377B44F94D9E990C22598C2AE33EA73BD0670A4A000DF78624CE01A25DB30E
22B0EE3FA892A897C85AC54FC15D87D68960870A6521716EE75F41A08EA467E0
CA703305771361E9A081348CE2729B0FF18988F36222BBAE11B67549B320A0E2
D978AAAFA8611578EFF7A49DBA0A44F907086AA23BCD6FADDB3787C591C3F2AA
BA930D964266398898AF43B5121451D0168D1299CA31BA75666C0E78321C9CB5
060C47B11252AFE1C9317528BD564137FD5767DDE33F5DA8CA076109F2381E24
C381185CDE9E231A78C2391982A61DD3FADFBC43552E075CF52E6F149345C500
DD64BB28D0F8DE5FD8C8FEA78E46DFB045457F8D3D379168B1D02976D700F1D4
CAD5C1319B772F7BD8C91658023F4168EDA727CF0DFC3ABE725F0FE01EBAF6D7
4B79EF40B5C00413105568834E3BAE59E97E8596A659959098F84C211D1FB2A2
1087915D05705F38761ACCF0337AB44027ACB54EC69F5E557A75BC998C15B201
E4A92EF6A80C14B610CEED4850ECE54C80D2CE7E3FE699A4C6E728D678ED7B5E
1EA7C9BB3AEBC348B3E8116C67523E5C62E46F94D75C14E7DFCA3E9A354B00BE
8D8CFF4DC312E6A454DCCDF83FF2BBC7B17EF8C139A1DFFB501C223F493D0FA5
87209565FAEEC1CAA517D410BC0C3E25D648B2423B108D159517D1805827846C
E370754666B2F8658541F956961AFC377DBF25FA84BD4E4123F330E87EE15F64
0E78EB5F42DA20867864C0982252FFC0670FB3550E5683AEFD2BF523E3E8EC64
66E774E54CDF98D497CA18D578492ADB3AE0A1EA2EE986B3BE8DCDA5CEB0E304
6DBD69DE711CEEFD4A6B79EF81E3BE2239F6454886809D7FA7820D9F5C9C5086
4C1055390CA57CE552E69A1C4D76387AB2627CFD95B182B0C17537E17DAD8CA8
AFB13CBE73020E3A12B33D86F9BFB8222C59284721E202AF56F30700EC015829
70DF345C37F3BEFE4A81FFAC079A4ADB4E2EB07D3813F871C07E725DB927C4A3
1F0982334E7F8A8E00E778E246B3B724F0D24BD01A301C9D89D9E13D63B5D810
DE8F57625819D86D7AE834D7135E30FB251200BE54B387539858F28C3C108C0E
6FD94CE8CC1CE015A6150680EF84597F1E5486FD79F660C4DD10C22B48008D08
2AC5C1C0427AD24E2C9976490B46B784E13A98044F77C9EF13C7B14A754FD0E0
7C68A902F9E73E4C56D825689D816FDB1A4713F18099602C683C9C205C00D78E
6E21B6D3722008F40245D72882B63CE412A2681BE0218448DFEDF16CF2DA1B74
81AAC9286EAE13BD1301F1248952EECB68B37E7F7F911B1AFFBAC42263371EC3
422A52ADF6B8A220738097CCC25D3D804A547CD1A6117550E49BCBC17FE82257
78999C3FCD8177D0A9F9C7738BCB468E38CFD5F3B5EDE72873954597B63FF8F4
1BEC25C2256A60BA098FB20B7662677D7CAB49EB92FECDFBDBBDED300348ACB9
07EF0CC7FAED0609D08832E3E1805283A60AD50A31198580AA14DBA106D30B22
6719D01C174722959553B6627F4F227187233BB637D18BF2197416CF248077BE
79EC7FF7F9FD78B252C31343B7579F9B0485BEED6CB09C882DFBB4DE9C0F0B29
3A0721F605A8F8EF4B6F64808F36A20C8D31FD3021485E3D8217A211D0E8F546
37F26CFADAF8A44D480647068739864F4449B510A003FD0D8C7864335CD2680C
032B80279145E0CCF5B84CA18AA33A9F6909A0EE736E5EE9C834FA4FA2BBB312
B778F060B8934C30EAF92D3112A8DCA3C6EB2115BE31EE6AD892B50F19C43E8B
0241A7640107E0686A6CA44F58B0C7CDB2437403C6B2C6E05F498EC40C314FAF
B5C025E7B821576E76DF80795C9EF1F61E22D483084118B7583A5437396BD8E5
2FFD967B8CFE2D4A0BD4E22A75E9C82E9DD8DAE2EA9A102E0D92623D7E098907
6FE56E1FB8ACAE10E2EE819270B3945069CB0841537DE9F5E270EF1636B42DD6
11770E94A35A7516FAF67BAB91B1F2B40867DF716658264072A98B545468AF5B
204FE66D67F60F2C20D26052D9A9EB4D513B97E1F5553E888CD7FF2CC8FB776C
C269FC46C8EA6D5B75E922E5FDE68ADCB34BD070A0FD69CD2618E837312DA387
BB53A7068E09EBA9AA411353CF1F2FFF7A9E4A926352B57E7DAE80A6BC389BEC
14D6530C08C8A2BA3C374C45A0B81F79A8BF8B9D816141646999FD17178BC3D4
9261844E15DA881A9C2CBB701ABCFD310F4B7D4685A7877A98D54807A8AC5E2C
4A55CC7A8E395042054BA3F4961683E347CB9D9EDAE84A738AFAC0D79F02885F
2C81AC7E21560367CFA2E8641B09B411D05989D2FCB9E7BEF20E9879AF6FD84B
777F9755D589B494912D7F8BBBAEE718440F9AC620FF43E75C95E2B239C0AEB2
991C7BF772FE6C638A2B23E6F1B495C927D243645F3B1477BCE6FFB63794541D
762032D3290CFD955B108492ED6E8D2754DCEEC7D6DA60CB5782807E47B46745
39C4CD75EB2B76F03FC86A84E4B4B188959632C37B52F065B3DCC210B0053413
F5CF9DEC5E373AB84C424D6BC865BE97889CAFFA4BC15B304CCEA5935AAFE832
AFEAA4E400B1A47327598F9E5AB3E91E7686BAB77D40D0ADAFC27599669799F7
8BB727317AC637DBCD2CE57BB5F766E3DF959C0558D52D3384CEBDD6F9B5DC86
DD9A7D380E05319797EFF16B514B7954F10A6FC75247B9DCD76AEB39A3081A02
4F130ECE73FD452A68D0202E0714A6CDA4648AFEFF5E808B3F760D10BDDA1721
F11CD574C6CB30AC2DD2CAEF5DE4BD06BFB4B50219FEF89C3E618B3BBD7D2BD9
E31D756561C221FB8635DC5F8736CFF8095723EA7AF693292E1586A8F4564359
B872C486DB5F3F552A242E12A740BA4222C44454F29204F1C4D455B67B580C8B
C3D423D0D9F9350C1B6DFE6AD885F5C971669F953CA9A30B4A6C8C46CEAE37B8
C0B647161E5C810CF2EB7924E718F0FA219D6A91B38A4339B7C9D8276A7FDC41
74C1D5F204D3BF03D04A34BA1916C7A065C30684E621A2A28A4FCF0ACC72FAE7
FF7B04C77E63F3C359514F9CEF8C2DBF2142FD71C3839B9A95DDBE6542AAE6B0
3B6F32501810BC4B127359F9FCCE24B6FD711FF7A9881705BDA6562429D87914
DDCDD35E329FADE85A81A81D7AA58D7A9EAF27F2C5381B14DBFB07A754E10182
3782660A2E47626EA8BD46CEFEA239E8454D1A044C2D2435D053E0A3489AA00C
158B32FA0CAEAF0A927D5CCEFCF1C8A2810C29AF5869C8CFFA9E988E1331F39A
865E11BC4AC3B910C35378CC28F850E6208C127907FF1702DA8C1B6C315D93C4
4981E8841BABCCF2DD9EDC07336BDC1B9126D634971199204ECA48FDD3AA237B
E9E627AD1CA919C9F5467192C1C214A220965F89B128BCBA1C4A12217971798B
44ABF329F2A164882E3DAA0E74966EC6B6AF205FD59C5BBDAFD5B7EB487B2F0A
2F8634F9E6F89B942D8EF661CB3F085DEB2FA56C1F7DD18050F83786086AAEAC
23239B0F83D840C5809B6A47D32EB6BFA023C3BFA370FC941A45BA2280A3B130
20A87515B15CBCEBB169B9F15578D3D1B1298D6C7FC3F8884F9D9610FD826AC9
C37AB03D7949693B5D8F46C3E0F45597EE0694AF84E57226DBB22AF3F98F1BB0
62264900FA6F0412942B1FE1F80281F56A9A80027B5B3436AADAF5C5CA10DB1B
DDBCDD9B4158AB774FE00F4DD2A0103655FAB48D74B7126714957F5FF3E282C6
416FCE12EEB9F4E06F930563E6BF98C846661F4FF23E9356E9DCBB34333F41FD
8E0F7AC773E4AB54DA1A6F332BBB69A3D3200409DC5F539D40FC4B918AD8D8FF
20E4C9D2B6A07E7E4F921AC65F1F7A33B6BC0478EFD77BC616930A7C203880F0
3F5E36A7BAD7CB2A72E7EC8291A8BD297C2FABE6EF81E02BFCC52E02CA12FD32
5E951405C9579982A4A3E59D33484DE7146B4D7CE98CAFF3A063279B5AA845C3
8D65E09A1A53E4B8364875E273292B44E25ED169AFCE0EE4DB82C3F537C0AF14
FEB21C8516AF6FD7E562D3EAF7923C3930141226CC0FE9EBC75DB740E78E5AC6
7157EDA2EF741468EA6F1A2010C2C6F1C13675B6E496F351015BBB7F0B636189
3AE9A0262633BDE7B4E4CCB34D52E4567E0961146C612802A2BBA6BD29E8ED90
391094FA6C588A3B84B40D0B2E2105EF603A7B39DBCE91AF7A7CFD11246DEBDD
53D3F064608668FF8A6F180D3E7DF1A9E26D15090FC9A242D377769D501EA64E
D7FF741BA31075C108215368FE367B50CB58F0EF5201E65CC1462B7C3E81B574
F6D1739171A59FC554C803078E85E342F093364AA27189029961179B9812AEE8
672A0F64FF7B4E52B2BDF623B779526663D38969CE7CB41692A6CAF0188B8AC4
A5035940D4626DE806C6613D27FA01D87817B4F8E347BB123D1C138717277277
07D40A6C53B0D39F943ABDCC51022311591638F645B55E6C5592496C76C10E33
6643AAF3F7C4533E2B6328B83AC64DDBC258E0BE5A5B18A4B529C6714BF22ACA
5E10DAE51BF27D4C79E67FCAD662
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F4EA9934F170D87D1F0D90CE8F3EAE863FB027
FB5969E37145C8D881AAA4E0464F52F3EDDF47DE80E64E5F88C9498795601ED3
A72231E130CB6E12E656AC7FD7AF2F2D88EDF9FAD3416464A96E39E0D658E84A
26768B0CE92C228D6C8C79C397C45A6E02F119170A60567D8A2B4A194BB16F26
6C4D2DC0D7892B367F6DAD1FDCD7A34B8F96DE8B73C08E980617608A10CFA526
2826A1CCFC62F730F5EF457571EA48803236DC578D68C9FC2148A78033C8606D
8DFCA32A17AFDA0E7929CD6FD50EF80D543F9F2CFE69BFDB07E08B235297B32C
6FEBE64AAE1C9C19F4076A91CA0D9CEF9C03F89E0269632619318DE67D028E64
5ED99CA2F4A2713C7E5B688DEDD6E8C2BD26AAD1550EE45D1E9869E8CA43A9BD
CA70496A23142B1844B03548847FDC62E016F957BDC370618058D93C34443DA3
81CBB487687CA5D735A2B584616E18A87712118E1307CDEBD393B6ED860BA1FB
FBDB0CC9690390A9BB97ED6FB106E53E5753DE0B7A0C7FC2B9EAEF95A3B1733B
C96615E978BC04BBED07922D6BB9D038F1F40945D3DF42921EC328513B8076DB
A0D8E8424A5D126BA38B2D37952BDC2630D81FE195F5D2AE2449BD18E304A0C0
C8B33A98C8F31C01C93CD1D47DCCA831AC8AAAB199CD41AB8E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D491A1FDD60F7230D5D725D21F531072155D5CA
12045C71F375116E93825D964FE24E272B239E8E12DB85368F11963CBB4E2B4B
EA559F6A1FED7DDAE902017290E4549337A9F6CC3109F1F858213AF70573323B
78B9F56D9A2D6E6BD0FB038E6B0AEB661D95D1669D49D7E93A21C76C8E0B29CA
73D10BB805BC9D2D488FB292E1D014B47ED472B3DD4819A2CB3E370EEE819BCD
8C722A1D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/UniqueID 5000789 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 56 /eight put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F656
1DEF13780383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D
2E927B848A1EF2BA15CFBE57A51E3AF07598275195C9613041F71C1AF39E61F9
EFD5F6512FBDA76E29DE6B508F62F5CF9F73F5288DF1C7B0B82C92D3B6358BAD
EC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E88BF20588A39309C2B703
CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829A6B954D8
9103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E1
1DCF27EF743FF90BF918AB8C4E5AC35841E2F745480E5EDE1C1DEAFAD8D0018D
2C1F1CFCAD9F6609859DEDFD1648A6CD23D8ABB80747F94899F17C8F3E6CA55A
E176F19CDFDAA0D7C920B3A72051A4745560AC81978C92459EEE5AFE85AB247A
32981139CBE352B248F4BE5F73503A084A3E91F05328EE521D9669E44E202584
5407E7846F9FEE3D54EA18FFB144BF2D6803BF65AE402034B3CDBB40DD24217A
3CE0E95E2717CACD603A958187C42B3558AA38D6B6390EEEDD396F96E6041FCF
6F8888221AFA87EAD79F46E0E32CAED91E6C8500879AB6E580C581E8C8CE9B68
2BB5EFE2604E8DCB2432D39D75EE556969F1B2FBDF6A4BC72D106AA7CF22C268
464027898B311613E06E1584707F262F71D9F49D2149306A88E02BC60BBD6BDB
EF41D90F19197BA9AEF32B5E63D5B9FF41B5602F9F786E76621DA54D574981AB
87A72081EA05D6C6BA940EFEBD0904EA4E77BBCE17E20B42E1722617E0F6EF32
F1ACDE9D758594E9C81049CCC10605A27C2A06872FBA9F159CB155609B496ADA
4886F478E44029B5E620DE8319E257697E93E1CDFD27D560E2E4D34507020E2C
D9FF06BFA14E056D81DF701FAC3ACE4BE6C098AE116E079F0044391EC1661F6E
7A93B9320BD7F91E8FD2E8EB3F5CAE997D5CDD35107A1D35302260D1499B8B65
39625B7925F97D917B66BAFEEA992873F07220714F192839948CEA080BDB9A03
77B9DD032273DDB5629CB28B5D8797EDEFDBC601823E038384C90C79012A7D96
8F27784DA15BACE21501C26E3AFA5DCCE81B52B0ABAF71A35D33103EA86F2415
A39A830D559C5C6CA7423945BD3DFA942B20A06D7A8D8671F9831DBB52907AB4
4E54776D29C6085CD9970B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B8827109
3BDE64DDA024D67F098D6C1998506DDFF7907ABAADA1C39C759C850E0C6F8E89
A392D1C9329ACFFA92D361218D75E115F70A47C53B73B356D703E9C499AAD098
AA9C8119EE9E9708A9EA3049E976FA19AD04210D5F6092C7903FD155113F3A3F
269B746560F70970AC9F8D09956E0E84DACE4112C4E7C7F6B3F0B63D26EFF95E
2B2E9699D16BC8AFC4AD9113AA3A974C9E82E877288CF71E9169D2DCC61AAAA6
C536E5604EF0716F6487292BBB677518504B52C63822BED3BD5FD14EB41EE6A8
AD4B6CF90D39F98E12A765B645CBA3E8552FB9A986390212CE119E7C3DD675AC
17BD006144BEC534DA2A860188619F17589008409C5A309CB83FBA70F6446B6E
2B56991B6A03B1DE10C621591CEE45BECA27C54BC8B4F1754A9E8F660812710E
117850E1BB6FD89BB13F8CE391C43DA89EA67E9C3E7A4697790EA26B0E4E2E80
DCA508873A7AFFC11B8C02EF86C2316E8D8B6BCEA37F81A3A87546705F070C3B
9D4D28C366CEBC1EE485B8E2357DBE46E86C87B9939DADA60888AA9F1B92FECC
CC1C198DDB594BB70A8FE690ECAC21A414BAC89BF019F34D2A130F485EAE35B7
2A10C67EA3A48A4D9734759CC93AD85C6A570500AE5AC9973FC76EFA06BF5DDC
26E20E28D16B50957EE01AF2653F8D860817967AA5A9BF9BF7ABCDA710E9F34F
4F0EBCC32B3C9C2971F6225D2DAA6A451366B83F32B2ACB83E746D365B2DE38D
C1AB7447FE7B37F9630E410E5D8F0ECE74DF46C538947B3A167AD9F3E4A7EB3D
60F5425AE75AC3A27D39311DA35696C3DC7282AF1532E7AECE63D13DDA0296A2
01487185FDF1875AEF55A36C17D6A8DD329279D229259463A2F05CB7A874374B
E2320E1F6CFECB9C1CE62FF468C29751ACD9754AF1EABE8E7696C2888914416E
235B6766F20FFBEFF285277B639A51EA2F2E30D207BC891B00F0436008F980E0
9EEE7FB375BB069B9E0BA11DA951A99D8E60B4F920A0495C247FA7DE904765AB
DB5C3B2D634757E43EDD6FAA4DB3C67F82D6853E1170F0B2D8CE496DD4E72B0D
28277BEF172F1402959F64527F9B640619F04416DDB9D05FB2ACD019CB9C119E
E544D24EA6DAC5C69785394EA50E6EC9AAA9E14B904EAF29A733C6D7942B63F4
85729686742F26DEF78DF0DA1CA7CEFBB684F4CAD99021A3B3D1FE03B9C5A4B1
BD04CAC89BB91B11952A2B17A61789BEE0C54B46C03FE9A1AE73D17CF94BA30A
237C29D414C3BCE8E3E2DDF83C0BD59DCB66C4D2C3DE73DA8378F3C6C8035D28
7464399857E57651A53E9C4AA68DFCA91B2376CF98AC5290FDB9BDAD9EF1604E
9B0A70EDDA1E564B6D2456E7BC722454ACA8C4950FDD44B6EB9AD01169A9F845
B06A0DDB7897C847A5B1F42258AECF3807AE936C8F52C3A7A0A85D68160AE442
FE81543DA6702D76AB6E8701F80DFC1D87C961E350D0E52AB2A298B9E5908600
7E14D2A87309043CBF13F69AEAAB1BC239DEA88EB5176624F6046664B1D2691F
FBB2071D3706F97DCCA355A6DCC4D09FD35DC078FBAAF672FFDECEC61050A120
10B5A96629041303FD01ACCC7686165DED6AA712FF8E5E85DE33C4E7D877C49C
6C469A90410BAF60BE65ECD91CDC2EE7AC0CA8BA7B53865F26092BFCAA0BCA77
B80DC51DAD09C93C8DD8E43502B4B68F3D5918C3492196292447732BA90F5AB4
9F5E1D634ADE1CCAAD028DE5EBA9535F6FC5908DBD2D643E0A7E059C8C386FDC
E72659C0033F535C0D7F6B98D0335552D0BF3C6E302B672A5EAADFCEF81912E3
8F54E6FB7EC2B325125159713D0AC50DEE3673B9B148643727E94C80971A2E73
5E1E13237BE69C84FC039DCE02ECE2668AFD047F21A61BB94A9F498C9FE5CDEA
B274B40728B6F6CA9B6C15BAAF92F465B0D7311B46545CBA90D874839443CCB9
3110F052EB247B24B45A3D2FA6FBC7EB2A4BEC2A5892914B3C5EA3F4F9B9DCBF
6F932D95700E045B49E4B1F2C9D2A42CF39CA2F5A2654E6E8E6E92473D28AACD
5E35C6705EA728F704F5996D286BED433F976AB7E018621A577AED7C0AC0A84E
A032FE1869F603E6F20386E3A190A30A21EA886249ECF8CDDE2C33D73BA8647A
3DCA7A8DD9E8EC8D9A415D126BA38B6771C489DFC419303EE9C1B83FBFB3A0B8
97D64F30E4BCBEC24DF603FF3BF541E00D5804B6B6543D3D2B661CC551D497A9
9DFFF535AF424B2F3150BB39AAE8CDB306AAD37767BA10BADB031DC2FAB16955
EE78342CCC0E8B5976BF98F215461A8C6F63EBE6E2F1A1104662DDE53388CB51
8B44F3534853B8095F3B746A2459C2EF800FB1EF7F235EBAA9731E3AB3BE4369
1D3636E3ADD5BDF0C34FA80E90D8A1DDE770943FD196E0A7C5F1FAF6970B34C6
4673AACA6B2B5C12B9608521AE736C1F4B97209B063D991300ED5AF3D7F27E76
68E0B858FD8BFF86581E2B9548C691E3E5D9EC4D39C9715CDE86C7D22223CCEB
8A38C776A30AF14912390A7546DBECECD7A687D4F08646E57A12C80DCA022B7A
33399761A50B8E0ABEFA1163EDEC3DFB5DA3248792EEEDD894872D4E6814B4C3
548BAFCDE0CABBCDB97EC6D1BA47F2E77CC1389BF19D73661749AC33F46A618E
A665A85776545BF9662F2179D7BFD604FA8EF4700591AF3AEC647E27B24B76F3
133F9198DC15C1AED830E737909E43EB91C334C44BA35810007A3888E33F5DA5
B3B2C35481C648AFE630CC3E08F77744E401B2934E407D1EC17ECE737606B076
F8DE8EF3344F57495EF49D11580D6FB28AE0B1422521B320843B13467501CAE2
3DB93D7BB779F73B6AA30050DA74BDBC3F8DBB30F32EAFD07734A151BB2BAED5
C9B1F790059339B64BB4146470F30928C9A49AE88906BD6FDB7431A4B50809CE
0F67ABA01CDCC2320B0B097187B9299E3D80CDD7BB5DD5BFA7B28D924C5633C5
45A23CCEE097C41C3759C1FA8DBA0DD95034BCA89BD23FAC18C70093F40FF2F8
0FAC5DD4835F2DFD40540E9A9E9FD951A8AF2CB766597DE00147B163BACFB7E6
EFDA4DED594F1C746D8B46A1145E0E4058F5917B3F21E9BEBDE745EE72CDCA64
FB31EF7A2E55265F32559480E2B6726D3DE26FFC97EB4E3160F117E890C4B2E5
8DF310E6A728ABA85540F571C024F8DD58E1D7827FE97CED5EB31547EBC36415
02B8C0E10B7E37D816F01D56A364B8552CBFAAA95BC4BDDCFDE91CE0EF005B4B
7AB56FFB47A093AEDF0DE1EA48FC8103CA3CA1470864D2693E360006D05668A8
AA422CCCED20DCEEBEA5CE0DA1EFB00FB93E922B18124FA11A88D0F6E0F719DA
57603DD5DA42E1C56C2FD9E5415AA199D4F334C151C1157E75C107FBBFCEB706
5F4EA47A29B54ED8CAEB8DDA2F53D2A703B95487619780A52DA1270011648A28
AA64338E04AA5B92C1EDF3D8DA34FA6D227A0325EA6F22E9B38B6338C657BB21
CD4C582DC04010330F62923F817E4EDC6E5C0E6500F2A975A8A95BAA30C4A134
BB31B5AC45A2E7F6E9CDFC810D41344C4F606049445F8E93D74271C1E29DF7CB
5459593BA28AECF64D903D3E4D77CF5C04B06DE44A41EE4D9FC769854503AC85
69E4A5106E84016DE3D59865D4AB30BD6C9E45C45DCB5408421CC50CD6179C85
34E55CC70FBD8FEFE9F1D5160664981716E3BC7F24B6F54E0323D9BC4B692971
24419EE62D8B0BA726E2B4294A9A76F328B8101DA29E78BD5C4AC383350FE196
4D42DB1653637D19530124858950C22F1E9CF5BC07D46B7A58CDE19CC88DCD2E
7FE4EEFD8AA6047E919823C8CAB2EF5274F45E861E6508CC11A8AA90AED2403A
B2BF1315C2157B3B50A3685205D93E40906EEE9DE5985405974BCE0B84BB37DB
080A45C5237B269B93C0A7CF294A18B45464A41F604C494CBEF829A381155CFD
71CEEA54CC39EEDB6DF58A9896246B09F95DC6BC40BA6916AAB5ED3D24F66154
3662F8978FC63DA9280FF7ADB09EA5BA79D3B66E0C88BEC1EDD78DA93839073A
A4D7B0E627000C4ABA76C47CCFEE92E319315333A5584A951E34C55412049C4A
A5569FE65A006F77B416E0530AB6A8E7AD6C72340AD4CE25937158FABB2153EA
281E1D840206F5DA38E00815E9081F81DAB9FAA8F4DAB305867AC84735DB4F52
A36129929BD2084A8EA37BB6889695204BF7290B68D5E722540BF8A276F8BB6D
451D582EE59D2FF03F6B97DDE05FA00C3D375D2D0AAC8FE298F85CC067B15481
48D70B6A0354C705715B891915FE8EA45244677B9FCE81E72D66177E309F3F83
F744B9EA9E55C3B30DEC6E5E03B3988FD526A82A5E8E1DC79127FC62B2FA7949
B3AD3148868DE22BD4B5708E32CEAAE6ADEED1F463EAB9692411E18F8D6BF391
126B2700B4CF3B59D02E3F8795130C96285A63FCD1E0F647ACB1D35E9C58BD01
1DD06BABA00CA4343BEBEDBE677E053E9732B33A7495DF51782A07DA07F5646C
770C957AD915CC70BA8E08BE7A1F4E6BA5BB9C603E38F6FB0A2578471C4D02F4
283069856D926B9076EC73AA39CEB0A061AFF1575C7093FDAC9F89C3DC06EA45
06F3C2A3BC9FF21128B10CB758DF0F099B459A5264A8C24C098110D2BA1A8532
8FAE146A91BA7D033F591AB1A94B8A6FE0FFB610F698D216D58B4EF6C87B1524
8037CBB7E23D8550A620341C6625A1A2ECE7CEE2598D66277F857231A36155E3
984F147783E9B93975AC38A29F2FBCF704C8A04AD84C3E04A12D2321FA56811A
5B6744813CCC187968C5C26BB8D3E6615A912FA5369C01CCF8C0DB790593B190
1A90CFB5339B8771F325C5FC448D36C7312B11A15A8635BAB59CF3CAD176131E
026F6E141B2619EF7F3048750CC9291397F141591EEC8B612D6656DD34DB54D6
DBDD303CED74BE76664E7DC86FCFEEF2001C9DBA56418FB61F589566A47AF36E
C94671C5E8939AF9F4D53C0DE7142B7B63C86AAFA65877EBBB48C64589AFB2CB
1280AC099FC48058855CBDEB6C2D2A0D092267996591DC3B5EC8252984E9B27D
2E9EDE8CD8303F0905DBFCAE497DE1B755B924452CDE11CF4F20893DD6FF7251
427F520FE00580DAF1703FD968E0F8ECCDE618E1EA5820EE6CFED97C78864EF6
26FAFEEE194A268F24249D44829AA360D731C34DC285501E966A959180718F72
6330E4CC060588A2F65AE64A720DCAA818D49D4440F5D0B6C1F6C3A107E12445
F1BED2D3FCBB87A9597F01C7332AA79143564056219BF87D4B907A04F77621AD
054935E883B2B137D3D1C4BC792E8335CA08B6D83227F35736C41312A0BB077A
60FC6488C5E02FD51A10AC113D4EF70038C649C1677B2204A77F2ECBE9B3C341
F4126BECBCA61E3F3801F9188A3775924A62D30FB096B440286FA655EBA00A74
9A4162904BEA07CE68EE76018346DEEE20839C9A2FF71179B58E1D4AB30856B5
F5D97295A097174467010B15D733AAC5813CAA633746B430B1AAF9F997FDAAFD
436844D1A56B8E25A89D2CC4BA6EE7ABD167818FD4F6C747E07B262C99EE2C35
323F0B471586CA50F54C6381B052B15B0C58C19DEA82C0CA29F00400B727419B
2379979CDCBFA966AD513FA903160C571C3BF1BA239540B11EF2371A3880837C
6D6CA2F374280CFA1586427AE975A2AEC34244874E4D441DBAC6CD1828841C91
069AA87FAE849C5DC7C9EC1B9876E59F3CCDF8BB23D939F5348D7486934BFB02
CC5A22541ED352616830A510DE7732E5D8F7E785BBD31C2BC9D348CE5632654D
2C1740F89D57FB2AA1FD8FA3304EA03F757BB8F498ED98E48485722E78D97B12
A05F3A28438084D1CF90AC4C3FFCD7B3365941C45E1E02CB13CA1E99F7FA1D00
1C9D489D5C95F019AB4CE89FA3B6604473DBD2CE8E278969E0A0FCBCE68C23F6
9381882443D3FC16966555FC222F3FC4B1207522201AB7A15A7A6F22CDC9D392
360BF4C95DAD35770E0AC7E5EFF015F2C74ED7391F40EC94B8D1C163B5DEE5B3
911A20C2625AD3B24BD94D2A42405E655DA47D3F94F882CA2F479437B4E0BE71
8AFA4482C6FB270F8D05B4599A01403DAAA90C01DF3AA7C2BC7E66AB6AA833AD
FB6E5EE13E45CC7CE7E200FBFE639F9CFFF5D08512C02764997FD28368969BFB
0876F236EF6189BE73AD827332DF1B2EADEAC0ED3B939CE5BC3CEC78975FC636
44FCBC2CCF4396AC7343EC62E0E4F3DFFA2B880BF31D93ADFE201BE9CCEC8BA5
0B9B919E05B851E0909968DA259EECC6AA0743F25247978CC09C28C4F878E29A
5070E4023BCE95FE0ACCCC01D0EE219FA8344E8F6D7D4347563BF8AC030B9097
41F24D4BC9494915A82EE9FD37FBB6A46BF077B728FB569B1258CEA5F51F36BE
4F4D0F890D782E44748CA3FE8C8A515998371D9C7D2311F192B4B7E7C68FC6EE
3F7136714C282A2570FE591F247A08319CE9EF1E43274E4E57166E31A2ECA506
85350DA31AA4C33C9687F5210BA225EA1007C444FBFA2126769767E47A967884
9F68589E4BAA9ED32A7A466DE35554C132810C68ABDAE536D9D884352F28EA02
8A555D2CE11F30598F44A65E2D86B43ECCBDEED9E4E5B5B7DCDA20EAA09D9FF7
422FC91F2201431A9E8FC624FF44D26C0100183D77BC7E6B1A6CFBD3FA8BABC1
AE4CB0FD382E26BE0A83169B46D91429DCB746A0326243E212F802AF6A56C709
6E70C6C7C0263765D340333B5CD8D1282FD5B0F5BD4D40DA12A5CF44075F33F9
BCC0B4C20EADE30D0ABB3562C00540200F056E750FBE2A926A2AD1F1404A836A
80D6EFC5EC8D8AA63CF31C7103B52291CE3652135E6D0C6120690C10A0D66997
269EDEE855DEBAB31594B5B3CAB4E8AD8E3CD846179D520749F5EFFC527ED32C
0E55F1B73C99EB74EE681A7F93D358A0A404A2ABB7E6587235D629087C423768
A73C965896B20DF6D24B09796B7276BA383BEC244758687A7C10C21F4A7DD9C1
01238A7371B619AEFE9568A47B1B0321D7B063D3812D1BCFE49265EE7D80B620
71190DC9EBF71869FF3388F7D552541A4E19FD984B62610D9680C672093614EA
AFDD3241272CE55D849D558E238314AC26878EC287EDC6AFD82013FE0A62A007
920FCFD36DCA059D2248A9707F2960C889E3B043BDB448EDA081BC31EB7A0502
D99C0424B5379CE74AD419B077F176462D71C2168486EC8C6D15F900235A4671
15A22E8726712F25A5426AD5DC830D0A4290EA27287316CF65DE83DBE72FC5B1
70DA341D15EEA544E84FEA2C7A4ED7FAA28C429E9F6BFC1A819FEDB25A1D80E4
EC622BFEE8CBA62C3B6C56424D24F79F905E65790AFF26481DE3F16882F35008
47D5476505ECE438F330258E029DC9AE176E6C8E4BE29D63D8B1C5F64F673635
D796AD9D3548080DBD2CEF8FE388CBE4C6D5D874FD8DDBCEF060E43A4FF306FB
A41CB349F73B61E54FCDFC2A2CBDDDE26B4B8518F6FE835D7ED589D24ED15708
ACB36FC4DDE2D8ACCD62C2CBF1E7421EA945149A92D611C367AA39AE63D529E3
48A73C09D99302627C5B70A871A07A3F6A8F3768A07F969B05D79475E73FB989
7AE1D6C42D3D0EC7F36640652414AE01C96099F27D705B96185FB251F9D51097
731D24AEA865629D7712746F89A02DAC58D6DC04A09FC596B192B3466B70426A
CAB0D7237E0D3B53B0FAB841F8490B35F03A62D81EEE84158D7C8C47A6176E7D
F871F057DB8BF14A981EBFD3F5BC39A5DBBE04170F19B80136F5091419D51916
54139DFE25CE8FEDFF488E456CB7243C3398FC55170390B02D42C4AC35F94052
1CE5FC928C41A0148DDAEB1FAA30D49B1C5ADEDB77BA6E073E32C72975F8B990
E83E1C472567881D92C8907DB302C8BCCD0C0E18DD9349DC022ABE678A7F2EF1
2C7B33DBB52BBC262BFAA9F316F3B5981FE4CC7F0C24316B43E6FB01636D4F01
7232FF2DBCB5F58F55C9391E73AA1646B2A3141D21D726F4618030A0945EA261
7D311927937A54320A21BB7B9B239130E53D0D1AE213C1252952F3CE820AD5F4
5A40B86DDA8CE7DF4A75EF15C51EC653BD09DC12C8133987444928A966DD4860
4F9AF31BF896A9CDD3DED8ADE03CDBC9B8EE03F1A51BFAB2138516D0D3DBABAD
1B5B98AFA532B1718024367EE4B9BD0A31935C33F35415BD01E26F5230466ED9
D9D0C2F6B95E1CA9169EB8426EDEFF7435DAAECB02C4708D9F514ED476D9A1E2
4135B4B59699E6B1C082B6A781838417CEAA2435032F529F494E9410E042E484
EDEB61FF5C4709AF4A75D8B46CC618D7F2294E42FE96E68335549ADFBC4D69FA
C4803871C4EE05F9D1AFF935956106F5B3E69EE4CC44953230575611A19C7B4E
F6DE35100DC359A7457E79B94DD529B56B49ABF56386B91EDC3B1142610DD358
BAC967CFC006EE810FA8FAC1DC185777FABA5BE221D733CFF951BA27C4BD68B5
107D4E42681433A6D785B06DF3539B4EEC431A6905219687962A03ACAF5F13F9
DD5DC31F54F18C8BD04C8023A22B5D9AF272795526C00264E3768F1A7B571D95
B0430B39193C91F1AAC4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/UniqueID 5096649 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF0F096DC5DB0696208F8543514A437E397416E28B11F692521A6C01140D481
213BF1E96355950EA688F3F008193DD61970FF4E5518814287AC06CC61F27C9C
18E9427E1B368FE81FD75D5BF4C13CF381A7861A824A5746B5BCF0A4333AFDDA
5A76A9CE9489F815CDA35E075BA25F7800DD3E376AC21FA581E86060A0AF7081
B9BC621B017F11AAA41256E7E47DF9702E74279DB16C2FF516A48B38592C99CB
9EEB003200578CF8D9285976915477C4A741FB6140B88E666C03704FEEEB5ECD
C27163DE1DA6F298B099569CA90A69EA708A45B9F9F5F6A4A457273FD83122CA
B6ABCF8C55193AD7F5153B2840432231BD333577124D9A3EF42E6F6E58E806EF
68AC0D0A127544B1DC50D055448BDD80A1F67DCF9E747C4EEBCE8C1940FB7088
3A4D4B5E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/UniqueID 5087383 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 21 /lambda put
dup 65 /A put
dup 67 /C put
dup 111 /o put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF728D2A654E52B6A6C90A3A
725F86627D7C3EC5AF5AC512976D35FE42AACA3FECB401788D0BFFD9F4743BB2
EC5B4E7891F216DCA5A69E917A171E0069A03FB214ED307DE947225049D46E0C
4707503F09811A597A9113921AAC23AB1CAA9866F81A02BDF349FAB129F23E86
E384C043053055938D42ACBF9F0EE86CEBEB011BD5BB7D59357E5EF20CA64AA5
E32C932BC8BA597594FC4123F0D96C22F0406FB05614804C9235E20F8FD5B511
AE73943146668EA6BBE624E29CBDF8CB0DE9A33BE5465E5AB1B2EAF6BD3A58F1
056411F63F81C8B38DEF246029E8FB7A19655379B340A2C932436B1803DC161A
9A088AB4444B2E7358615C9553F9610BD5BABA9448861058FFA1A3DB0C224267
249F2EC57FE2194682ABFD216D16B75A22ED780ED44A25DDB312FBE8C9DDC40F
89BBE71AA12634475823F83E1F6DDC672FE0FAE586BE8BBFE8B5F58F422BC92D
E927720596DF23C40814C573CBF54418840C64F557CCDE2398A4C83E9FBD43FF
FCBF3AFC61E7F961C33EA191CE06F2F165A50513158B46BE8F6535C9847F2F21
3D6587F1B2B41AB6BD6CFC5FCAF1D2282502E4739DE95115806C0118B33B6879
6FD2A6D21856EC3365408424213CC9DD2B91723A5ECAD508889518B6E3E3046F
93DD323D383B015141ECF7227DEC6CD9D5F205E694DF7E07615B63EDDDF0CC09
E55FA74FEECBA3B88ED2F7F2CF2773B7F7858AB7B0E1EAE4E1458C4833C6A900
101A249176646FF1FE73650FB06740DDA1F8B9B0F1271F28C0A36F3947906496
6DB2E861AB7A3FF4CB4119E3AFD9FC0AE24BF0811428C9AFA1ED657DFAF4D563
3B81EDD4AAEF504E75A737CE0632ACA98695E30311823A5D21FE69D794221A7E
0414D87660DD7D188A654DEDBFFFEAE2EE1470E098AF08FC08126D027E064AC7
F0726C0DD2B9ADD122691C6EDCE0E15C4B9C2BA96752426193314FF61341DCF4
5426D0F6D07C29BD552AA7C07D1D0E3097A05877E03C57E3B5C37824D4C02333
ABB3425C7AD44E4A4990E6CF031B0BCF7D5980FC76B3DE8791F2AD3D77FC28AE
9CBDB2B79F7EF923A9C4CB07FFD877F494933BD6590F94EBA063B59F95F09CDF
A22CC828C6D888275C45D80BC13DCA6F6AFF9296708615DCC9A3CD5C93F97D11
F545ED1AD5498ED51B2EC99EDD1DB8ADD7E6A173515BD2B122A6D105C94B5BF5
4D9E39F553F31F6918DE497976C8AC0945355413CE5DDA3A88221B24BB944A6C
DA594425AA7412A630D0AA414092E1B194E3BA60D04C23913C4B8D20B1610C22
76F29296D080C7034F115E7933C8F3A8906C480C31D757A14729D77099093A89
DDABE7D3824F93ECFCB0AFB38E4D497278A130C7EDF04099F51FF97C7A96EFBE
87C2E46638209102B91CA99202EEE204E789BDF4B71A39D377C607D2FF1D2960
9E00CE120231D2C2A0443E78110DD0DBDEDA2C1D28870C1ABD0AD74ED472C682
1D88F7279A42F2C4362CB5B295948DEC644916D8316A90
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/UniqueID 5000791 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DCCF222C2C481CA44F0FDB78B3EB4165F3CEC5C2A056D1DB93172C4B72
816DF9B504269EBBB0E991BAA89D8E21E4E48E22BAC83A5EEE833843B49C6B7E
2213C6BB5D5A06B5A3456EB0D4E22B8120325DEB5FE283D467947D5267B77FC9
5F1349E6125A8F072ED33FB0F303CDDF08B6A60DC195391760204C96BB2C5C99
6EE9008BE9D7EFD2B92AEF911D3BD0E165B45852851EEFCC0CAE974157B24E35
A53D5CE86978413021CBCA7CFCEDB934E526C4A7D578B105309DA145A55A2CAB
BB5B97CF29C9511BBB9E92830D31CCAD135591EDE65EECB2C67CEA040FAD8ACE
B9CBEBBEEF33FE439A7FD13101A5846FC7EB6FB3ECC2ED52E8049E6CBEAA6F1A
4C98E73B0779BB201001C6A77250C2E5BDE047672F2965F4E6CF01B299AA5A89
50291984AEDFD71602744FCCE3D54A9466922FC625AE3CF4A41FF91B6F0FAD0A
69EE0C7CD6AA7BCDB3C529F90283AE2AAC5C48C70EDE240E1BEFD1C57DB8EA31
BF350C91374F51AE7BD4304FFFE390618A4E2884EBCBF3425E499825B499323A
1C4070BEC0F4A4A7FBF6B5932EC254CDE301D0AC73E6A126560E1C4A87F6D1E1
9F8548D3FFA8A2ECAB80F58697DD253117825CDA98B644683CD8ADFCB5D10FA3
71AC5A07B75E56DBD5629F623CE5AA0EF00B430EECE8F9576FBE6455382B2A12
BE5532EE70CE80CA0036480312FB881BFFCE9413BC241BC5BC4AF50A2E69F22D
32474B8F0FD92A5E6F978BD753C1956B5F4DFE98E23ABF2DC63521D8326DB780
726AD3493CCC4648C7CDA5173243BBD78844F487A568FCDF42CC90D05A807F1D
8249BF932E05C2EED8CEBAE1D657CB61CE2DF9D5B8EF16AA031C0CF4ECFB2404
6A444233686029BBB4139F64BEB4265F7D59F740C217C75B5737CB74D8F9AA47
5D93208EFB2A937B3B0FBEDBC8D83F9D04543742C40FDA31CB2F1E2DB7CFD9ED
FA4015FF3CEB81D23CD6A5B3DFCA215F276738723DD6A5C2278306D5451B217F
86507220EE74BCB2DC287840236D3F91995367493164056EB027953412F31A9E
41192009DE8487E43F0206A91C42AB69B2335FEA1D6FA1C3B8BAB809C6B07E8F
2E824D3B12140714A2DB9F4DF175AA96C362B15822AFF5B3177473A6A869E4E5
84D9D4F0343B23A3654AAAB6B368A556811B1069C62C6480519C512896477117
AAD31630E271DACCDB0801DF31D413441EFAA81C8F779230022C92E2E6BBD025
325A2DEC8E69C9550AE3A9406BBC5F62B03E02AB16C094EC3609E7476DA95EF2
5FBF5DA0ADCB71923B75112B1CD0830CC68D06CE2AEC7A5FE1D14502E3BC9775
A229A0CECB6F3F85B65D6E1333695DD3C672D0E26B41951D9B8DD05DC883D4EE
D1E206C7379A66B7E64BC1F8FFD9D47ED88BB632EB545856CF909E30E689B373
9CCAC96760FAF5408CB97FEB2DC8CC3577E20D566FFA83C4D98D592F55C811A0
9DFF837FE0CADC0277F107DDEA96C943267DA860345F4E5E431ECF55AC5EBD00
3858C50C3E073F18BB2C2F6AB0FA902790D716AA47C593DEC270698B58B366E6
E2A3A8FD1CA01831A798435EAA496F30F34A6E098CE162A7A7DF2D6C01FC27D8
05CD42F20D2978091FCD75044189DB05E446DC3DA1839612B9D8639A2114AB12
A4CBD37FAF13E3D5287E7F2A0FE63D2C443075E3A76FE9917CBD23A9CBE40602
B42122B3402182B7E150E69AAF6BB795C939F6A4AA4129E14A2F758BA1640894
6967D6F585EDCD78406AF9849B4C62A34D0C2886C5C42B83BDAF8BFD4A029B4A
A3B9B3B6D37734A41A89D04AC939392F3B87E70DC2141956913C68D0FB1C785B
58ABC1AC10116EA8E326A030C331FA875C2016963B46E087671C212AA1315234
9D6CF4D767B5D3153C652F0C8A6A70B17D9E46C1A66DDEA1753E08D7B35DA17D
ABE591F5A98CE72828D2F6DC15F9B83E2199127C222EAC709FA0F494E62DEDA8
4227B81E29FAB74DFBF7235A6005735C5FA20480355684549620851188B5ABDA
B00E5722E297BF146F969581E99D95CBAEBB0D6CEF2D673443436717CD7D90E0
511D3ECBEF664543D8EF613C1BE054459E92F6652D8A766C3C65356F0CE25A09
1E4810CC0EFFEA75E2684E003930B2B04082F51BC9A915E1E7297D9E83A43EBE
2E6058999CA555F05B9114BFBB9605E5731404D6D91756184062147E3A2B0202
57E2819D6A0F23FFCCAB72D0119BE67D7062D9FBB98F3E8B0A574A62E3A7F26E
A95A53F58EE91C92E8AC6BC9FED38E6B6972676D97618DB1C492285899DC9363
0923CD601E96E7EF3C7A58DF28760C1F9633D5E8DEA3F80255A5DFF4CB515A4F
FA44117A1D1DB45E0F8ACA2B1911C843AA204AE703DCAB20D144C1FE47B62D7A
817EDFAC2DB1213293CBA791ACA4B60217FE910216F9AC5BCD4107BAD04C3729
864F8C2403C6D0AA098AB17874AA85FD188F234562B029C1D1916E1A0E860FA9
6A319056B6E5B9BF421E82FDB59E25EE98A0AB7B7E45BAEF726440C80A8D8372
8F5F66679147F53E94BFA0E0E3D21FD1546E5E8F60B8ACFAE1DBD39DD152DC5C
40A04D6939CF02BC88B61F6D05D5177EBC2D6E465B2EB2502AF87BAFD3CB3CB8
9C0038052EAC4768B0D4E3638E770AEE13FC18E53BC6E0FBD01798F16808331D
EF2D06704253102178DC7A3707FAE2B4F28EE7CF0992171376932015F357B024
D6F2730CA82F4DBCBB7AC4BF74D43550B934CC5F04C8913A36BEBE4AACE4402F
A5E8D1E166E4345846B8E80B7813339141D2BB7E6E74F00854D871169BB45F0D
9ECB5E31A4F7893E1CB2D26F5B79F8E38626390B8104175ED361604E4563C2A9
45A48AE189
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 21 /lambda put
dup 59 /comma put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 76 /L put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 101 /e put
dup 112 /p put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D9154E5DEAFAC0E2A8
2254061A7EBC7FDF324AC9E32A78E7BC929ED76B2416F30BA438505E6A75B312
60D23C7524139B3ABFE5FC002615169B8C51F03E409DCE07DC3800AECAE20BBC
7535244DA77B125E54344F3A4445AE789B7AC3D3D16823065C7C015B9D4740DE
E10B8FB72C2B7969916405A0BC02318DDF78374F325CE89306C580D26E685E83
F3B6FA63CC9C5197AC517385837B3C3205C6D13C396E0AA75946FF8395F1D0BE
B779544FC91C4F9B4FD186EAFD996E0AF1A03F38BE3B7CB07DD01ACEF149B0A7
B73FC4B530DBCB2731C65F012D7CE1BD71246CD691DC68D7F323855361556BAE
F784218063E7136855753E66F09F38B7940D5A0FA077DFF0C604786F5CBB19C4
CD95E32F3477DEEED50E1F3D7E66141C1AAED62FD27FB43BFD1546F14E7CF814
003A12AD74A67914B8B6D27AC94B90E4E9B93A88E4369AC888D0C82906C88F21
5A0DD496F4C043B4E55E1D98810615B9D94E5DABB9217FF1B3FDD66303D2A3A3
28C82559ACFEDC9B277D482E0A92D8C6848D897188B3B3C04C67467A4E826E39
4166C58CD0EF327E34437EC3EFAFEE0F00BBE78A8CA08F67087AD422CB7B81D6
3E2357CBA1FB6ACB53C410989521DEF2EEE9B8551DB0F8B5FCE7675C270CC1DA
7EB387580C1F9F67ACFDEA4F7B8E21CDBA417DE5189EF681EB69C3337659FD60
AF3E67033E94F89714B5BD0F09DBD5582B4AAB05CCDCFAD46C59995214572241
56B9D4EC7500C01D95824C03CC5BA24F6E03EC4762E3D784D61563DFA29D2449
B5A48FE4896390D67B542301AF913E085BE8646757289FEE62A183D3256D0245
E1A6C8F230B418547BB7B99EB09FB65BBE62B18A61F9827C7A5F995643FCD376
9DE4127CD7492C5F46294ADACB28001A16805A2F90C72000A59E0580FB323E96
FB2097043CDEE821F97213667041E1A0F1CAE0FABADA72C87A570D7F86A4DDC3
120C9A9B3C6D6F19020FC8BA7674509F08BD32A254ABA6CDE4C7B209EE6C8EE5
4C39C757DBB3FB56193D325291A65A00B8AC10012CD0B2CD7869A304BD6CD208
B6D9ABAF6C91664040D8B9F35731D0631454A9C14C21E1A933D57F5479C6458E
2BCA57EADFEF5DBF40C5765100C24977D17B0DED34A057665835FE6B7D6A549B
13BF48811BAD0307AA0ED5A1762F9251A8875E4493328E849DF6373D482AC6D9
6C5CE55774249610038030E767DE73497A3B48229E5D9112B212028CCE42E864
357D5A02FBBAA01F85D3A7B2B68FA785F0A988DD98C21FF56C7DC9ED4EC3A007
9189FDDE507D5BAA6E9BEFF571CF2DF5BEBFB55205C4E3E795DA4C24465EF674
02A81750A66DB0F4923CE5CB4E90FE6DDA29C9377FA130E7243468832B2F39DB
B1386550B629292E7E4A1388F809E8F6BEEFEBAC086508D53A11251DB7233155
DB145E2587C767C119F24F5CD5003CB5F2E6C1C1C4430DCFB2CD64CD0AA9DA56
DD423FC8F3BF4C80E7F91176C17B0B67CFA4DC51325F768851AE601E2AD19381
7FDBE08239E048EFB79982094F244A1530966CC728D6AB21C77CBBE6F542DC5E
E78566ADA2EDF6B3F746B722C5C633BD6A4157634D4A7B8773155B011E146F0B
DF7D0A5507E61FCDACCEB3668E31DDE951EE4BEF302E08A1D72F0DEC8041E86A
5CA5F0F3CECDF5F8B1BFCB583495C78F81C0A5BF918FB0E103D896664272697E
B452E0EAC3A4C8EB5BACCB3D8F91C5E2C336CE4808A2E7B1D26D9CAA7BC17719
15F43A7CC872AE4D94A12B0FA82028F12F48E93DECB223BA562BD0056D987A35
065C3ABA480200681590BA36D89B61453A5C43CDE1B013E46B989286999BD9C4
FCF5316688170387D3F76C4B14F855F18B5F81A28A445053783BB2AF0A422D95
DB8B44046C04425B55AF24BCA4BF520F495F4CAA9A157A0FC4FBBA77C5A8B7E7
8803E714459B7944D6436BCFF0323EB89B8F1DA0528D43DFD9958FAB079D5003
A445A87C6113C7B374B5CC830C64B7B972B37D69A64D9DBE21B4ADB3B8A22427
457BFCBACC7A57CF98F1DB40B54D0435CCBFA2C3B5492225443D7BF02B6C155F
9702949DBC149C4F98BD9C6DB033B5C6294A1CD2695EBAFEA361B37C2D92604C
58EE81BDDB9E35F6835127F973BB102DCD8B0FFA618E34D0AB3C384200272DF0
5DD8FCE753C36B4BE0A2B897DBFC787C5EBAE8F99A538134D488D9046AD9977F
DF084960A8FC80E977C727928AF83D5B7E65D5B6BF5B91563DE183003EDC24AC
7E69C2A4C010EF51D0ED20C34FD985B26A3434AE44BD7AC3A7CF0D5997B5B9F7
EDDED3EF6F3046478F187EBB5430F880C0182B9D1FE1DC5E010F5501217BCD52
5716B8D64BF2D2BE7A838D79D0FD82D1B924C6A3A3E452A49AE265A47E4BAEA3
1ABE4B0DB84EC437EE326A00FD7D3DCA359148E53D555B2D9EE0C7E6A61A2C48
4458327374640F9EE60ACC0293ADF8A875018873CC66C6095CD6BB7EC47D0FA6
91635966DC7CA6C6DEAA50FA519A79A0E5D929236579DA6C181F2C912BE10208
DC573A2A6728DA3D7B50AC0C056179B98802D9029F2750F84DB4631F892B2456
CA28501C647A47BA0BBC3CB5B357A198A786258C813CCCB7166B6ADB82C65787
5CBB722B6F7AB235802716A1AF7477B5C06596D35EED3650EF63AD5BDB709CC6
A24186E428B49391085F1F5DA2390A43FEA15117D4E7E384EC32A5154D1EEB62
E9A8DA0826346AE81E8CF8F44CB3194FADAD7A87ACF8643D3DACD6590F31C165
BD6D902E99815817386A5B49E78FAB813E0D90A950819ABE4D5E071356229FDA
70C87304DD34C7298A180D8DECFA4D3AE092EE01AD0209A52CCE799F27C63CE3
BCD233233D81C4FE760822DC43BDBA428A0F39C843DFD68E129E87261B37C078
42DAF284C84F86267D695026ED7840ECA7B3E58EFDF8F3566F410942F8C0CFE7
C7C3D9EC976CE47B7B3B728CD04DF04A47FB55A96AF96E15EAC65BFCBA85EF94
A22B7B5E070CFD974659C354C29FF702FB23EB9752F01823AD7B3F084C89E29D
3EF941DC5C6688A27FBFB7743C23481D022F86FDA0A686173FA1EB911CCC8AE7
43F92F0EA7CF6CA1FE161271982844DF49F6C532D4964033B257E1CD0411B769
73BAB6F9EAFD415E7AD9192EB29855CD84994BC279539FB5528F01ED9A73A692
4FFC7019770B29D74335ABFE0E589175555D2522EC2E40B021BB16B81ED5431C
5422206797855BEC0839F8C778C5ADDD0881146C6A599AE2A5D958C2A6198791
A03055D54312A19661F945C8677700D79CBDC07029020EDBCE2B793B0EBBEE6B
0E51483DB5B9A208D7A5E1A7AF4329A64A4966E26A47C46E5B383F60B95D83B9
7622AF765A2DEE9BCF5E23BF5DAAB2B2537A607E0631EFC052DB066B36EDB547
39B0ACBF75BCB9A20D0D2FC6BDBAD0EAE4B49FC788F32EFBCC844C0A67B925E5
91D91E4DB6EAC61ECFBA2163DF5AF9DA6DE5A10982047BCDB5ECAC819A269ACA
CB016BC1F752564A0A575DC22B259517F179E850AD54A3A0A29E9DA3625EC2B5
21FEA67E0947C069957DE29DD13D0B3F667EB93526FD522B58CD4D58F515D21C
9D03779B66202131C80B7FEA77F219E7D657F033D6C8F0F6B50F8A5D67966B3F
FCBA250BA4A2227B58C04D28DBA69DEAB34535817DE1CA3CB19BCFB4250F92E8
DE51AF0569CF44138A503CB7C20680C29E71698FF7D900254AB57584CCFFFE31
DB03052BD25A67EF376F6DE3799B9519A339D27F924D62BBF5DD3386C8B03BB6
7803BF2797BF425BE80D351B415C4C28B871F2200DE1BA98C529E5C6880C3FCD
29BF7597A8DBF059E11082A3F49A7D10EC3502BD269AD04893D731B06B364056
8B51C918EE4B7C7AD01507EE54D803FACDE7A77B45983A9DE88CB6F9431F8EFA
3E673ABC377C5A0B247BA34E8FC12744123F2946E885547171C4B24BDCCE1747
8EE9E89C91A0DACA53B67180BAD10021E0C993CD58CC8A596E994F47EC3CB6B1
2F1DB8BCDE481F9C6765322B3E28E5F6ED07FF869444CFC63F7E471BF0D7301A
9AEA390FAECB67E4D73BF5CE600EA2442AFAB4978CD9AE75D87F3EDD95C3700F
695B79B83D7637F8891FAAEE12B2869DC5A7D0E8997660E5DF46B4494D36D844
95A8AD2F2DD051F0A765A7497F5D8953822E76DD49F7ADB02158BC05CBA55234
5DE3B21A0F6AC8DF7A1A848CB5E9DD94DE1465F5318343FBC95A0606EEDDA137
27A0485B935EFE687576797F8AA65383C8B274A4280A2D107258469C595F5DA6
51A07E672FF4B56F8836D9160BF1CFAD00105938F15801EE92C54DCDD5FA9A7B
6E0F00818594FA547B5ACE24D88DFF7A564A0262B2D18D418765E12F1145549D
C10027E3FBF4FCCF8D6E67F9C02C82C7CF9BB6A06D2EAC5527938582B60408A6
2171C5109E4749864A502439F7C53687CFF232A0A129E2336177A92781A3B0E1
512E67D8DD9C153D019522A0C6FE8F5F3D5A216C005F27816D039B2B119DA89F
CCF4E29C922CA5AAE010D75DD7601CCDF1608FA516D662F7CED8FA9E1C86F921
0451D7D04C185291393C09B8D4C5DBA19F398D1C85F8968890765707AD63AA64
0D1ED2EA1B4C08B71856C2B366D6536DE4F4E7C30D67929F1BCCA1FD3CC62E31
ABF5AD0500B88280CF6EE1AA7BABBF718DBB119669E69F95BBD5ECA952BC513A
2D76D0456F47264941AE46A9FFFCCBBEEA08517B58FA3DF47EA4161C49CEF799
976449DC6CB10822D80D8FF2524F3B7A039C88C9ABCCDE3424BB5E1F9B459F9B
7F66C66C6ABD21A461846CE317312274AE3E6B0E61A432C18DC19A68FC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/UniqueID 5000769 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 74 /J put
dup 77 /M put
dup 80 /P put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFEF215D00BFCAD02E45496D7C8F5E99EB9096FC4300D038C1AFD31EC4C
5ACA6B72C1BE7204E37A4CBBCB1EC26AB87F2FF82DE20601025169A5FBD2D060
62B5B2DBC288C79C33B596832AA18D730AD572C6EDFABCBD36DEA87C0F323C3D
6E537AD3B43C6F3A905597570A8C6B0B4A5E08C08A430B643B6ED36DCAA09B41
FEFDB90E10C8A8B74EB358437D0CEBB9E03109C593BAC09CA996278246E7CA38
4F311F23DC5A7F7DB374E0E3D066C874EEE28CFA47054DC41A389203BFB3D601
BC9A4817F8DAC250A102E7404CA135B33DD66F8FF40D106F52081FBA3E79CE29
FCA5C502B38C86D8D507AEF30436472D2381DEA09B8B3BCB109BCD72332A9483
E61ECF0F89A85BC37B8C10FF3F7C0A84FB8D0F4A7898D3F8B06202FF8DCD698B
56544751347E9AA35209B18D3D416E5E034E36D9C5FC0B33B7AA0D46F3A3F925
7FCAD9D6B9E25671F9AC599A40C37B2439C06FDFDFB3E78DCE515BE82B5BE1AD
2F205E8249407179559DF39CF29120C4B92C5283B609D0445B30F3AC71A1A678
8F43D8B12D7FD722606252CF4902733EA4B25244D3DA98C84673ABF66B26D92D
CDD874513DA9CDDB7841FEA2514AD03CF4D270C2C603FCD185444007E87A12DE
E16416A0F9A35756EC23FE2041BE9D41C1FCFFFA64FD98F78A7D3E3B5630A170
23D622FE59F4AB6FE2202EC2D01E7683AC3979608E0F6D54A74D9FFED7139E08
042D575CDC52731FA89FECB633B56A1E444E49061A7644C9FCAAEBCF7DBED80F
EA3287C9F2A199574C0568193C8AF1E2D9351CCCA4C6D15ABE02E8762A52102B
69FCFCA0A23BCD9515242674F6548C3CBD01B0826E6319E65070867FECA9BC25
E26FB3F819BD99B02996DF990BB283BBCE91069EACDB88F80734E7317F06BA24
66A9E8E23F185CFBDB288C76C372EDC1BBD9DCE3B6308A16BADF1C909D57D9CB
1A1D238A079968E99ECAB2F1A428FC49EE176C38F1C7815A9C150DF707D897A1
318F611FF8263061B06089220F03B0C356049E99F6D0F7F953A15D046FCC5A79
73773408104A9FAA89E4859838B9EC3ECF58C64ECBB348947B318742E2BD2E78
690E6FD4B23C63695B22764B564AD65CA0335AEE2E38E2F5BFF96E4EB7DEC8F0
609D7AD3FB3A98DFC4915930D06545F79C841E302CEFF0AAED1E3502B5DDE4E7
8CFA0D59980007BF5259E5304AE6F4F8A000F07C5DEAC0CDAE3031C96689542F
57D30746A7C12158E3ADD4471EE8DDDDB807B936D5694D290317DC735A243C89
5DDA4AC397CBE128B0B203AB19682D0517ED82FD6BC9362F21CFAAFBEC3EF4F9
46DA586E279CA09F2872E2B31C715B9CAA6728D474DAB2C841EC52CE1EC6A829
6CCDC0627BEBA2BB8FAD9E1AD10A250A4F1440F996E4063FB23B0C139556A2EC
C79646D0B34149B49506566E702048B0F277BA03AF01660D7E573E45812E1869
C8B6D860CCBDE066811290D84288068909F9B282A2BB8A32B62B66FB28624A4A
009D259FF2FBB1FF48346DDB5DC08141885FC6D4A55EA3286CF6961AF6B09F60
0282B4D335B3D333176A6979333B367FEC1659280D094298052154BB3B65378E
A671005D898FAD1B239532A4963200C43F987800B40B08AF5890CC5DE294A9D8
BC2CEBC95F8B48C4CF7195B481B1998C75ACF1115E250709CE1D4FABB40BFE9F
5CC26C3097582FED4364B10C7AC30E50E23253223DAB4A5D0F661A284EAD2BCA
89F812A188EB57D7D9FBB6D87679DF0DBABBD2F99079A26FE499FAEADFBBA0E1
7465E052B82CBC3A90CA1C24B56FCC005169DA56A5DF13D7741ADA2654012EFD
95CF80B60D790FD0C8C1986B165D5E317DB53F33C9D6F435092DA01695919092
F95ABC0399E53AD308C42A696A64451DC4916C93D85975C97B5C7FFC0598477B
F73995AAF59E7CE5C3A44C263319FCD2E925BFE70026C2DE2F374FD72D168DA7
1F54DCBD365AEE922BDF4C68A1DED327458ED73679B936961851F2AE7CBF7362
AB91B8301DFDA67071B13907AE7C0DB3FFF65EAD47B687D6F66A42BBE08434D6
09D5A18E7B341558A07743864AF9F467329D9765C70BBE712FB0E75FD1357346
81321BF2BD459F0DA464320B7D13223F38763AAE3C0F3962DA2FC60993DCAF39
683AAC44A8C1C04620DA7D103A1F28DD778B593E15C01FD9E8D5E7284CAF5C97
7DAE7F3F56F87CB28B36F2A4B941188243ED3562CBB7E6F9A6FF50D0C7A6E10B
E5206B40490B5B7B61CF44141D0DE7A9781123E1877886D5CC2B36FA46AA5CBD
3DD860DA43C384279086E9A7614E96EF003E375BA55C615D57A3108B1767E2F4
63E6038478F8B3C30DBB1759E4609FC0E052AABD8C494F31EE22B94EC219A687
659E967EF2B2EA9F69CDF5C6384366E16819B730CE00C5B3473BAF02B07C7423
406701033BFEF4441989E4577CA9343B73BD122B4D27262FD0EEE7EAD150B29C
CD608F93961869F3A0102B79C3778E3893178EBCAE7FE13432BCB910B00AE4AB
DB7D6C037E27D2770147D05FEDEE2FB795959A03761E617CB7B7A8D72A191C4C
6BD54D72C4E532A6020BF0F5C432A5F0C7D019683C4E2ADC11CBEB2524951E59
9FCF18129A1519BF922ABA7ECE6DA89D2E41C306114B28AACD5413C65D79567C
EF4E5C8FEA0E6E6D5FB8C9A595DEAE5A8E64C63E6A71BAE971005F50EB195410
46909CBD36DBF33E2E7AEC4ECF70B108C99682C03FF9A18D5C87258AC8727369
162346360F780655DCCB4D37DB608BF611998C310BC21AC5203DC7E73D5551D6
B1E05C0A76E0A7F63B7D88D66DEE6BD1E09B74A546810E7B8501D08AAA62ADA1
B04191DAB637A90E732D18A9B46879895F326971D51A1F67011A6434C76789F0
EF89F2C20AC00C70EACD32C7664910BEA1F34ED4C040A0D8B53CF99010871AD5
17C3094243023CE064A289F406BB9D4217C22A0F15BFA6432F2D582F739D9C15
C715237D0B8EBE44B28F94CDAC38A4C3EE17963D82B24984D4F731C78A58A027
233B0A47DBA1A07A4D106F5F7AA34043890A5F6B5514F990457611E9F559DDC1
5E71761462FE9F1C9B2F9912E8AF60C78278BBC3ED907C83AB640E462A7B68C6
21EE0949B308084A33F3E4C9CC42266D4055D338741BB185E28E50DBA85F16C1
F67F026C85F2EE9FFA325ED169D82C14593F5E5AE36E66B5A704B1CA836AAB19
C1E429EE0F426425648BEEB09FC5E279A4BB3B4A96650416C90A59D115ED51EE
E08551B8278EB8DEC36AF13AEB03F99BB0BE0A98A3AE091524650C8B9AA25814
8C443FE97E7AA99B4E1712F0ABFFC0D1A7EC17DB339A74CD7501F1E163D4788E
9762A28468DD733C4A875F600CCFBFCBBDFBA8440AD2D268BE3C8983B2F6F067
A62F51BCED90A00AC84ACC295DF18DF8CAEE944E5C38CB84D99F177593DE4084
99A09D718E950DDD1F5FA4C0FFA3969A6D982846039E64DF2B62688342615162
D7239CA2E61F473A7B79F436F6198C5B3ABF4B704FBBC7D984BB5E63A413407C
A6529D5831291E94A1997E98C6F2C8387ACC86D1BEBFA25C7F76559E7857C5BB
C3370367AFA31C6621F37A5D527993ABB87A2123F4437C029D8DF8AE4B16EB14
67C2CCB1C7729E7AA03233966B34716D9279AC98AB645B827FE359D03F84AF45
73F1B84E59B3BE5FE000886653E62323ED0459E00A2F7DBF72087975B69628D8
73E25587EB6006B16E4D2B9F71476959F249ABA8C716CD81B0AE59605E8C9F38
D71944D05E4B471DF8E12D27C94ED33212C8DB8394E4264149A56A50A03E1E94
5427D02D7B793ED092EA3423C23D6BDA25D8DAD4307956E2492F6BB07447FC2D
F43BF43BCA091D60A658FC5EA2BE0536904B03067C451977A863F05EA4BFEEBD
E748E374B9E9EA1C0DF966C6657F818257FF96A78E8E2DE60CA7E623BC542C3D
815854F5FF4FEAA5B4162A0FE461E630687600939EC43FCBFD4B62C1A175B791
41E8FA8507FCD2C8674761E1F59C2A741A8519E359B4C2758C6E7EDBE23944CF
BA747692BFA0B6543E114CDBEEDEC82FC7CB8D2F01C6D72F75FCB8B549323246
808C049B97EE81A81CEA92C44BC47BCDC77067E9219D2310F68E8732ADBF10E5
EACF47461F4717C1E711174F085797F3FF83B7BBC3481FCFEADE60147233F16D
AE9958DA42C00C4F882940C213BD66ED0D8DD7BD25D521B88EBAC1FBB9B2A127
102766157920BFC43D99E919FA50C13935324F9CF5EC16CCB50F8A97BFE3EE9A
1D6F73ACBDD86309CA7F2D88D30A9DAD161763D4570D4E89F4CD9048DE27D340
E241218FDC075D864D0749D45C62E8C4EB1C06BD9BFC77B8E717A901A6BC1097
33C0432F0D8F1E7C9E73571B5E19E06730A727EBFF5ED08099A70AAEF99BA8BB
EDC4BF126DB93CCC09280CAE4D1201F5048F87D7E07DEF8F3B4F9F8D67616C93
98173D94D68F34706E1B671EF6CF6E0ECE4DF490DED472A5B5A897ED0327F931
C6155788F959061938248174FA4382A68D0EFAECAFB8B1F89796E78044EC6142
91D938E26DD8A4235DA29C7BD3C5B6F7C5210A3C16BEFCC0703D70E09BB57865
98319D8D371D0CE09DC0FB57585E35E5544EE0DE6A814A7605911937DC6203A5
147D8345197D162F0292392A535C49207CB22CD76D343C7067C70D3413F606BF
3B1F55FF857A8A30430874BC14A4C556854110521F3BEEB62CFA88652C1E3CA1
93C955BF1048523EBC148EC1ECF192309D10D0964935752FA31FAF2BD0AC4601
3B8B8D42456A30FCCEDFE64A2F724946213436A18749D5E60578FFFE623204A8
601F777AE188753F7D6F0F5AB817C74171353BD5E97234B7FBF725F6A5ADCE83
7116B9111DD5B3D96BA146415640013ECD894932D04D4A8541FE7C67590D6DEF
A58532D9573718956F91B8DEF94991D56DF9A95793633A778B833326CE81CEF3
6E78B742747E8F33DB67566723A5115716239829B4E17D5A30D28E5BF2AE6C84
38E586EBB701B148C01E726CFCC7CDB6311A79D8723453A6C4705ECDB3765B30
D441E665DEB653C16D35E797A1D3AEEF3B1E2CFC08C354785CE7580F1D895C2F
267EA52398F8EEA75002253B4E8286158D9664C4C8B19DD697A5F70B33EFC15D
5D7BA5444E1CFF4096F3C0895BB6631CF06CA99EE1066C9550FE270C6F78AB3F
3FBB3B9059C09A3CBAD83540DF5959A66F8A45578B408D283259514E9A60DC23
017784984514E02E9F4896A9701379799E5C9F1CAB5E48F4F4EF89A4E0934695
19FEAA753A6730B5715B25BFB1145FAC09F3898EDB7E85886C2F1AC7EBFEF6FE
54D2487DEB95E512A656F4ACD8E14A0D744AE3CD623738474FB493C4625946F8
4CB464DC51CA27C219DFB595A7085B7DD2305D3DA2FA8B2BC84DA9114F200C75
13378B1F7BCCE92BCB7F9E58E3EC6148AF028D28086060D4001D00AC0597AD83
9C78CB1D55822C5914CDAEFCEEF84C1783B14F84BF3302EC25E75A4862C108CA
76B548403860B50690A8B81F365CD6CFA25EAC76ED7C42F48F7D3AB8F0399684
DF92AFF3734457F428DD656DD902B467F2A37DE83222368E4CA80511E8BA9116
7DB95E721427059D76FC619D7780FCD22C21FB9247FF73D2D5AA8B66D2C85AE4
97207894B15F3113A914987E2151311365A19E2B65B74FA11F08143F7D89F5A7
906DC877D20BB1DDF5E7270FE145039FB4D3B3FB88BF6A1886B112A1EDDDDD88
024981849CA5DAB9E1BCFB2EB2E3D74A3F76D4BBAB49943EC638C1FF73D10054
081BB1CBD7249C9819602CB7D5BBB57FF0779643173D10ABB141A9BDE557D0CE
7D5E854F661FB1BBA9318987AD9C80607B0BE53A9C1DD18698DBD9768988DA71
FD8740CACE4491FA70C20F6437689A9554DFA586D2871A37848F9E4D20672193
C11960DE328493528CEAE61023F029ADEF1B5EBDC766F59104450DDD24BE2A35
676712CCD83EA3EF7CC4FA2CCAA70CB8147B86FBB189297CCE4030375B63F79E
5D11A56999375B2F102C2E919812C720D04BCA20CE84885DD430C0AF78079C1F
AC80D5B8D56BDCF7EA83F92A6E86D167DC834C01E4BF91CD8F7AF8845CF78DF5
FB4CB9393337D340601E6F808606496ECB7C04B1C7069D78BD42E0BD34B3B6C5
7ED36000E1B8401BCC54DFD487DAB7BAF039622778DD2A6F8C0B85EED3721A23
FEA7AB166CC14C2C9C567D2EDD53A475F98BF66B49A39561F019610DB866B8FF
7C5348614D15615B1BB7856EA94288A02B406F6E4B1993B2AD74D57160BA5004
BAF3D2955328754C59BCCEC9B5EAF162AA9BAB5F5F112B6C9B06F72299EE4C75
9309CA19DE3230B71D91E1F85DCA3EA14A010AB42A2D4F35AFB23B962D4F529A
E4D6E39382DACD9937F17942D07796118E197D8A184D6112B1B4797B712B31C1
A383D80208A12271006A4DF924021DFE5A9111D9CE74907D450C01C4D226E7F5
0AA02B9FD542F4DCE66CF302BB7A54A69E81B72197DBAC77A15A257E89EFC9DB
53EEFC26703D4FB321F335AC5DD0E056157C143D8F57EBAA06F7663541F154BC
21977AFE75B61CDA4114D98D4DADBC06FA8F52AD878F3F9ED57E03499B8030C8
34C1F0FA08C606608EFDB1E69DA08794CA00D8874CC09352FFAFEF04BE75C505
D2645C13B9FFC1A441F954400385F91D3DB9E9035F1A9709523D9DBDD71AC499
F3AA67849221019449845062C1C4418F9850CF4CDA125E7834310A0EE7E242AF
938EFE23A3F90349C24F9677074457BA2664ABA2EC1D4B26E774EFAD4EA9FAD9
E58BF70F395D258B2B3D97CCC415E762DAEF37B675469333D2DF3996864BA0B6
9A5D26C439AF698C768A25FED8BC2CDD149E2A4485EE42A815AFD63C507BA7CF
91C480EC291312A330819E7AFF53566D39EE676702E64F7E5CBBCD8B7CBBD88D
D2179403B8CA2C1D29495EBA757C3557C5C71E3C740926692C83D2D913123186
D5B789E764C13A9D4D600FDBFD21A38CDF84DFF7D0DC2EB5965CA6BC20CEFAB0
2CEB5178A3F3C2436CA01F87A56C37CD9BF7E38F0744CA84ADBB33A0E5E2A1F5
C1A73B5F861EF33DF7DEAC7FB6CD6241B0DF9A74F1DCF908A5E53E4695BA8049
D55ADBD421C4D87C9CF53A3EFE03E5CD8FF95BE5D914AFDE0CD55291EE60CECC
CCA18A34672615D1211D46DAC7ADADC016D5A6979D5FC0B18B38332EF4751CC3
7A57FA00E1C42171E95929CA165F3C659F3E8D47C473828E9B2AF21A4BA90C31
FD6F682B97C145649C03962E5FCA1728FDB950A6E9396C14FB22D2ADF26BA66C
C2D87B1039A1B1DE132F1BF1D988C226D24944777864C890FA01BA8C5DCEC8FB
C79D05D846FF592195590151A87E0E67857323E051FCEE165FBD499A7F0ECD25
BC3146B7DA9324FCADFA80BE3BF343A271F3FCB30F3B02A8A67C80ED20216E17
689B27758B22215F6F7C113FBEE75E1C89CEF2F40683B9FDCF9E9F9A8D9B220D
C6C9558D8064E6B63F1C5DCAB756999D165E9043D6ADDABEF34A29521B3EF5FF
20FABBDADAEB1E734915A9D6D0F7059035C8CDC4B2DED9D678470FCC743892EF
7B6B95FC12C33E5623298B97BDF5629474DA445BD1F9451AA3B31CF1FF683337
E6A9D964C58EE4AC5EE3857A72FD3A5FEC819BB1FFC164F188DE3B9C073693C5
4FB1D2FFECA8CD7E0DD84B36F259AB746863B9B8E7DA0C8D6741A675A23CB8B3
FD38F1CDC15AC1C6890F75869787A0039C22FED451B2BEC73FF1880EC898EEB4
1B4C37A2C0CAED90A94048936CED63C189DB3CA22409D56056B2E72A8B8B00F7
FAB6711854EC29C75B7FE32215DAB8E7D61BE0E92237054C7952D1303456C3A5
A0EE0A874AAA5D9C8238F6B1501E44C4CC12D378D7C0ACA3D6931A1CC9121AF4
CFD94E0652D72E333504D8B5EB72E830C5E4532DB7CB001C5F4062C1DBB2F115
9EEDC9DBA84C9C8107DB3CF542FB1952432BF3420F1840AC021E25CF106B94BC
0C6797D3582A176B9CE298B3B9E00825A022D004562838F2542289A5B55D1107
7653F1E9CE69285B7A95D96F3980B743AE45C79F9082515A2EE35BFA123A29D5
B9666DE35185E533412DF452E02C6C8F62CA81E331E7932C2DFB7D4FFA48E416
9C568CDA9D4BDFF2F5DF04F6148B091586097ED94EC0FF196885D60215F3222E
77C025157D3C1581BEDB2B60FFFC61AA760FF15FE73584CBB3EB52BFE8ECFE00
847BF549CC84BDA89174BEBF03BFEB4ABAFBBE9F9732
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 33 /exclam put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F362471AA58488620156F3474FA59CA080EA96FE995D2B3DEEADF3
3141D157481C66507725ACA5953CBBE1ACEE7E3F02C72C6552D15EB3D612730E
61A06A43575568DC3CF3844BABF04CA767E2995196097015E0C4F622C4356B6B
F41DBAFD797A4B9D7AC22332C552043EF98913D0D9B50CA6B7CDAF903BC5C04F
D20A952BA5CC35B646ACD0A287C956B98C450051AF6AAF79DF37F8954473F8F6
652BF03AE2AE82B99D820CF93F5FC0BA17EBD7AF90313E70594EB5C354023BFA
07912408F1757319C7288E99872B907D5AB583B082EEED8AB079C63E38B07D11
6744856E689A479CB3A8BC081F33CB06755926204981DC0A45B3ACC18F6865BB
EE2C50DB43B62E3630FC1D9B1FFB3BFFAA6D0A20C0381ADF48E4D916BEE85BA2
BB40F538F55C11D50F882B73913840B45161262BC8B0012694C3EF26452F9B77
2CD7C7AD6BFEEAFE31C8A721C2D46AA00C10681BA9970D09F1E10DDC250E2AC3
9A160EC8C9654FCEB36AC2B586E978D54744FC8A0E963D8EF6E228ADD22D093B
B889C940206F504F14DD921D909BE06EC9BACBC23EB9E9D137FBC983570FFD2E
CC5D2EB5D2A4A8604A4AD418B800EDC6B89809E00091A2315EA8C071AB631CCD
04C3EA77541646B7F9D70B7EA564D92A65C4DED8966517660EFB9F77E172CD8F
1B5FA83270898C3709DE964B0C4A899418435F92C13E94F5C1C5B9D7DF3E8793
5F9E83CE1430E3EF275C26835080FD2AC78DE88BF65298A8EB4181F215181356
A09245577F997AB5F23F31DB7E081C7385F461B083E96E3F08890BCEFBFBB6FC
E597C3F22E0F0F7B6A93C55879A8EA022411E0C1864E987D2F00CE0427E4E8DE
D92F9621E3F7751A3CE5CF1EC306A78C0D1CC6781A016A285C0D195E17B59A63
C593D2DC78B6071636FFBF968B8E7970871E4B60DF79B9BF341528C4F0C5008F
191FABC891AD46A68212B20FCC87E25AE386DFA935CC1563EA96F1339B6CC859
CEA88CCE5DD0993F19E3902D9683ADA47980535FB5597CF57C046C48E0D0140A
C40AF806F16E94FA0C046C0F32AB5BE121A7157A42654E7C1FCBA31379FDA9F7
BFA8A0D0384D3B29B9DEA1500AFBE314EF78B201E5F679AA38F12A87D1E1512F
F71D12EF75F3DC48BD8BA01A6D091F0C5B2B961F4371E588F79C825EBC124C1C
E334BD4714EDEBB709068CE0669738B49AF675692317C3E530C6AE57CA21B59A
0B542AC77FF404DEEF116796DFAF46DD8C9290CDCA4A16FFE88A0D60ACD6CB47
440014F30DA7C27C199D99A1E6D89D0A0C31CD1AD4891668DFF5FFFAE992F10E
C7B88872E9AC808E0663929D199AB424136E03E284D8F44DF9235246B9D22C9D
79BBFCC936171A58B943DF0EA5ADFE2818992B46DF97AE05915E078FD6AAF8B7
1047AD85A1CB13CAF70D095264B8AF9A3FFE6A603B10EFC6A20DD56A9947DC94
06DE0A6AC5B655C71870FA1BA99322E51D46A52D3E7AEF8189C9F1DE58AC9833
7B325CC59375D0F61488AD740909A855DC069F260A465080F5570CE7D41CBADA
47C1AB404D32CBE9E1B8220A27C8003ADE08A63AB714709CE4312179218E4924
6CDEBDCAE80C39AC4063789B6A407EA9C19D12688DF86B62D63BC05E9D65ACD6
CD5DBF04B896DA28B466D584426F531F4A3F9C4A717A0C5ED8C8CB4191E950DB
CCD311A20B14B417714501AEB2F6F8510242AF91BEDB6D70B1A52B91FB3BBC8F
A8F9731E745F2BA8ED8B00CFD8A93B2BB05DC2DFFB5EF265CAE08E9B046C3F0D
9DD51BECA540149E202F9042A94113745077BCC293DDF27CEB36D7B0C78E1B9C
0308C3A413492F0D59409D923BB699CC6F59285CBF31CF7F1B464AF4BC054880
B279621391D022E71427F275BF550881FEFF31BA2071293421FF99BCAC2D5483
B7E56EDB7929BFF410A35BC193DEB96C4A1894D3D262DDCE224ADC5C6E85178B
40FE0E15AD22D7B2F6D066B0DB42E32B026967088FC62BF250842B195D82AB30
4A5263BEC475A33ADE6EF9B4205BC44543AE6912F1B9BB3D694AF8E9CFA440C2
E2CA5DD42B637763D9C96DA8DCE38246532ACA6AC4BD7B8F2D348A0A4BBFFCA3
4CF17A22BF7AF3BC490D254639584011D9D515EEBB719246499AA89CCFBAF34C
77541F2112ABE03FF03C5C8B2BB07DDA99390C222C7CBC96AAAFAB4EE6391224
6BF97923CCA98DDAF09E5E01C94798C4AE609E954BF1E40330D66423C3C9EC10
C2B121966B68A93EACD1BC5BB43C6156B18A2C7110183BFDB2C400CA81F0B82D
C98340DBF80E39CDCA748F5423ADD67C164F2C34DC94C3CB13C4234F665DBE6D
EB77378CCE646ECFC062E88A958CBF231B6198A246CA1EEDC055797505E218A8
FC2D0A5891951D21C42D23562BEF375CC54D3A447B4C7C287F3F28CF40C1414D
FACB8AB408ADCE756C19FD44D3E6EEB03248AB4D52A85E5C7978E7221A178B01
3892BC8EC81481154410F23087FC234AE486946D088ABDB9A76D73867F299AA3
778C5BAD737B2A29C6C8E29D1555B2AB19806C55C5D9AA08FFF26501284277B9
421382D86273A0E50C15867014665A5FDD3CA13745ED691C6AC39F41A9682559
E4C206881B58EA640A934223A46C18168CEDC52E02A0C9F79E01E69AEEBC1239
194CD870CC234605E51D242C7811CC5C65D5D4C41B7249A1B36B4B2F2784D24B
B320D53C4E6842737EB5639AB12E1885EEBADE55649A67C5107E019A81706D55
07169300B14771A1BADE552DA7A34C732ECA8736A2805ABC3BDD397FBD22D38C
DEB12FDB88FEB6E25BEE0C3D35EB1A420FCCCC8C2F3ACB0591AEA4B3F327842B
7C07EDDF472DB3C75F609735DC81FE5DFB590435EB28CA9B9135A79D2898CBF2
881EC6E2742916BEAE0D21F2C13DF26793425CBEE0CD860AB0B22900F65192CE
C1CBCA4B0B8145D8A93479AEAF51BF06EA53C4CAF5594901B5A2D2A4DE8F09BC
BD3BD6900320DEBC6A8E77C180BB57546F31723DDEEA5E6B5F589744D081954F
33FB1680F77CB85E0218B6068275DD157109DA020A5F14454CD5C151377C6E95
AC3B7486BE056D444CD618D206242F21A37E24B8ED9528DF0D272C713BA3B616
92BD5B29E7710F5F10BEF20740417C7FC659F9A46BBCF99457BEFF49AA6FB9A5
EC384E9B78FA5A7EB7DFCB091E9C8349EAE8AD6EDCC7EAD02E632C39FD5A8A19
65DB5FF1D72420B6EAEF6F0AAE5F86D0A87F1502D6A6AD7618A93DC45878647F
27685411B42E59A9505DB3CF4FD244AFA0E68E858B78CF8B3F64A4AEE64F7F68
BA77323FE42402DA190130A78170F20ED5FB55F61305CE6B6C7478509FCA6B8D
86027463BE88715C699C1A7E4135622DADAA911578E0CBDB4839171246B3ADEE
7311BA04F32DB71A99ADD18E9C3289A5E1DECA3ED960259DE496ACFAD46F4DDF
BCE1AE3908F8A0F108613DAE067420B208068E4E31A905BA1C18590A9C8CA124
D1175381EDFE59BD08FF92CD5354D18730FCD42C30B95AA1BB44B6BDCB3D826F
AE0DF47722E48B590F4D1DB020B152FFFACE10826D9A067AD8FB8CEE5E9EE817
24A19ABB796F4B8037733C5BB74352D824361FBF2C40E76D7A1C38FFFED4B117
4F49DA89DFADB57108933731DD92816D009B35FC4F3528645078B13137F071D9
82BACEA48466B826271A70FD551FDA5BF9714EC3CEEC3CACED14896DE0D1E603
825E9C434BBB0CA0356115ECE9B693105C7086E37855975A67092149C83069C3
44EEB92F4F6461213091709DCAAC8D3ABECE2AD50E35DA75FA89176B3BA5134A
65603D03DFDEF92CCA1C1E37EF14449259E1A580F3EFB7FD66824191283C9AFA
F835F633D8799A30472D2381DEA09B8BCBBE81B16BE517AB756FD380EA9D83E2
4DCE5F940168BF936734B1FEBCB5A8D98A6A8120413945FDE26AF072859F82F1
674FE6B70DFCC1AA5E183B2213F643CE0B6A1BFD9D863C8DD7BAC7CFBD831106
423107D3A1CAAFC323B1550D0C88FEF5ABD046FCD1E5868FC3E506B778993FA9
4BB7CAC48F16BFFE7DC480975D53A56F943867B31BC62675775A1390BB2FFBF4
D3666728FD0CDF7B738DC3FBF738B99A0C6D1E5B336C772A5D8B881D6854DA3E
9BFB31292B6668089F509303B258B3F6A1AD53881534E1402DE032985AA631AA
151879BAC5A4CC583BB870A6B0A27C3F6B63592A6FAAE750E1C92FA07018DA44
FDEC2A1324ED781F178F4812BE08FB8C4BD040364BD9DF13098DC010115C7172
AD46135A9E57B5A52F96956BDFC4834A5A1D1078DCC4444EE308B8A5AAAEEF34
70F02D9780E4E06BCFF708B6DCD5B695801C2E26DCB91EBA13CE41952A6CADAD
EC2BEA7EAD00A77674F7DAA9FD8CE0B06156F68F05A4CE0421600A37E1602DEA
5879BE4EF03B9AEB4EC93702C25FEAB76D02A1C1F0DE5D94FB9DB0CF1F5DA350
3B9BD23085B7244D5930FAEA7979DF9E1754D69B706CDEE30A63243E9F7DBED3
E76A4876CFCCCE09E9EB9A1C1E60960499BA6B7DEFC1B277375E6497DA54AB29
BFCFEB0702073B6305CB4D18BC69988168D63EC5B4538F2B4017AB327A04E34D
C6E819EB880CB0FD47B52633F76FC5EEB743540704D87E3241AB1B0AE52F898A
234931F910D5D5FFCC1347B4D4AD31E7B1B93CB1A2DB181104E45B645ADC96E3
FDC9A90A49DF2C1CF012CA1181CFE396CEF08FFE0615BFBBD00632A4358B607B
266BFD6DB51942F4D25B548D00E7BD7927D8E0DE88DB73332725060113037970
EAED023C6C871EAB4141CB7446DF12779613A890BC503C1F55101FD8109CA1C4
493B8C3DA4CEACD210DAD9D628B04B7C1FF3C8397D5DB09D2E685002FE74B02B
3D0C6B9B201C3AC5CD3117B2910900F4466AE627529201F1A70E1A56A2A9AEC7
A19D01AFE1EB024F24F6FB774F58300822E618B71F2FD585171B99A7C276FF5D
8322ECF053FAC7DCB1983FDDA834F045C15FBB396406E9F582283B42DAC6E919
54AB45833AC99B0B7EC0827933EAA0DA30D35B4F5D94DFF8D61E8EBF0F4834EC
D8854BD8C7A95BC217EBBF7F48EE6AC2AB175C3DB404819E628550B0B36C3669
51432DE2990B59DABA7329AC0F18B93374A2DB58E36339B117F2D3AB94540E5F
FD93819F4F539C0A9AC701C5217FB5FA112FB98FB0626E5613D171787FA911B5
EA68B12081EAECB37AB76656BBB9D0652A2D2929DF917AEF768728C65F2CBF26
7413EA045C0A4B7D71AFC8579348BC842ECFB27B4C488F68FE178868989FCED0
B93D3C5EEDC30D85040E6FC77AFD4C340BD141AB78EF68D489D9E7EDDE70E342
EC352A425CEE947A86A33634AD5886F90841B57BED2ED81CA64A50181178E3E4
7B6BCAF343787290453E2912AD5A624847829AF28A8F7115D2C78054511DFABA
66C97BF766D96B193F0A0FA87FF2CF95BD91F8D6F8FF71252139BA62CC3A5272
A7F4253EFB5FFDC8DDF62E316F8AC18A2A92AF2F21122EB0D332ADF0EED186E3
BD4B958F233049AA51A9C391A7F3545C8DF57C495CC95B494403FCFC77B0C3BA
5789E1E5BA39A17291598CD607313A604BF76E1C18F6A52B6CC5361816AEA5CF
E174A788E2379542DA335E65173FA809289B6AB13A605343DF722DCB5C1FEB82
21D1C9EA6C58191ED6BA274E4CC75071F7E37A640D2A61DFE32560A0C318531E
A41E1CA1124CEFDEF20BA11893ADC6D9E740C98E7DAA2B36A5B34B155CB228E4
C8AB8F943390086F89C1F18EE50CE7C38188E2D7D31BB212BEC8A6DC0BAE4B06
447029C7F4569283744078A89A3F685E66914D824EEFD59B972BAE8E0C2C8314
1B146A84DB18736F277860C024D1F28EE5287AA67D10A895154B90F4C14A2AF9
5DCD01ED9939D81FE5D599B85A7A8E4B97C50CFCDF9E5814B44089AC146A3A31
C6F0421B658B1B041682FD1A5D336F83854CA4B922A8E3A4E4826C78444F5111
DAEC4B4C3B78014381C7C5A1C1BB5AEEF284C1DF3F7AFB34DCFE027630E72AB6
759F0C53BBE4E05C007A6BA262096FB92E50A359BB8F7A1CF9CD031095EEC96D
9C634B4D628A1BE0484EE1CEE6234B1B8D99768B6558EA9BC9761A1B02881B9A
55C5F724AD8B573DA2FE68AD88F830E41EE534F7D95F4F809C9E2B61D4EED92B
629DF3ACC1A5386211E7D2A7EDF36B55FFF7147279CE462CEC5DEF17A260BF01
0F87976F3346BF4DE8919C9C5A5F5DC39C483332B2CE81713A141546A409A2E5
A502143F42E15CA913888DA9C9722CC820AF231320B310E52436920EE992CB67
43294DF126C0EAE9855CE284FAE4E7BD3D839AA4CDB38475D20706517D804BA9
15D35C55FB01E8D6D51777510215AE4A6D88BB26302AF4338457C7E610678A1A
ED5EDF2E581FFEADD366B6D6465DD776D624A869AC7ABD0FC9658A731784229F
CD5AB7E882200B007EED56444B67802511C9E4C1B12401309007E8EC24165D24
E5C73D78645623ECEA4AC0974F0974F75E5AACD567880685A7C1DC71A3FC2B57
6218AB8E9A887042484757FDC6DC0FE277DE882FD490651125715DE2F998FCA1
06F9AC3C41A2B01D4784C180215988F282805A97393C51A0F34E211C732E0F4F
C1414A4E40EB3EBAC28334FD2744B1680CFA158576355CF0D3FD503121E40E83
D3B29CF0B15C3E41FC3E5179F56EC4B172497D99BC9E6302FF314C9C9F542E29
AD04D1D37C770C95204F14ECEA7627AC5598646ED4C71867ED81B4A85CEC42AC
9A639DBA85783A72B6819F36E6CC6DDAF3F89CDF731DAD748A1905E6C52BCD44
A4F9A2E4F19970B299558F0E7EB718221E3083A4BC6B0FC0640E90E8CB6B498D
4D311431386FC637D22EBF98B93B426A19F0AB21D4975646083263050BCA4221
FE4769E06CDF3F51573EFDA1C675FAA15E66FE3726311A19553DD57E9A3BEE43
543815B0896BB0389D975A430C8EAEDFF7807F1CF8ED609DECE44D5E5795A34E
6569AE890F8234EAAC7A45139DF65224C4BC6ED2C0219F1F25526531B46A9412
423FC1CB3E4716F48CE055E236CA09F110BFFB21F5FE741C74DD67468F4848CF
1A920921F609E09314FDA8CC708DB17DEBEE4FEF18D75ECDA6BF36C78DEE6A30
77D82B687D80561427BCF57B303291EF3F67D955B2B030E759CC84C889D6437D
5F73CBC374296768400BDE02F29C8BCF9065FCD8348331B068018CBDE355DEE1
59E9B6268AC96F7091245F03843C28DAB7B5C4DEB3902C6B7B7326673EB031D9
F350662C94DF910F550DF2052EED89218F58EF20F03B82B3D7043A1803CAD28E
7D1A8509A194C726041CD136B8C7E29C417546CD025C00BB27C9A3431B0BCC2C
929EE9CF62A667EC241771BA41AFFFE5C1B93614119DD0937978BADEFB488EBB
29B293905999FC4B903B1E03F1A61D02C591ECE51256990A6422AFEB48804F83
D864638A6C3E86A51C8FA79C47D22776F1FDE4E2F5D1EBF4AF97C656C9103036
4213BD56AC7124E117C2C7ECE74AC427D16D76AD32DB272CAF62660684EFAB57
4066A0E25E238A9954C8CB092BB2C6287698149256CCA25D468F944D5A6A4678
559CD72E9BAC2A2F3F5B9C7F3F1438B986C463B3D9D3B74CA1723ED65CCA5EAB
FFD9D60FD3E29852C255D464006C1000B6FC4CCB4FDD5C5050D4E398E3B658BD
13D759471CDE2C3225FA6EA4D58AA667F3F67C8B4A138ECFE7DEEFD2747AD193
6AAC469988A878FB21D2CE61D1EA5649814A1753EC845DF22FF93EF2C8ED3B5D
5C32A2574135291FD33E99B7E960D798A66CBA53184111DA5E932D2C7E796945
79096E71DBCCDC2B01A93E11C0005992921FCEC55C38CCF93A982C1EE266AA72
B32350CDD8DB665BFEC13F461D901B87D641EC8480EBD44B78A35DE2703D5BCF
FBF236EB730459464C6A703F43A5D86D625B43E58453B867B82F0450B5323021
48B21013117F5508C481132F0F6771ABB2D32B899709DD32AC01DCD5297DE947
2C8D573B8D27BC6F89C34A1582DB60E41BCE0DBFE366DB820841B614C43FB5EA
44505121790213E9CFBA6A2E25714B722AE58AA4BC03C7AE7559FE27AE796FAB
71ADB22ECE8B48515CF4EED8AE8EE225829FAA806EBCC6261FF62648BE8BE5B2
35E52EB8CC6B140CB3AC9DD40F27CA0C635DD9423D9C755E72F69F66195D0F9C
E81B1D05F947BBF1CC58A1FECF77CA72423CA92BC4568D1243A2F00893E39139
8AB4ECB2D96A1A917802337729657EB1E2DA60F6CD121E605B31F5CAFACBE6D2
2C0AEFD49B930E2908C6FA331DC4819456FF0840D4117FCB969383C27B170559
DC8CE006A974913D5D0E4B7C62A0D43191D6AD736772101FA6C97542A0B2AB6B
638FB0978BEFC340A42ACA94ED123ACB4DEA9CC96ABD61F7268BCB75235BB81F
0AA02C450C0346E0F7873BA3F3B3BC5F7E3EEC81FF6DA59AC2275897F5AAE089
2AC5A6B683B21C1AB8F4196D73F63F1936EA2F8984D68D069518056A09951CAA
2717D56030DB98B26A26EBAB55E7584A3EA188C825A0593D4325688C30C08946
2C684704CD767E182802E7331ED9CCA1048BAC881275BF03BAF8809D5CB59B46
D0FEF56C0C200B3AC52544C82DA7E6F5B1851B6D5F4A9A5B6417898D8D903C50
12086C755BA251C04EF025DE77AF9E4B001BA60FECA1476A77A0978B87A8DA28
AA839E60DBBF6AEA2D208BBB6DF197212864EA1F7CD0AA25F32C4044A9A6AD84
5DCA56E781D59A245DF5DB671E24162E601BF6A4FF42EF5869ADA426877D010B
4505D6EC1DC56692C88782F69C48B111FC8115503404482C76AA10F6339ADA88
AA897500A3CB89454255ECA21B05E42AF2B7288BD6E99E2E0598B4C6F907438B
CE8ED02902BD404B0A31A9C21C80AAA5FC3B713F6E643D37AFD2363CBAC27FE6
F68237A0FA2A69BFAE34AF389242AA3590CC87A5D792341FAAD9AD9BD18AA98E
34F67EDDAD5B14D6357A51A721287D737BF2D9ACD621C1B4DDF8297E6D5D1065
8FFC41D0F23212809C50A874752D5CB08C224A16E53C68313AB290200EF876A3
55AE0190E6FF473715636B581B2571FCE62AFC270901BDFD78D7B88329967D47
BB5D2306AFD58718F5B424A78E8CB47873047F01497D25606EBBC42D328552F9
33EE2B23A81A496F5A6BFBF64E3836436BAD76EE2048F732ACEF5D27A390BB66
B8F11B8A73E0D5B396F4D9EA89C31B6FE1B897CED593698F4CD5D0BC35369E87
504D69F0A4E2BCAA7BE3979433FDEB728685533364C950453D35AB5886439DD6
E0A8C52DF76A1AD8D2654FC8B94417AF7A64030E4B3E9CA3B9211561D278183A
D97AF9FA2DC6192E0ADA044BFDAF896749BBE464DDFCE884BA7E06879F1135F0
FC71BB55D114CA01493C64B85F3DD767F20254464CDA6A0C5A030DE42B94C887
6399CAC9FCD54D087738AC7C640E3379870E34267BE399DB5884442F691628FF
FCFA0CBAA9F2FB14F1C9644CFB4E4A640642D2482287F7BBBBA48C5DBBAFF184
08116811FD2678F359F2A3B9311C3883093B1F477FC80EFE74A21E1B1570D8B1
EF7A9D2F75A6BB25BBD0E7D3FA5DBCFF9A4E36E4CCB3DB4F4E2C146C7CD2E718
B51CE33E468014DA1E979F6477708425C1762151F1D49584BF1C891A87BD21C6
4D1974F650AA96E1EC61485A979B82C99352E5A45F3D464825950156DA60773D
A60338B596098636C1E2EC0F725D576E94A0922FAA7115120D88A65014A2CDFF
B087BE11415B12967534F10F19D686492424027428FD2A9FCC3AAAE79EECFC56
327A5F034E9450B510FD67441ABC9B2BF4A3E21EB4EAB94A555FF38CACD7CF8E
CC65659D9A45853C24DA5ABA0D97AF6285C8F4983BB4CE33CC536B41FA9CA381
8A6171B3F3A5017BBDA2792FF491E808EFD4CA526B67A1623E508D411FEE36BB
357B9EA4679D0A31AA4098C8E5948045005F617DE61A7DE6A0F4E357C8CE8004
AF7C13F45A5A945B0A032685F0E236D3D02073E5E5BFC7F1182389FFD0986707
C7130ED6A339687C763D01473CA48C31F40F513944106AC0DED527D764AEB2BC
238A35800981E232A072C2778687FF3AD805AA74F6558C5F820A5F3F423A6484
1751FA2C9EFEBBDB3E3B3FDE24B3DE1F1A1645ADBCDE008D6B0F4826D4C728FA
7CAE7237F67B313D5D21A5B49908E95A0CD0F86FD65580EA750812DECD94416A
7A270B5D87D32E67A5C21582CCE48788F690DBA435EF6E04813104E0F0A0B4F8
D6E5685BC6DE3EC5419F40878D5BF8B77FC4F39F5DCB6511BFD3AF5B370BD333
D3DB893DF52D57BD6C1AA3A434116353BAB779408CF93F6A3C8F1E76A90CF41D
B02F04C4DA50384A37B542B8571C2396D3D0CB83454C8A48392844816890E5E2
5A10E3F1797019046D29C4E818C2A71B59B5BB18DEC18BDFAB9574453A60C9CF
96D2B3448632EA3AD6BCE499E574DBBA2C4C0ABFFEDBFFF4B2B07F09F769F230
65B1A1FC0E0B1896BC62E23A18DC0D27B8C8CCBA82268EFF22249364FA3664E1
7FDCD0ECF8F2E6C0ABF5A645DC7B66DE9A94C59470B666C199E7CCBF4507AA74
2FA93D4C76F25738D53557FE30C7D42AC48E03DD45C67DFEEC92B11FEDB223C5
1C7FEB8A6BF18246DAC374185F2EBEFDC24402DC2719A2DEC14827CCF27BF510
96C0B7DC9313933DFFAAE828B1E3194EE215647931C4B7E2007505E3DB9680DF
484E3AD725CA97A3E7BE052B135B06F54640718EF99F898A4B3B68A76E6E0353
E8596201D82F61A3F537C1265765119F66EF2A54E486A492A16749E45194D1EE
C1D00B17E9631B75A7952C51F5A00986606D2153C65C9A7C729DD42444B8DB92
4D432C8BB5D4B6222105F1E04C132B81CBE417C016EE57F00F92DDBCA04E4DC6
227899EE8CB08326BF687810C511AECC54F9D9B73322F0E1300BB4F0933DA18A
EB3C0FB8C09606DFF4C2088732B7AA01CE4A193BCFB6E9B9C9EAA2D4A2396FD5
A0B409BE358F1D80EE3C78149721FEE0E5CD8F338C26ADCFD2C1B3577A6010C2
26E268A42AD4860DF8A6C5370E2B8FB145BF1B6DBA9E3BEDF220F4DEBBD476B6
048146700796D41548BE9FF71B1D61B070725A1A862546430BD6F4E0E41A599F
5E0BAB9F6B849245FD6E8CD52D71BD11D2DFD10FAB2CD911E1DE46479413281C
577F694F8BFF8A4FEBF89C616216A0CAACA96463936033A05F69A97A64B7F704
1E4C8906CFABF41C531AF80E14E8024C890F6FB1E26B924359FEB6233E4899A2
6FC7FC65B57C74DB21F9B5F21A041615BCA2729191D281A20EAD03A100902A61
C42380DCD7AC68DB177A8C06EDE7AB51DCF5B79BB29FF4136503300A1FB79E23
BFFC63A514AF6B512964B618466EA5B9CD11F64B127340FB90126EFBE2939286
4B121F1C2EFB3F7F2F397D4C1684F24FCA5A95A24B7A8AAA7CC762B5876B7B19
599EEC9CA052BBA911061EAB3E61ACCE4463642C58E99D1567BF0543D27DFE63
CAB7682C3141375214E0E98A2B9019481A29D1217959689AC2054C76F3C77F62
A84B4D77100D8E90D22AA56530243E25109011F80BA8B60AD9C3723F7B234613
D534A694751DE11E27EF244465698A0194168053633C65C833F8DC1BECC7FA91
1DEEA2DEBF529E8DE764D097DF361831A671FFAFCA618A06DD121A87F5933B26
99D3800F81FA30C4C4BC2FF0B3B19AEE1B7CB73F6E67CE0B750143802841C573
921895578B97EB113013A349621398A192332AF4C927AFA553F43C778A1A810D
CD863AE13A548B7DADA4BB3E1D59F24E6C9F61E19539B0A5A6BDC6A62E2B35D7
C68A6410D495B006A37E0660F8A73DEBE18B8B92DC4BBC8A02A67145F6994B57
E3A9BE2E2AC520D7D690E39BC8B092B27D881657E70D49242C63192F9CE460C2
15EFA5ED49E0F020E0D4FD165FD407B9E55843E4B00EF83202CE7F08346DB398
92128EF7F1F3996570AB8E01DCEA77CC54E468408AACE4136F9A96E3EED22FA0
3B5FF7DECD0A0951AC65B7BDC9F704E15D478822DDE48ACA48502E698BF03B9A
950BBEE66E6BF948EB66381A4B5B2347992F0A0C540B3BEDAE8046F6872B579A
FD80FE0686F52AEF2A0ABF00161E91AA3E507AB214D4A53B1A4E3E15F878FC81
AB5D886456CD69D00CF272A804A4BF5E555660DFCE8F37B947D7721843842DC4
E8A0216DAAD363E735AA2C9010267104FC369C1E3E1B156359F2174176361179
B8D94EA20528D7C2F345D06CBA2E9F1E3F87764ADCBDCB7A3A4662DDCDEC5083
7BC4254021AB9B2218056E0BAA27D5B9138E7BDE5889C92499F2B677D98E02F4
15C23028FF80CFD37E6F09A65FF2D29FED886BF1992234A02C5596C338221FA2
6C83B7D89474E78F4C892948D6602A4B88187F74997961A78B8755DEFB4920A6
15E655B9E8818B97C0F773A5FD277E1FBFE906D30AC8A3B3C49C2975A902A9DE
CA29F85BC4438B4ECE9E6C8297E73CA3C1A0CD0BCE7F05904E5BC1CFB755E3CB
CC1461088DEFE25ACF1B363195D556D44EC194958A447D39BF5ED4F6B18BB808
431C52196F8693CCA870401C14D626C8ED7EFAC4E857F1949244EB5ACDB763D4
AE62D386884FA10AD7842FD2A0625895A2883978CFE760C9201D112B6BF361C5
B6CE17B8B2B71AD7B9418383DFD04708468AF5F242E16D2241F1EF3B186F0CA3
E1EE405BE077A95DA0F881195CD8D616BC683D7796E9AB2EB0945DAE3D3020E8
5B53BDEC1DF6DC0FEA5BB63B01BEC81A7B670AF9C00BB0267D952A379B660FE3
05D7EB84080BF2732A07532C616DA9242FB42E2ED9F85BDAA6BE183E74F30EFF
C16B051193B89D2220B41EF7CD6C18324D600E64C6C389489BA37A83CFCD7D12
EBFC96A83371945388628E2A80A4E16C9A6BFB84DFFF3222CBF2F15E4F3C234C
32F2DD726A29A48BA2E7DD6D5CBE795DAA2511B5716B1CFA9128355E011EE8D0
1D01215A4F6FDB43C709D8458B69F80C890585256ACBBF78DB3AA20579A2D578
8EA4A227F60027459786A232295C66C317D83CCBFA8926AB891C38670DB8C246
4E6B02F152C1BD7951EEB351ACF438197FD9296E3B0BEBD9CDFF62827AB0491C
70DF8C7C36467965009557DA5355A954DFBF0D6402C861C1C0945F202F474086
FD0EC5816964878F0255F1D905236BB0F70EBC4285BBEE8985D85190A4688A84
322F31C767F5A926E8DDCC462F44B033637B6B3B69EDA60B24ADF8294C7BBEDA
EA09DAFA8ED46F6D63DA997F796D46544B9947104D25C3DC47C71B3E443D749A
68CAE940310909DDE5D95A721DDA8A172AA0F090CB410B30400308C3006D07B0
6CCF85565BB369A9B5A42BE205B6F215C4D4DF7CFB6D3478852DAEE7B519B71B
B17F8875DD15D15E61173F993C8B45A8E6C3BD75AAE6728870FCB070F43BA436
59A9FC48920E0E247D559F4604814F6F3324BB09C8D182B3161F5EF988BD3091
54097AF67ACD4CC09FF9319AC9906DE450A70DEC1B2A8B0E4E8AB655106F27DB
9679134795BD4390B0B65D1A3587E50E9C120DEA693AD05F6FCA66848665F213
FACFBB31FBACF249CFB4B1A620E1B13D95A0C7573C9E82FB76DC3447D24AFEB0
0E1130B53248E80E185C360FCFBC8BA81AEB89415446507152F8F87F5657A072
BBED5F359EC5BC408157FD779849348FD4BB65D538E6A7F6ACB3EA1B17448902
1A5369B562E96C04AD12464C2882FAE35F91A06107769BEF1584D1FD73123D2C
D227B299DB2BABB1861FE0AD2E2DFAFD34B64D6750B9AB53E08091D7F24E4084
649D19B22B56F71BFB60AEAA5BC1A230921AE19F9B85367A310BADB1FF3C6173
B9C2B5EFBEA3BCC573B0A73D6079C94563A3F945541281B4C802A188039C6529
D29A5C491AB456A42FC58DCAC78480D3D9AD75148F54B4C5531001D8061B1668
90A1E3B2A14A4415A20DC7B7C27B902A62823B8A766D1A598CFD2A31D20FB0D8
0B3C7DB6F28F6D62E9FCC631DFF648E5F860FCFC529C48E51EB5932AF7C7CCC5
91CB431FDDB8DA36553FED0D2CB4278915D42B1143A2A0447668E7BFA7F94B56
45ECE87B380267A9F6AEE11A53B0847B07F9C53BB1AC97B8AB0B58C93A9C49BC
1299DA47A9B3800F5883476D459FF3CEA6B99254A87A26862E6CE03BDBC4467F
C756581D4BAE39187C2D5B1AC13071D7D62CF8ED7DD153EFD0E06DF9EC3147D7
D290E403E31B9D36432FFD5B3F92C0542ACB742D04711E015CA1115B60057DEA
98E8BEE87553CDCF48373051000E955CA31FDAFFDFAB34121612515B78BC41F3
1C3141CC25354202E7ECBCD615CE9573230042E08615DFF37E10A5E22F3DDF1F
D186D72901A704F3F3099D53053949CCC83B41A1323262731F5A4DE33A1294F0
9E8E987FEBBF4675DB9CE3B64C61468A3C4DEA2A06FA9C1FF865C8A3D7241849
C78AFBFD3EC1B580E8A8101B084DEB5ACED0CE992650D75287583DB5E1DA8C07
F80B9B27A94751D5B9B8707D2ABECCA9CAA32A3E70608907DE6FDA23C51A6143
B1A7C255D9A54F1D1B22718DFD585931E7D5406485915346A6E53B2747F108E2
FA7B17BFD58923673C4D226C1886CA20BEBE09593A10F595DDB0002DD1D25022
97B2525D9F26ADFB729FC00B207A41941B326888096F02B06B8261410F4D0300
1C9AE452DE6DA5DE5550D5EE2808DA5E82F9B49F1A66C37C607FCE19F1A1C0D8
C123DB36DFE00CE35F57BA2E2D209F3361A57FA8B63D500956CC085D432DB884
549F6B896EA0372975B8CD734F43BA2030716B16928C0626FBF8C4B10D6875AA
A21BD36B8D516B594C353708670CCE87362562CF95F77773D8ADF917D8DBB01A
DCBBCC25EB19194B70D4BB256B44E374CBDF4108C24B8FA1964866F55C033870
6BD31B02D19E2EA37BD0B530BCC9888E5250C331FCD42936DA303872EF5675AE
B6E767E2E5B47A301A214CAEE3602C7AA21A0C18C1C3570887B2077E7CF4DDFA
1C58DD949A5568D8D8F32689B2DB654262ACBE3EE8D6BBEAE18DA8768B14145E
876B7AD9221F173242B457AA76FA24E8CC260958979229F8B1022C054F156667
DC19D0189AEF80C63FC4C896940E79A48A77A2A2A0188E9641CBFB1C409865A2
A308CD6E6F94661870AD3978D999878FB580026FCB052B10E5E1B8B5417A3E94
4287F4C7E7F847282B738F476732D12110D96D035F39DA42C9B5499C06BB7B29
A36D7AFC54BE2B8AFC98F8B1E2F6E4C7330C663E84AE09FF5C7902A2C4CBF475
2AA1BA654114C21859422429CF415504C708D7700729B267A187F4269486E2EF
42A1680D1093D26A1C89025710D71A82404DAC436DC4F47644190D8CF1B2A6E1
451567454CAF292CF23B6B2B9F90FB69CBB474B9686E923B2627AED08F18A0E2
0BC17CD624F8C476FDDBF92515FD7870D5F59A3A65CBD6D3685888178372BC73
A583F669FFD9E46A5B41EF95993AFF72A0CA39D821923B83F6F38304A0D74144
6D061FDBB4C35720C81085905A13922D949FE0E111300D6F109606E0A1173649
140E77512CABA647BEEF87CBCC8CFD6DABCEEB7A0320A856CA674DCB5EEBAFDA
B26DD246EC0124CA7AA44B588949C26311E52096EF5BAE42DD689E5E930EE340
624DFCE90A91455AE2CF7F813F5294B608CB9991A08A796871F8AB61BC9AEE9F
0F962D603816CF81B6054D866780AFF2512AF97A488CDC349C8B2E7A864FCEBD
374483F29FA1DC4E4073847AE695F08C12A56E54D0CB237EC49D3076959750B6
47FABF7915F04EDE40F276DD2E609A944A1DC8157E83AF6FAEB08AEED914E7CB
AB92E492443961917CF3B4A0F7D82B59FDA10393D24FEDA984B348CA27F2B61A
F5A44617E4A876FB9EC50E5D20936EE74FD62DF1840CDD4828E95F7EEC3359E5
37C0C7323F1FB6F41407C2EEFE20D0358FED3409099A48E19B9EE20D58EE344A
325F5A4DB1E3BA821F31DB2754D497FDFF5A00D8E07FA2B76720D5178C70EEED
FA9814BF277247AA56941A98C590C05F1C91137BDEFE7FBF9112792CD2142ABF
81A36C91C159549D86223995D4083B50569A58C1BAF87A34D857B1389A856E0C
4348E627E8874667D5EB23E779B91418F73A7AAA7A41C8CBC066E08F5C658B20
C687D77FF83CFE53EA42A214A09BBBB0B8252A16C7A4142313CB9D38F7B12433
03A2E47F20708FF0120FAD554445EAFCC89F51FA48FCD1A2E96CC3A6149FEC49
07CAC4333FCA4AC6D0AEEBEF642D94B2BACA60FC0399D4091DBD31552ED848F4
16FF69EF6E99B0A94EADE68704754994E3FA03F660AC9550FB10DE89AF41312E
58A7000ABB7EC5AB5F06C539C8D00FEC6CDC5ED7684238900FEF5093ABA45CA3
EAE19F542E98B132697DA788CCB686762A7A447549C813E685FEF2EEA8FE3E9E
81D4ABE0AB7DD31E1C19DB0F34CF9012FAC44FE1AF0FBB4B679BD55836FA850D
1F6142FFF8844939542040D52FDA32E7C06622E6327113BE8033236B253F5955
2DD1BE00AFD2C75283854C014021957ABDAC2FB32B3734AF782E067931A0540B
2423574FA838C5A93D5E6EBA6C448DDF4992E66E48145554A662294246C93A2F
427D2D66C609385B3F9ED9FEFE17269A146449E810CDE8C5A25DAC012DBDBEAC
6F3F7DD3077394CC2B6AD807D48BEF109AE44506B57A28AF57522E819EC63B32
E0D62454C8F7340399F33170F1A1B66993709973AD9F1ADCFF7D4F8AE158142A
3CE834C0DA3D57AB7CC7F685694A114B5834B180186A80E888C17645C7137DDB
BF4B6C6F6F0D77282F43E785C3ED05D13EF1B0BF452B2861EABBC705A2A12368
8E6AAD4D86F933542EAB939069D3B9D3CDF6B222EC6DEC458EC12BD8DB5D320F
15F39D57A64F454DE5C18EA9FFB77005B333EE09FB0BE1333AED2CD85DA454DA
B6A88430FDB8AC607A8402D17F5A01722DEDC7CC22FFA7AF0B79D54CDA1D809D
427514C5BA0E757BFAC4C14E1F4A6DA1B67765B83BA53C47A8A1F811C9DBCAE1
914AE5F7BDC2178F6DE128C792F9830D44F1DCEC6216E924BF9326A3134E8AF4
8E4508698AD8A8F727706F20C556334C3853F39E4C9ED0B41FC41C373451AF0B
13B1BDF60867E125FFBD229438C782C15E23C50A0E6CA7D22925EAAB66DC82C9
D8CA1498FB538C274E3C6468F836B7A26A3F03B0F5710418A8C454034D8C7160
C910EC3A0AF570A3508F67AC80BC9A56A46BEE784F945F89BBB742CB30E57225
4CFF6556B779703C0D026E17A889AE94C13BE8B0E5594BDC1C37FEFFAB85F994
A12AFB5402519372F6CC685F0161AEE98FF78BE151641766BAFC63173CB094D1
AE9CCCF010551691AF19EA6AE7951E7B226CD04C3C39F835070E5D7D50FCB6E4
9A2B9B02F8EC961365EFD9BDF493CEB892F24130F4B28483D656DEC93FECC8D4
6F94862AB33D2396814D0535F4FE2A6CC2255A00F5A7AE5AE9D63E06AF6444F6
FF65EC9367F8452BA2F7CFF81380A2464DDD1DEFCE8E6DF6E6CCAF6764037364
B1C53258E4EB71CDC9692D52453FE9219664FF7288149B8FBB96AAAFAB4EE639
12F6C0394AAC7E8EC751095F313189BD9062E2FCD169EE6D6EF81EC1B6DD2054
F08B4B84A5CD310D8ADFDFB48AC27EA2B46B7848A7B34DE4B0F8E7942136F4BB
88EF354703597DD3A3568A5C0AD7BBFBA32B91CDB980604CB8A1387DB5E2587B
2E71718B613596785F64A0B5A7E79AB1D8BDF54648333646F0C29B9B5BC85138
F65E07D13E99CCD3529B0088ACD22D57146638494EC64EB578064BF2CABF11CE
3B45E61E8237D0F6E85B57608C360878E327038C468AB230575D61649F68686E
346C928CE956FF1FA65F64F9D2550B3034F42188C5BA7F70F2DB7066AB0EA549
13CCA662122127B8F51E8A9F3B8D43E2ED146739F57174B3A3DBE29A5C0E7DB3
675CB33086C61F50CD52A98BD7DD894FFB1EB31B03EF868A535B657D3D716899
F2C670631A6F6FEDA7D8BCFDDEB368CEAD88370F94BD1D409ABE5638715B96AA
F5CC573A13DA64F49BCE7E9B72A20E123D6C92F044785AF54371C1C7AB960BBC
62DEA8AD11313FFC33870E50810756ED7048161A422B96B4FF9BFF4131D52413
254CF201D4BA75673D0F031DD6982FFF7695C2F3A91A459D290CC844F32F5F95
D0272E30FDBD5A79379EDCB865E1EBA1F69ADE6CC43E3B47506E42A0AD30B511
276F4107A7905B910E7009F0FA894B30044AE58BF1E59A567210438D3EBA3BB6
0062EAE7A1CFF60B24A02191FA437772B4501EF809DAEF6239D04DA6AFBFA845
409D576AD0F8685D374E2ECEBDDB41EDC86851A8A01730DA4AC3C10F7EECEE27
74CBC9EC99655353B38D628E15CF61DB569C8203AC7B2655E28C14610FCD57D5
948B2C7BBEF582FCE2FA9A8785BAC336103B48BAD8F6EAA583C9B21BEFB7DBDD
1E7D7661335D4BAE4872B2024CBC633C73117EFEED78CFCEA07ADE33BAB019A3
59BBD6C1164D209FC79A757CAC667D722EC2B1C18725D2ACFBA4E3CD80FE7E8C
B7EE6F1F25312B41B125141AA663151D8CADC685E5C12A3C7102F8FE0571165F
1BEA06276B24A9E87092DBA390E4E1321477735FC542DF077F63EE44903A2A06
B6EA6BB462BF3E3DDA364F0DBAB55ABFC725F61DC6829042B5DA8B6208925C94
5D62AE4736C145B017472323152D44A34808C9F4909504CF7E0AB8AC45D01156
7AE0F8E2373E1073C6C14EE06E8CDBF922B5603AFAAF1664AB6DF3483A6E13B7
C88FD4A20C06D5285A3AB53B41C6FC85024B68588775B22951AE429C59EEBC45
AACD66412F9787C4EFF20BA3239448104C87151EEC9CB0C7979C0ECA75D9500F
FC530E51FE8DDE17F991AF9E9820B530F24CCFBF7EAF21D0069366A0DF89A294
1793BF87E4D9717DC32A46D602BEAFAA64DB92CE73E9A20CCDD93BB6CB60E5E8
256E6F17479E5EAE8BBF8077B9AC64AC9C75CAEAD02F7F33E5A8686DA91954F6
4B18BB194ECBCCA416BF355A2C6B137660EF8C4C0C43F5BB9FA2C3658AE43C93
ECD218D16F18A04A8F987DC9491DA81912D7474DB46557196603738DDD26D137
2586C2B8D16E3CA6ED0610A7332C0F932A3AFE54B960C8174ACD3128BF1D3A39
292E8F01B2AC340CBD16C8D5B05D1690850FFBF4F1B0A39C7F6965F0D1073AAF
A761F1057035CE38C611132550F14E231C459FB5CE23107FB4B6415BEF713502
B6E6849AF588F62B38C1CC2F730A7A5F39AF7F112C3681A0CEF3B8140680C093
B1E87AFD1F4EA1791C48D6546A99DBCC8F7BD3EF0C7935E5D4A4DF62FE203F79
790AAC770324BD39A2124776C9AC6C1FEF993471AE483D427A4A7AF0029E82B7
C949F62F908F391D080CF6DC1ABF2807D37336BA65A496EE2309538E70A229EB
FDBEC901F34DD2739EB2282B5924388AFCD4FF2D7D1509057B21EAE304A5BCE7
D83EDF0E2C4E79F9D7F24B34E0C9775BB21FA26ACF13C04734C7AD419609334D
54B1932A3A90E6521AAC4CB72156AB3B4E5C585F49EA23556C8A76D40B278B79
9FD5FBC004A7298BB94B2DA80BCE7AF9632ABB19E3C18EB2277193E02E3EAED0
6587605A476067460C4C5F65CABED605633300FEDF88F8EA171504CC38580948
4744DCE8CEA7023944EA60AA4A73693D3665E4702D66001D581305EDE4B6D7A5
44AB1BAEFDEBCA25BFD1B2270E37A6EEE41DD51129548DCD9755D063B10E2D4E
A3F8464AE5AAC6B9345D5CEA3DCFD2AED5BD90C8706CE421D7F6BF7CBC88D99D
A041CA77B1C131CEC9CBFD6914A06A64F3A89BE2869A75B5B0274DF20778E29D
7037273A1658E6B4F544D751041A16344F024AF2ADB800C91DBFFDED33E1DE7F
AC15B7A403535725DCC9B052AF82577DCAF4F024889913142D17D8C020C26EF1
848C8E0589734DEF574CCDAF1EE8EC28BEBE6928E2A3E8B8E7D256F726A9FFA9
7B12EE39C67F192951E0B3D1541A2BE324FC55500D8623B0DBAFB27B9045EF40
F89BC49C0F8F526A750EDF5CAB889813890834C4A41E39C57F2E56550ECB1AD1
4B8175E5232D6644A2B396CE826AF49A705F03A7685920558005C948FA63917E
5907B34DBE04D8A373BAC81890CC0BEEE9D40F0EC82F504E2E3BF66F34994B17
E1F80987C1FD66E2457B6647FF612B3332D9F7671BA24C129B2FA5F4C9BA8864
D5FC90F498DBDBCCB99AE51F8017ACA1F1295D5D43A377B28DDCD7645E8F52E3
D96C37059EE1DCE0969CF8682C2D5E52C7B7287968092E2E20E20893299889D5
00D7701762E7A607F8FB1401232B74B79897A165CA99955833FE4F5B1FB2B281
128EFE773DB8AF2670D0EF31FA494276C76F5160281C6D23D511F2C1880A4B15
3875C41E5669EFF0F9561D0318BBD625ABE46C88E8932466C28C049664B10891
3609D521B368CE51991D7236D9BA39EFA36E0191D8902B78E276ABF1782CC0A5
7549D51EB8C2CE7B0F0425E4401BA3F6AB00D84B26B46216F4C630861F73513F
D84C48D9624DAA58C7FF62EFB49D49165F7BBCADD7B73BEA44B1CAE7C4DCAF84
6F76C2166D2630448A7C8EAB5462C177F1C78211EBB0839E7D16BCBF2C9C7C0A
FFE786A1E4DEBDDBDE1E15801AD47C8E1CCDB53B7695266AEAEB1AB95C059E08
D6F378C43DBEE7A6D3747DD2CDBB01B6E5A7187E043D65337D2BAF7F127EDDD9
D69FFC363FA5D9C0BD88410D336826995615FD520E031F91A34ADC8B3C9CE2E4
A8D1A8DA592569F9570B00144AEA9023C84E39B3D2CAEDB521525CBAA304DA89
D4E9E3A543C81747CF8361BD1ADBC48C077ED84E38E6218186BA45E6495C53C1
C21D5C6E49A558C80A310E08C4E3B3A18224EB1DF3D01C161FB4571F9EC8209C
D81975B6ADC5E3BF9BB6FF0C573409A774E59B5254ED8043B3BF58CA33AF73D2
D3AF61297315394F91A6640B82FC9282565C9329A8DC7DA6C0FC3ABECEC370C0
F2B46C92ABD5D6463E73193B6FADB760B76FD38FC9074A17060D945507CDFCD1
BB53460B2C5B41B9CC07E07F74FED56DD31264AAA4CDBD4FDE0B438196211926
AE4FF41519CC7CE397CDCB84BE4D09637D2FFE0F29A95466088DF41778968FD8
B5F09B6AE13C3D9799E0D5A6B3B65D79FBF68678AB62B409B2FE9B5B549A65E2
AFD6008FD5562D8CBC3540C4C9269BFE07BA0C4B40F4A5558224D162DE10EFD1
5F8C1F376F3B9454E213642AC83CA59A5CBDDF748A4EA95A4988881AA584C52E
D93868C232A3740EF923805A4ADC4333736B0E497272C5970E9008C2BD2F0027
17780575F6DA08E8871303B77E5D2C7174E7289FDDE3F56FD5C029BF949C10DE
C617AF23566D0AF36E9FCF7F9BA794BD84CD10A1ED15FB254703FCE649D61FD4
BDEFE59828D7CF7D884A3463D3476A2A25349308F95270201459A691E750EDC6
9E41AD6BA1795D5C86337BDAA0F088A9D981D5384CDF91FD596F31BDE79C3F9E
C1581FBFCD72FE88A5EBC2CEDBE6469133A2657056C3552BA726AF7BD03C007A
80346A6288F3442F48176068621D3134F9A222BF2128F2E12E75ACE5B5A51E4C
C2A288974A2B2CA9514B84DC676ABBFC45F167868DCDAF1E9B22F27B95AED19D
C0AB9B8A3584370202F5F1FE8701F514F6002B81CCDBAF78DE253B978346ED25
2EBF6016FDB5BE5D0BA8CC5049E80504E23F53BAA18A78FBA86DA95ABA99103D
13EE897364965DF87CE97642CAD546D6C9B91C9EE6F735C2D821015B56932A1E
FEE45889FAF906A552396290B4EB5DA8D6DA17B788FBB31057A0D62C6360CB6A
5C516DBC8FDF0E7BA6D67F2FEC6CC7775B40766641D88E09436E7BC1EC093976
14B5035E233FBF88EE288F0F247C7FC6683DD1A1F1D8967E0A24EC67C523800A
D343AF0F179D456B457F8F53FF4CB2BF1A195B84CDE164F2DF7C1876C615489F
76E82B7AB3C198BD98CA505CC60DD777EA87CDE84CAA79BCE5AEE00883EF07B5
58FBCFA0962F9E81BBADECFCD7548DB28F439FB2476A504C21D8070BF1D5E80B
05EB715DAD8E56CB89F27B0B474E2FF53820618F837BAAF8D8BCA344A50306AA
F84C36BC81F027DF879A879CF63943734C53588BD7D37CBB583ED9802149633D
FB612CB5CB533167D0B96F3F9C53CE56DB7C3338ECCD000D3DB1615BEC945001
0C989A62F3BC6FC317A8DFF9B3452E9AD9B4EF5009C4061666C6AD400B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 56 /eight put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 78 /N put
dup 85 /U put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BFCF3BD739E32E7FE909AEE068D50FAC33605FFF98C7D0115FB860178FD03DB9
7985B78E0AC21F2EA065FA841F5928FB85163B2E2D8F850DC7EE313912C45C28
2783F6762C67882EFEDDC7E7567F91C16B16FD8D5A1ABF35B5586307701B91AD
54984598F2AD46FEE3D68A2731BEAA754C8E730FE0E84952EF77930E4118F8D7
2F3AD7547BA1B44C698428BA878986BAD1DA8368E8F5B3774FCBE3C72540A92C
7BA6298D386975A4FE6B5612A807D5C03EE4582DBD9DD9BF6A01C6C70A9A765A
38D20AB1B02DA94DEF94BF1A2CD76923DACC5566750775CD474EAA165C02262F
2A896898A8F67CBCBCE53648ABE9CC1CAC420AAD2B48D9054F2A27FDA27BF115
23732B2C0353E3035E724B186BBDB27C03905EF40F67F69E3F63A93FBEBCA436
7803AEC143D8163B0686A713DDA163148F362FA5348389E0F834ABD204D14CB7
AB6DFBFF780676E89ED96284B58545408904AD53098EE76659405336A5207814
3FC60F431CFAB56AE03ED36E18D5B577B68431D905734282B590DB1CC6353A26
58BE5C97A55E92ADDCD8D653EB41C38D55CE9E13F294A872DDEC30183118927E
5A666B87BFF4B6C1FC47420CF7F5F09CD664C837EB47F8ABB08D781F54ABB8BC
3DB89F3DD85939EC795AE70B3FD0841E79C6A9291688C40D6EDAF8C3562541DA
77D93BB4A7F4A8A9AC2937BB52FB92ED00568E59303B7A7977B4072E84E7EDA0
AE8C199A9F9B243C57388C0D51A21B1B7B1F9B0994749F1C5A5F330F4B1D4E16
BD58DD423CFE6CABAC756A9C0525F72745F77C4E981B4B46A769C5C497C79E39
347AFC48FE4F89D25EAD7F8BAB714D2CD4676B51C3F6162DECB3470DF8F57831
000EBC4CDF111B0E1AD72837BD7652E657C0204E119D3AC89284EFB3704BCD33
00E7B2ECD9F2795B1D9F0C1DBE655F2C133B211C5664D78EA5B79DEE550D2449
3448F8DCA52684207FFA56E5948AB984769A02C4286A117443A109D58D99AE71
31593442B7301CE5AD314018CAF5D33B950491C9EB58E3506F55C3BF1A26474C
6ACA7EDE43D9F2559BC6817B5954E2B4067794BBF7C82AB061DE1FF614A00EED
BE406430D3EB2099961D0F83895AB3F7C288405F799899207967F6A7543A6C33
5ACE1913D32419C55AE11E62720F748E655CAB8C89CE4AB58B921F77395F7009
CB6BDFB259607DE61BEC5816A0209CF94A99EFBBC4A714BB8A1E102B57DE4996
60083B1EFEAEB2B3973380CFE1D41D17ED38B666D5F3E701DAEFF01CA734C9BE
CC29AB2EA9F72F3AEE353ECDB36D380D57F93F3D083F21D77A1E6B06EDBB88A8
E5E046025CD55623F883A20914322DCB8A43C72998E63D56B305EC156A89A44C
DC078729A23B76B81BA47D4ED3D1F3F90FE30AACFCFCB965F2EBD6C357151218
63072BE19DA22DD1A5895BDD5CE8A0C5B6417CD3534B995F46419C49D69A82B3
31C74CFBFBA2DF21DF9B4BBFD050592B708EB41E3EBF2CFED1A32B13CC36CB16
7084AE3E81D42314A7D07000A05DFFDD330D8645A219F9BBC2E7034177B230A4
48F8E80C795D125E062C89478EEADC4221A57258D77A498287AF7B7A3A56EA3C
BAC6CBD451606740BE9ADCC8C6B3EBD795D4366728DCB05CEEA9A27DEA1522A2
46BCCD9638883E6414BC435E80D1616FD5BC3A76BDFC773C19E84759EEABE9A0
2312016322F9365C14B8499951D9B11FC92466FE50EE31B4E70292963AEFD63B
37AE956F4C7EFAE99250F43D5CA369DAA9354113882288ABC6FB67F4583E2B79
5E207EA50BACE4595552EC89FFCA67172DE7931776FA74DAA539EB7B24678CB6
88A2AD77042BF616D2E4E1966A09D39140A2A96E0A6FC8886FB9F3CF02F0C313
0BD00B1823535631F09D0787AD7AFDE201F036BD64255D9739F6953D215BF5F2
65D6B9168EA9307D5269418C5A1C47FC847B491E19B4761F5939255D83D072F9
CDD52E1B9419DDF75770977BDF0BB5E409BD483ED5AB9346C614ED84034BD753
0488C5A1F9135B07E38AE550795451C05D526D8B5E0DDF0DC1E0EFD4547DF8F1
8D34BC4C4EA263E3A6C86D15B399A81AE3E9900FA8F51D9AF611B8AF9149110D
3BEE8ED4D1322A6128C32588439EA96FEA19D8C23836BEFCF666CD277286F1B3
8BEB6B5F8F150D3168F6087C3BEE175A6D906E3CDEABA28A6B3A8AA021BE05E3
6793E4E283E957B5C544B5B77F0BC2C0BAF6D4016C799E1B17746E531B38A7E7
68AB714747BA0C551C6D2B364A225AC94C922212EF25CC56795EA274C5CB129C
9229A0A93A76D97D96FDD0789D05FA0AD2D32AAC3189F46C7306104666CC8A1F
DA1131051CB2EF925187314DD8507E631814ACA22969E48C88A73428AC8A2BBE
1FCF61F1EAC062C43E3E96AD514B6A2F3CA00C86C4B15DCA6312C7FC32FC59B9
9862EE64378E0F256908F1D3E876308B04F97CBD8FA65C54E764E38F8D2CE335
FEE691B91206B22880EF495F2A004C36C08CBEA09FF6947B0BEC9CC3C422A1D4
BF5EEC45B58131C543FE520049B2D17848D9FA9F8E8EDFEFBDC389F74F91DFA6
625C1D78B8D5FCE12D723C7CB0CE0F2A6E37D37E73587F8D95C6091B1ED36949
01A0922B953C8F47B63B79E20E4F011C1D23243B8067E7FD8EBB11E8A1A7A248
CE9D420D79D9E62037A0D704D9F1C74A7F531FCBD18579145DBD92AAC6B6F4BB
295778D4831FA1F4906D4EE49DBD9245C8EF97984ECBC30FB94E4CD608B4199B
5BC212A10A369567FF345A555176152B81ECB8A65ED7DA6DC361A76425BC3E11
9A2A63D183D5A06EB4A1ED8390AF807B5A316152850282B087642F1B2F9A2F9D
4D05CC43C49F3BADB50464AAFA7918C304C6EE195D32D065D40B4B8B2E5C58A4
00AB28B303E724D97F4B00DE233666DC2C8FAB7A1F1CF294CBA3048949A9FD2A
08D0217F370D00974191E4EF6C633CE4D758E5A3A274C9002BB458CCFB59DDC1
DE6A3E989FBB92A8C79950311939777F1B09083D1AE1088608693E6330D535D5
D9F44845A6AEA2E95F362D6BE7757DC83AC33CF53B0AF7772D97E4945D103829
89A90147CF7E89D1F4ACDF679FBD3550F7E5FFF81CB2510A620A21146BE27EBD
F7CE03852CE7B65C2F5CF6CE8B5C79B7408EBADD771DD3F5438DFEABF46E1E91
2A549B1B17C8A2AF5217D407A9D20F562FB8020BC29D4F00CFC7C9922DADE357
C44CBF3F388B6A19704615FAC83ED90D62295E34CD61AAE41E642C1C16333FEB
95B85F598955D17BC681E5982039A0D77CF6665A2F228EBCA6F5B34E9BEEFFCD
427D8993A27644327B89386EA86AB3FA2E13D919D77195CF3438EE65BEECC55F
71767569C9D128EE30EFB87542DC7B7263F6D88A75F039609FF1F38D23345329
9D493E798C33DEBFDBD484822DAE5BE0B422DFB75E3418A299B9F4B7FD5BA286
40B3CEC55B7775ADCC1A309457932D9EA8E3D83F7D5CD396492A8E332118A488
4CE22205C8F61EE20616420B968710C551459A1207B574E955B1A2EDF9FC5577
C1B488D6368BF90C7E6DE64977016899E8B0EDDBDEDF7AC7333C8D6FF580CB5D
1FCB58265BBDEB0F04A5211279D5A83E787C8C604839F8AE345AC75110CA70C2
EE1488029468023229F6BDE4FAB0DF1E7B333060DB4F86BBD822FA31F2ECCF02
EF17BB92711810A938DF8021E6FE31A909FB2938D97DD1C29FAA70D0134C880D
3B512283B18A8573FC0810D00260C177041E3B4C5919368ABB49148C2FC19621
8E5AAD75D71176034E67F7DD6ED8176B0E66F4D7263AF4402CE8A3B8FAA3FBAC
0FBC638BE00B6B33D474A034869F4B6BBFF7F660192AFE02844CBC756B7C2400
A35048D391B783529D3C858DE369EE4768A479B34646E91EC0FACAD028F0199B
EAA35A59450A1E7C23F53CDE8BA2CC5900D7D9D13FC2CD731551215E47696A5D
1191B884A2D98BEA4FFD72FF06165A62CDCB5E1FAA97D31CD6888C0EC938B495
8DED12C7A7A2990A2CA994A136FF66CEC3D3A8134E01789C77F6B010CCC29A56
59E6E28DB7933A636BFFB66405D409202F77F6F54FE29ACE765EA4616C5161D6
0455B59B8C52DB824BBAC154AEC5E6BAF05654A12B671BB2CA1334E58A369945
7E869DD047F55C303F6A2E33B871E19B9A9366F3F8CC3388507AD219D5432337
BB1FC62BC27DEF0A4629AADA448D9653C506CD3B3EB1BFFF936B2ECAAACABEE2
F26D8821213661D821351A7A2EF7A48337BD6079020ACA7823C66BC65AC72E61
5BFF4D9E9EC833360AED51B5CF127C98463B8204338323090271A1263909AB24
461611F8D6F5E097FC3CE1471DF76254E6183D20C82254EDEE1F7FFBE3B8F85B
D21ED86BC69C41E0BCB1959B37555870A87F6A30B111A16C2A288962FA6AE616
289F00A5B2E6BB74F13B5249EBBA87BDACA91267D316117AE3628F5EC0D8EB32
9DC6E0CC747225B30FC95CC47DC5BA606B2876DA80D036FC63454A0AF9FE94BD
0B9ACE5F0C0CDE4AE8DFA21E23DBDB1573AC14BB9B337C71A8B6F489ACD1A56D
3A8B0F69F48F55F43D15C60400361BA3C8DE439C53A12D4921A5D65F1196E8C3
DB7F05B97508B8C76E8DE3778237F96801224C7112F3A5D667646D9336F5978A
853F4ED62FCBE5F0CE52E0E3CE63C201AEDE5311592EDA723966CDF03DE293C7
B859D53B359CFFA2E3033C46A1233C56C1B67AB0776E39F6B0A581FBF1370CA7
E4BC4257933F986FA52E63F3D6A79E6D367A092AD72DD743DEAAFEFEF205B709
37D1093A59CC17BC639FEDA470F7F0FFF6DF0FC2E517B87891B69F8EB8E07480
6518D95AB426EE0D41A4FFEFEFA066CE3FC0CE6F17814D438DF7D4B8992C0720
AF3E6861DD92D0EA22AE62BD1CF995483E5B3FD79B5AD7382B08F1E525A30F86
C0DE562561BEF8958E85A7B212BD72E8E54D996DD50FB83F23F822BB9B442BC0
B684F311210C52A68CD6DBB8757F441ADDC5007040657E0E0F3441628034BD46
3F1FEE5D9D6476AF0FE10AB49E0673F865E4EB289EC952EBFF181AD66961D439
896495818892D05F7A4AC1D37891C6B927D50D7E8A57EA7E3AFE55091F706556
019E8A850A3206AC5EC234C088F947BC7A186547C454377DDC4979A21E8956F2
7894A6C3CF50AE2035C05DEBCF002CAEC92577607F940AAE6CDCED8F6C42F06F
95B68EF6664D768AB697B6F73117ECFB69458F9AFEE1E8AC605B7DB1F755AF10
703E8F64EBE3D41EF3523D315F493C4C0B6E2DBE31B9440FF2B5653DBF31922D
29A468AAB3F50B73D72E6A64815AD4D582B7BA4FD1044CAC4D757F0C62188D51
E96FCBAA3B972DB66BCBD6E5E7D165247EC245F2FD136E1E725075088506AEC3
743226AB162FC646E20112E1D2D9DA67B867E558D6EAB336F8E4435E06C79128
6B99BEF8CDE3B07B0C2590797D4D4FDE50E2C4DB92392AA1A86C3AC3267FB9BC
906387D9902B70744D151DFCE353C5F682C8451FDBEE42E29DB6D828B73C7599
1F93F32A15B61ABDC87DA4CC71E835379776AF84F076F8B0A465D043D6743D68
E382C902AF1A86C64925A09DCCF16237F418E1158F7896E16230D9A15C1F18E5
B2E135B4FE2208DAA0AA45E569C2923FBFFDD62BF497EED1ADDE6C12D5D2D8D0
805F711437AACAC9EE483D3B4C063FA1DF498DB5F439ED1857F05353734D221E
1950F044EAE4161E4F7661F8CF25037C0B780628CC7A23C6C921F44FEDBB73E0
C1E1B230A09B9D2613B50442A3DCF8F42749B88F6D2753299D2EB6EC09B651DA
C08DC712EF01361000EEBAF766C365C9C6E1D6CE850B19CF35345FA853E484F2
4698D546C24A79F704FF13C7D4726B0A2780D458992E2010AA04321C5C4B5F74
D3455BE977658A787C2024A5A95D095607F7CF8A3333C6A4ACDAD147F0AF18D9
EC7BF783959BBE19BA418B8D904AC529E7EA7FBFA6305787C7F9468797A7491E
14CC0258CE1A6D7B328935489D3E124C7C0EB74FA6EB762E80AF586C8676FD39
8A81286C6A13F5D813E379D339C9508C889104813068D482F73319413B229F9C
2A7FB90A14B9E02A08C9D55C6FF05FC03B29D7F8DB111A6D2F9561F4D6F05455
0B21294895BFED9C53AD6A9360A01891088E0E4DA322E86893F60A85E5B6DE99
52421605AD414814C5682CA12F9EBC52055E028DB984D805834EDFF40F5D6E19
FB71A809A1D07CED846A0868C0E35E876FBADCA1E14040E6E7E797E18A55CECA
94C35A3DB9C98B9C3E634BE179AB5491107AA13572E9C735F4412A94ECEC966C
053A3EFE7F63BDCE5722D8D6631C233D8B7DA3D35700F7D8E1BD9553A1DA9E5A
2A73873616C44D7A4A4CA7552407C3CF99B8FC511B88EC8DE2CA40E1CF38BD3C
CB32C842845243C14B4CD9CD71993DEE014C0846068973121424C03BC07799FB
85A27FB15509E4D227E88D9C61BF3EF7C1038F9A785DE824E94D09276D8FCCB6
D420B3DDAC3BE7FBB2094FC05E4ECFC85EF65417CBFDBE8A96B6C96A54D8AC0E
827369F49D28E7DC9A7C94CF377CDDE2F96D8B322CE2835B65AEA40819871958
E09030C287E591965C10B2C4A404ECFD710A70A5A0C3A5F1A99DC2FB1979FB49
FF2CCBCFFC08F9EF13C73D0A41488C74485F14A108C33075B96A351B58E5BDEE
61ED47A8F247BE58CE6EDADB8A3512323E311B34386E1723C5FE9A21712078F4
49D5500CF996DD2A8849CE93BA7F552CC04D85B26F6B322C908532730461A1C2
2D828ACAD72B6C84A6D38B7F98E5E2645047294B31EFD0E88040959101E431C1
A3D55C6BBC3D7F660C65E3E7F79FBFC2FBE1E781CD7D2FF981D1C2D0F2D654A0
5EA9834648CEEFC01650FE9852862B5A5A470DB739FD97FD9253A63044646F7C
0CA6F72AC56D9EBEF100AE64F29E55B787452775E229A07951BF275BF02911CB
E95F37B4EBB0776DA01CF4C29CD1B2D2B534FC5ADFAE249FEDBD90B9733FC5C8
0009F7197EEF370EA201A208D980DB54168F572A8F6F969B7C1BF70A02AA73D7
30D270CE995CF01C2D50773AD075B457A91B42F6E4D2CE22BDE5F8438669DADC
6821FE9E3B2F9F8BB73D3D95F124F22EBDC52E4D5FE2A2B7CB9480BFE9E6EDD5
4155945C35568891E39ACC89304B8EF12FDDADF2966E80CF1B0690A283FFEA58
4BBE84BB01B962B7E28A73BE0B8B044868F9D084C62FEF48EAE03E0DA31A825A
B1B78437811FADB80A31E616FDF39B66AFEF751E47DD40A9B4BFF2891ACF1BF1
51E9797F1E74A0EA132A5206965D5E3B785EA3FC47A4B5CAA59FBA2CCE68957C
7D34F51406DAA6E263B65A3992331BCFE42C15D886241981C67BA1F705D88ED5
AADF8D9F785A97B64F204FC01716434939114F9B6BBC26F3AFBD883F3D40FDF0
BE8DD13C7724737C752F28FFEB1B18AF78A6E48DA4766AFDCD13310F5B4B2058
E20F59BC9AB53F6B17F3FDFCF57B30BA74D1828C5E4E94E0D694EF730CAB823C
26B020E21DE7949D1029037CE6CDC82D3C203071F454FD21557212381A7ED574
B1D49F999A4D1C6D162640DE4BFECEF35539CA1EE7F53ACE30C6EE3B9B943F1A
E39E63F3314D135E8547BA10C6D3E53017FEE2813F9560AC8FF303A8962876BB
11DB2697714AEC5F810D3653E1B4725D83754B9746104AC172E00DCB076BD906
8DECFD28C472734F4BC8A74357BC27F73C857AA01BD83E30A719BE3159C02987
F927CA02A9AB8793942C12ECC6635D80D55911E070DFD6DB441F2F4775A6BE6C
EA90D67523BE49236C117654979F54A42297AB080D43ADB322497A88046841CB
8BCD47ABD670319C7245FF5676603666BD093BD4FBB636DF6508B3E76D9F7F75
C41A1CE142FEE3504B9F457D7417D1208CE102692CD4164534F03C71586A32DB
121AA05A0A52C122D9D337D18EE7B40F2E21669699BDC50067A10F23BC36D62C
5C7EE4D150ABA4795F539E281B696FC69E01902DB6526E563702F42B6AE9A343
9F7372B4AC45F4B46636C6FE023C7AB205A14365C4389291F76F56905C41D11A
2193B690480899C6624D49966F04FF7C1350922331049C0C9A2364D47F468B30
DDB279419EEC0F130F20A9FC69E8C221D83B224E187974ED8D1040C44E1DF668
BB22272D360267DA3B93A09009FB55C214F400A259D0F8A89E4C90CE41D0A7BB
9139AB90E107A8FD1ADF044506F683393CA2E7410F94748DCD1F1697999F9E6A
E18458D13512EE1701A9EEE80231D3AC8BE0F704928866CB1B5DFB111BD9D209
D488FC518FD1FC08E75A2E890A7351AC5EB1505BC5437CFB470981890E9F2A1A
8AFE1CFC53ED539F219B588466F546CD3BBB1DC505FBB4F0B59DCA49B3343EE6
790E923567E00EA561E11314B99E92CBCBB6445E20EB081BC80743DEA397ACB6
B9579861FB9E093F044ACAE620624062002A75BE6F955E71E638136BFBA4A2F6
BAC44AC80572EC4B5B24B39CA506252DC493946A9F89F894269DBDF178D4D374
A546DAD2950D307B2FC9A40531542D4FD9971F906E8CD0B7C92E226364849BCD
12236B44F863E3BE9777B61853DA2B8EDB212E67F1DEE0514A05D966A14D314F
9FDEA122819DA1724FF438D7FE8B104BB1D6008948AFE3A3239607680B6DED5C
E1E9CC50A187C55BDE13FF5F6A58BC2B16D84ACB43DE9A718CE750F12E4279CE
D0B50EAD31137066A385CAFA94452344E0B6C2E1B710EB43D0287F434DA7C93E
7000B276512E4270D7DCCD3C78248748C55BEA491EAF74A24094A4D4EF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/UniqueID 5000795 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 65 /A put
dup 70 /F put
dup 72 /H put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B57183FE1C6ED5D71A48D20EA8C18DB6CA7D3C3A6403B9A767D805747C0D25BF
7F2F88CEE69141F72141640FD36EDB5886A78D3A1E0FA4DD0E213082C3E6822B
F981212D179C25CD0570748C3BBE642CCF1F43F5226B9C2EEA6B966628B185F7
11441471ED972022B4D84CF007C1D9B1D12804610E4F730DAF2F2D5AB767C320
C62543E261EDE128761D164A9843955BBFEC7213307B78378CD1914FD7D79D14
947572CB28073B7AA530ADC51270B03CEB7FD7ADB4D72671135435609A235501
EA55EDE2B2B915DCA5D50A7E3512B325253FEEE5FB8F99189924DE9EDDB672E5
653E83A354F6E55F47CB4B2F056C6232AA66CF460A06E592FB4DAB538C280A86
6C7FC5A1A8A411A597335E6BCB62888AC8539B30E8AC2A39A813FC4891B49E77
75375100F55E9F16BABDD3F76B2F587530D12214A376FCA98170E67BE8E450CF
CD9116344965344652128A18AA5FBC61A89117BB7D016B4F18A1BBBD8717F984
F8E429995D5C39BFEC047550D9ED7F9B6538EF020EB60AB57A17600467AD46FF
AD725999FF72F5DAB93D690AEF7C4640D3A85F71763090740FFCDFFDCA590A91
FC3B7CA38DC0F1A788550208C1A92993333554AE5377A0B0EC105F70BED7DAED
4863DE9FB99AF5E9EE8B4F7918C5CDD9EC972C6459A036EF2C2A31EF085B0546
8AC7C6F363FC4EEEE7661D0C00C3E54F5FC62571BD0E8288E0F05B82A6123EDD
3351D9C3CB71F1C9978B35EA0A2C84186A5B90A9BD04B83DFB50A9D0CDD97B5F
420B6E3755DD98FC016D02BED7FD09C4BF93F8F0FBE8FD40D5A5EDDEF656935B
86DDDF2DA499A4F234312EBCF3F9222C67996E1389D7CC06552FEBADA56140AE
871179AD85D187B3D7988FEE04783777A3C3D8C48D9CDC1E94F1EF398F8C82B9
2BD7F5040176E9C200418B4681DCC0D282D8C146AFB27C32BD7A8F4F1463142B
76DA0C0AD1D688EC99FBB76FA7D16300653311E49E06FC1126EDC0F96A209934
4394AD55C270566A283751511DC9788A462EAFB98630D9D1ED34E327FACDE417
4CB37AB2FB096222C1D01564334F7F2CC7F8979F2539239FF196911181087F5E
4EC70093160967CBDBFA746C2783CE388D0D326165D3A04A2BAF9B614F9FD5F1
4DFA56C0CD3AA27627DDB450951FBBF786A67F39CA4E9E3DBB56EA0B1727F613
1EA556740F828F63E9AE1CD4A8B222E0057072AC8D14BA79EA012C7AE0710FF3
9DF4D597584BB28D476682553000E6350137B0B3E4F38A82471770D66F89FE96
C867DCFE4852D89A72E24C05F1A6D7AD0114A187E63378DE567194CD046F8ED2
B506C4CF690C61F78CD99B6C2481452F75D225182292685337ED9B0552B4B426
2C46DF0CC621A9E2E2836A7499659A2446BD5C944273984912C0880522A3BE50
4177EDE6B870605134C25FEAA3A5DF6A3A9772E786778205ED4911026DA99999
F3E6F570FD0C618820AACE4F22733518EF823B291FC2F9EFCD328F5603F264F0
68BC1FD325E147553CC0E41C4F023A9BB07574EBF5DF342CF5192F6F7738B76A
02CAF04C94F193C6EAEA8212EEEE5DF914BB70730F3177CE21AB0B9E7F4D6737
731142257F8B274B84BB526F685504AF8ACF33B3B1C677EFA5C74553714DFF0F
BB3D9A6F2871D457FE498EC0D3C129D35D859774A10E5F1FC42C247E7A5EF39F
E67ABBBAE7BD99E54458FFA4D6B6540A669549D916AB078F6CC3C5C6DCF850D5
FE8474DCD87B81414C073A9D64BBFBEEA0B26C813163BF8864DAD1D3C8DCBC6D
D5C303C479A5D77B07E8948C3BF50160D153F976545C8BC37B24CF50D4646D8B
506131FC2B145F53B1A92B5EB6D2DC10C1B4F8030F2678B3AC66674D7DBF06BC
3756EDC8BA2A3764F20A4E777FF38EC925F0DCC383219A9EA5A02F29E3EBAC34
DEE4C116DD308A4D57BBA1EB72FEE81E14ECD9FBEBE48826EF0D226A1B71E782
511EEE799F28B069C1657FAE6A7576E197996F97871B26C0001CC6EA775D158C
F3A37C4005FDA4BAA3D279C00A06490A2779FD88E996F91B1242F1E301E65B8D
6D2C1322DAA3A1B778DC87FD8766BF6D744530856353484BD859EF26678C0884
EABD82B9933E16690F8A26CA737FA1492D6FAFCB8C406CB7F9801A5052C1BC98
E09A07C5B158A17433FA88B1793D262870B7B88E239400469C3FAF90517DC312
CCCBBBDB3F2724F9B2BFF3704343F5972F4BB02D4176BB183981CD26C490336E
B2D67535F30735BF08158013B04A8A233C807C000A8DFD772CF908305CA2C562
959EF6C21FEEC13ADF5D5249AC0B6501549CA6D4E8A73E3DD7050F4AB8FC7C2F
7992433DEF3FC47E8C7048988A20BF5941D3F4AFCA521FB2D1FF35C554FAF9D0
0F3C20055C469EE20C24EFB3073EEBE673DFEC542697B1C263A22C80B19AC94C
F95314FD37AABA072DBA1C0BD7530CAA62F1F2857A7812D7A58CD2A3212519E7
2754E9FC9A0EB9CE28EC36867D7D99F4C81807F62082FFD92534DA0E0876FA63
6DE78806DC47A74626E7663494E324626726E676C0DDAC396276D0EB485A4F65
822058033E96B320BC51CF374D775998D64CE5564D937D447ABD7A4D8DCE86A5
8F63B057CAACA87F330DD859331089551C47636C2F0E7D5B1BD35CE65B1F5D9C
2B746624B34FFB7634B0B2DC5515718FC5A41732F504D8BAE66E0503AA0DE9C0
12E6BAD6B4A377FC2E79BED3DFBC74B79C1D619EE528F45AFC0098248D0E6BEF
31015E54756354E5731F1CDDD7886C879021B1C82CAE880616601FB90AFE6DD7
D148B0CFFE1DCAB957AD12A69E7AA6F05D17072CBD855C1A4D2CCC9424E5126B
E2CFC81CF2D8EF38227B619D69761063247704976861A8DEEB1A7601D8F12A56
C25707A9E790B6804361A9BE2BCFFAA0C0C32CE16284E672FB628754A59B1BE0
92BCBDECEA0897B4F8DF6310E8E4B2623620D7069F945BB1F59029D73A7C1395
B2EE2AFDF57D1DC2AF076F92C2DB9BEED2866404D45825256BBB2BAE377FF206
06C54654F82786E03E2733009DAFAE1CB5BF328E4B3AFFBC327D2430957963C5
49CC1CCD1C2947C70922E2B400F28A71C74E82820CDA714504AE22A835065C64
3E3F14C32F2F1B1F81317288CA9490F03E21EBFDDAAD3E826E1D72BA523A2D9E
9B868978395615290B2A023366627BECD6856D5BD2FCB26BB69792EE268C5BA9
6F59F034E1D591D9BF29AF9E7E1053B0DFC92A72B39024F450CF440A7E89B4BC
A7E4ACAFD4081F6C5A30FEAB4BAA050CFB3C71F29DDC111C5DDB26FA144776CD
F69E6929731F9BF6F30A5CE7E682B6A859D8F5F310BE1E3FF3606CAD39E50D0B
69E5AE5FE13D4DCFACBBEC7D768C53C1C3115E59CF100D323115C5A5BDE65739
82BE3FB769CDB87F2893CF60391D6F2995B69B20E66C5CF30850FC368BF29BDE
55864F025B4EBF1D23DB53624613BF33F3E620D3D7E70CD5B218A7E1E028983D
E6D0DA8FCC6159B268C133124C93E18161827DF1E5C09B9E91A7275E57F55DA3
80BAFD1FCA97DD7A6420EA3FB8C1262464311AB16DCE2C2FEB333BA1541891DF
EED90985967B3B1890215DF5AC61EF3275D6ED44A9F78C5FD1EFA10928917BC4
96D6AA8C4001DC579B679B273455B42363E9B6FEDEF471D004FC87B8B3CF9DA7
8531F9D28D0243BC404E8F60F1F91949CFE37AADC0392F19AD0292D44BA1A1D6
F1464FDF2284973F75C1993143FF70CAE17AF061D6A1D6F671BF718118270E83
7A40A7700492CAD5A64F64553F2C085EA625B688E5CDF0E219258703B99E8A72
598C5E598D405E88057E652628EDF71EDC687A7BFA1AE0B41D8117FD234CABDB
F1DAA5C8881B83D587CA4C484BF9C7829DADD9E504746B6C17E6B3B043B67107
2CC42147F27BBDFE4214611B57DB4B754469A358A15A4904F8F481BF9299933F
9768290A90A5FC5EBF06B60D5C4DA7161AAD9B4B6B4570E22C93976C059E8F28
FAD95AB90CE0E1A230CB09DED6366A16D7A41B29723F270F978190C7C6521C5C
511A9EBC2E51EDB316E0B3C2B8A73DE0C3B6BDA234C9926BAF70A76618BDCB34
21BAB35001C2CCC1075D1B971C312D155AAFB5E08FDF4166480B736373FB7CCB
D1C827225B3EA94DF7B4B8DA17C366C125B01994DB70BF51E85C4905DA53027A
8327BD51C96638F3E94622C051EAF120A1435208A1C9BB10EA536D310E8541CE
D95784BA07FF3E874A29EF6E160E2424FDBC5768AFEB0B5FF7FFC0A87E3D06BD
F9C4AE0FC68D805C3F25E08BA3E181B00512EF867F38AE4EEE8C66FF38F106AD
E0540DED3A9964CD4418F5A441386B7B5BB1925BC5C22A60ED05724E17893849
4F31155EB0BA204FBB181D5FFAD15DA0904BE40065822E0C8A11C1ED4D6707CD
5CEE7E8694B3642F2292111523DBB0158A69FE89D391CA583B3B066F87680EF7
9396ACF1207A9A24134E2871616C0F800DFF75F1E9C3CE71D2C9C7C472103595
E59899DF7F3C072D1422547CA27066B0E421E13E076B5237CE3C5D50F1B97EA2
C0947F4337B00F324066F0C831F58A45464DD0FBD320A6AF5D83B6A3F543DCA2
421AA0A65B898B28B4ACE7B8F4FB203E7AC6E34AA833F9866CB3CABC6A9233E9
E924496126E2E2E3E8C4ABDE05DA9D5E0036CA49251AA0BB982BB38342472177
4C5FF98E5FA67AE220F9A096399C06ACB869F16EA1AF0D72D7EB5CB1C03C5D2A
8C82FC079AE7A7319E0D37BD39EB26B9D03F6F3136BE0CFC87F5D12A7DC35470
98030BF873856C99B30C789CF605AD7438A853F409EDE00FD943E273CA08D6B1
70B3663228BEAFDB5258B2218826E1837C34E3A61C081FD97B5E98B00DA4791C
384314A9C222AFFD36278EACB83BFE10005D3078F2F89E9C4418C88EF4AA13FE
92A355407A0D171A4C0FF97AAFE0AF23A196F80801C400F3D249714E41AD208D
DBF66B8087DD0E305DF06B41355CE6ADFE36F7A1ED6F71DBCA246BE183DE0185
C426C0686B562BC0178605A6F5F8806601CD0F8453C32AAFA05611D4DAAE6BAF
83589934C9FBC7DC117EC21C6F95D4346554F38C8969584DB9B3907D65F2018D
2E319CE1283E8663F75B62670975A155B19249C99D129842075DD85398D86557
A12F4E6D37E06F954D2A977D2DDD9E273D01581BF0DE5E1180328B42EAE5238C
7E7C2CAEC6DE835142335733B5B651AE2BDC4F6E6FE8DE1884D783C1E204894E
46A5DC298433A13072821E3E102E6162B63E3F5C656845721391D52FBE0EDF60
127CD4C39A53FCAAFD1B9AB08F7E9AA12BC0AAC715437C3D8AE34BF8719D5FA1
94DCB80EC51410851B769EEE0EA58BB9D395EE5B5FD0A9E23D1E6A71E2FF57B1
122DB4B1148A21B463E870F743E75C9A0CA4A3FB8CD214A96C6B7D113C019345
82FA176112F25DED3C5473E0740405C87FC94660BE8BC2100FEEDC3AAA0206BA
1AE71EA5A7EAD158D1D58B62CA916B28ACEE4FACBA8BC91695D825EE24F9F79F
E6949165BCC3868501F5035D1D06F4AA068CDD3F09DCB1659C7C1D4462705B23
419E61094E1C563A9A1D6977B6E1ECD30AF84BA7086F907D90803B728A1EDB96
07B283E7E02EFEEFD2B1E07A9E0C38C77D8EB5EF738B936AB47FC76AC3744B53
6B398425C53967F113EEC31DA8B27291695C3D4F2178B6652DA008A0849C148C
82F52B08708FE446F7D3F34D916759CE577D4AFEC193F55C4EEAFAFF527D400A
23652B52D3CE4F06A597D4E623B895E8248A3DD511C183448AEB61198F72E3DB
7BB572DF5E96D483A05B39E2FBBF8A1D1AC3D886B8A717EE550A60846E5AB7DE
168FB9C73775E82B971FD153C1BACC9AD8FEFB7DD2DEB6F6A56BFA73BF799F10
95C3A8C316AAA0B96D206A66030795A559838A6B7AD83C5DA0D68D8393B87BE5
2A43B2E1C58A35750C9A9443227F7CF1711133535D282E7E5095754C73F0390D
F13D1147D8F86D2EBA73D0E396F0F30FD299
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (AgeArea.dvi)
@start /Fa 134[44 1[60 42 49 30 37 38 1[46 46 51 74 23
42 1[28 46 42 28 42 46 42 1[46 12[65 18[68 18[28 33 28
44[{}26 90.9091 /CMTI10 rf /Fb 141[43 2[52 1[87 4[58
2[48 16[73 34[52 49[{}7 90.9091 /CMBX10 rf /Fc 236[67
67 18[{}2 90.9091 /CMEX10 rf /Fd 255[71{}1 90.9091 /CMSY10
rf /Fe 199[30 2[30 30 30 30 30 30 48[{}7 49.8132 /CMR6
rf /Ff 207[19 47[55{}2 66.4176 /CMSY8 rf /Fg 139[25 4[34
43[50 1[53 43[41 21[{}5 66.4176 /CMMI8 rf /Fh 199[35
35 35 35 35 35 35 35 35 4[55 1[27 27 40[{}12 66.4176
/CMR8 rf /Fi 139[33 3[46 10[42 16[53 1[69 1[58 3[62 5[58
67 75 65 69 68 2[71 2[25 37[53 21[{}16 90.9091 /CMMI10
rf /Fj 137[71 1[52 53 55 1[75 67 75 112 37 2[37 75 67
1[61 75 60 75 65 12[94 3[92 2[128 8[103 2[102 12[67 67
67 67 49[{}26 119.552 /CMBX12 rf /Fk 133[40 48 48 66
48 51 35 36 36 48 51 45 51 76 25 48 1[25 51 45 28 40
51 40 51 45 3[25 45 25 3[93 2[66 51 67 1[62 71 68 1[57
2[33 1[71 59 62 69 66 64 68 1[43 1[71 1[25 25 45 45 45
45 45 45 45 45 45 45 1[25 30 25 71 1[35 35 25 4[45 25
18[76 51 51 53 11[{}71 90.9091 /CMR10 rf /Fl 133[37 44
1[60 44 46 32 33 33 1[46 42 46 69 23 44 1[23 46 42 25
37 46 37 46 42 9[85 2[60 46 3[65 6[62 6[62 7[42 3[42
3[42 2[23 28 23 2[32 32 28[48 11[{}38 83.022 /CMR10 rf
/Fm 139[37 38 39 14[42 53 46 31[72 65[{}7 83.022 /CMBX10
rf /Fn 134[51 3[54 38 38 38 1[54 49 54 81 27 2[27 54
49 30 43 54 43 54 49 7[73 3[73 6[73 5[73 77 64 66 75
70 10[49 5[49 49 49 3[27 44[{}33 99.6264 /CMR12 rf /Fo
136[81 2[44 1[46 6[59 2[62 2[51 3[54 19[106 2[58 7[80
19[31 46[{}11 99.6264 /CMBX12 rf /Fp 134[70 3[73 51 52
51 1[73 66 73 1[36 2[36 73 66 40 58 73 58 1[66 12[96
11[99 1[86 4[99 19[43 45[{}22 143.462 /CMR17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 240 307 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def

240 307 a 240 307 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 240 307 a 240 307 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 240 307 a 0 TeXcolorgray
240 307 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 240 307 a 0 TeXcolorgray 0 TeXcolorgray 434
809 a Fp(Theoretical)43 b(F)-11 b(oundations)44 b(of)e(the)i(Age-Area)h
(Hyp)t(othesis)1503 1107 y Fo(Matthew)38 b(J.)f(Bak)m(er)1397
1252 y Fn(Departmen)m(t)c(of)f(Economics)901 1397 y(Hun)m(ter)i
(College)f(and)g(the)g(Graduate)f(Cen)m(ter,)i(CUNY)1566
1626 y(F)-8 b(ebruary)33 b(20,)f(2018)p 0 TeXcolorgray
0 TeXcolorgray 1767 1987 a Fm(Abstract)p 0 TeXcolorgray
0 TeXcolorgray 467 2163 a Fl(The)27 b(impact)g(of)f(past)h(mass)f
(migrations)f(is)i(still)g(felt)g(to)r(da)n(y)-7 b(.)26
b(One)g(to)r(ol)h(commonly)f(used)h(in)467 2288 y(theorizing)18
b(ab)r(out)g(the)h(nature)f(and)g(origins)f(of)h(mass)g(migrations)f
(is)h(the)h(so-called)e(Age-Area)467 2412 y(Hyp)r(othesis,)34
b(originally)d(adv)-5 b(anced)33 b(b)n(y)g(Sapir)g(\(1915\).)f(The)i
(age-area)c(h)n(yp)r(othesis)j(traces)467 2537 y(the)j(origins)d(of)i
(linguistic)g(sto)r(c)n(ks,)f(whic)n(h)h(are)f(closely)g(related)h(to)g
(cultural)f(and)h(genetic)467 2661 y(similarities.)23
b(One)g(common)f(w)n(a)n(y)g(of)i(stating)e(the)i(h)n(yp)r(othesis)f
(is)g(that)g(the)h(area)e(of)h(origin)f(of)467 2786 y(a)31
b(linguistic)f(sto)r(c)n(k)g(is)h(where)f(the)h(languages)e(comprising)
g(the)i(sto)r(c)n(k)f(are)g(most)h(di\013eren)n(t.)467
2910 y(While)f(the)f(h)n(yp)r(othesis)g(is)g(comp)r(elling,)g(and)g
(its)h(predictions)e(are)g(often)i(corrob)r(orated)c(b)n(y)467
3035 y(other)32 b(evidence,)g(a)f(cohesiv)n(e)g(theoretical)g
(structure)h(for)f(the)i(Age-Area)d(Hyp)r(othesis)i(has)467
3159 y(nev)n(er)26 b(b)r(een)i(describ)r(ed.)f(This)g(pap)r(er)g
(describ)r(es)g(suc)n(h)g(a)f(theoretical)h(foundation)g(in)g(terms)467
3284 y(of)41 b(probabilit)n(y)-7 b(,)40 b(and)g(also)g(presen)n(ts)g(a)
g(computational)g(algorithm)g(for)g(computing)g(the)467
3408 y(relativ)n(e)27 b(lik)n(eliho)r(o)r(d)g(of)g(historical)g(lo)r
(cations)g(and)g(migratory)f(paths.)p 0 TeXcolorgray
1927 5400 a Fk(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 381 399 a Fk(The)40 b(age-area)j(h)m(yp)s(othesis)d(-)h
(eviden)m(tly)h(\014rst)e(dev)m(elop)s(ed)h(and)f(applied)g(b)m(y)h
(Sapir)e(\(1916\))240 540 y(in)34 b(his)h(study)f(of)h(certain)g(Nativ)
m(e)i(American)e(Languages)h(-)f(is)g(often)g(in)m(v)m(ok)m(ed)h(when)e
(linguistic)240 681 y(evidence)e(is)g(used)f(in)g(supp)s(ort)f(of)h(h)m
(yp)s(otheses)h(ab)s(out)f(where)g(di\013eren)m(t)h(sorts)g(of)g
(cultures)f(orig-)240 822 y(inated,)i(ho)m(w)f(they)h(ev)m(olv)m(ed)h
(o)m(v)m(er)g(time,)f(and)f(ho)m(w)h(they)f(came)h(to)h(b)s(e)d(lo)s
(cated)j(where)e(they)h(are)240 963 y(to)s(da)m(y)-8
b(.)37 b(Brie\015y)f(stated,)h(the)f(h)m(yp)s(othesis)f(sa)m(ys)h(that)
h(the)e(geographic)j(area)e(where)f(a)i(language)240
1104 y(ph)m(ylogen)m(y)i(originated)g(is)f(most)g(lik)m(ely)h(the)f
(place)h(where)e(the)h(comp)s(onen)m(t)h(languages)g(of)f(the)240
1245 y(ph)m(ylogen)m(y)31 b(are)g(maximally)h(di\013eren)m(tiated.)381
1403 y(While)39 b(the)f(question)g(ma)m(y)g(some)h(of)f(academic)h(in)m
(terest)g(only)-8 b(,)39 b(a)f(wide)g(v)-5 b(ariet)m(y)39
b(of)f(recen)m(t)240 1544 y(economic)32 b(literature)g(highligh)m(ts)g
(the)f(imp)s(ortance)g(of)g(understanding)f(ho)m(w)h(w)m(e)g(arriv)m
(ed)g(at)h(the)240 1685 y(curren)m(t)e(cultural)g(mix)f(around)g(the)h
(glob)s(e.)h(Coinciden)m(t)f(with)f(this)h(understanding)e(is)i(the)g
(real-)240 1826 y(ization)25 b(that)f(understanding)e(where)g
(di\013eren)m(t)i(cultures)f(came)i(from,)e(and)f(ho)m(w)i(they)f(in)m
(teracted)240 1968 y(in)30 b(the)h(past,)f(is)h(also)g(of)g(paramoun)m
(t)f(imp)s(ortance.)381 2125 y(Examples)43 b(of)f(the)h(application)h
(of)e(the)h(linguistic)g(age-area)i(h)m(yp)s(othesis)e(ab)s(ound.)e
(Sapir)240 2267 y(himself)26 b(used)g(these)i(argumen)m(ts)f(to)g
(suggest)g(that)h(the)f(so-called)h(Na-Dene)h(linguistic)e(grouping)240
2408 y(originated)39 b(in)e(and)f(around)h(the)g(North)g(W)-8
b(est)39 b(Coast.)g(As)e(another)g(example,)i(A)m(tkinson)f(and)240
2549 y(Gra)m(y)d(\(2003\))h(ha)m(v)m(e)f(used)e(the)i(results)e(to)i
(suggest)g(that)f(the)g(Indo-Europ)s(ean)f(languages)i(orig-)240
2690 y(inated)g(in)f(Anatolia,)i(not,)f(as)g(is)g(sometimes)g(supp)s
(osed,)e(on)h(the)h(stepp)s(es)f(of)g(Sib)s(eria.)g(F)-8
b(urther)240 2831 y(applications)40 b(of)f(the)g(idea)g(-)g(either)h
(implicit)f(or)g(explicit)h(use)f(of)g(the)g(idea)g(-)g(are)g(almost)h
(to)s(o)240 2972 y(n)m(umerous)30 b(to)i(men)m(tion.)g(Ruhlen)e
(\(2001\))k(uses)c(the)i(age-area)h(h)m(yp)s(othesis)e(to)h(lend)e
(insigh)m(t)i(in)m(to)240 3113 y(debates)d(ab)s(out)f(the)g(origins)h
(of)g(the)f(Na-Dene,)i(as)f(w)m(ell)g(as)g(the)f(origins)h(of)f(the)h
(Ban)m(tu)g(linguistic)240 3254 y(group)h(in)g(Africa.)381
3412 y(What)38 b(is)f(the)h(existing)g(theoretical)i(basis)d(for)g(the)
g(age-area)j(h)m(yp)s(othesis?)d(In)g(spite)g(of)h(its)240
3553 y(wide)28 b(range)h(of)g(applications)g(and)f(deep)g(implications)
i(for)e(h)m(uman)f(history)-8 b(,)29 b(there)g(is)g(almost)g(no)240
3694 y(theoretical)f(supp)s(ort)d(for)g(the)h(h)m(yp)s(othesis.)g(In)f
(p)s(opulation)h(genetics,)i(it)e(is)g(w)m(ell-kno)m(wn)h(that)g(the)
240 3836 y(p)s(oin)m(t)g(of)f(maximal)i(genetic)g(div)m(ersit)m(y)f(of)
g(p)s(opulations)f(is)h(closest)h(to)f(the)g(geographical)h(p)s(oin)m
(t)f(of)240 3977 y(origin.)33 b(This)f(is)h(b)s(ecause)f(migran)m(t)i
(p)s(opulations)e(are)h(subsets)f(of)g(the)h(paren)m(t)g(p)s
(opulation,)g(and)240 4118 y(hence)38 b(ha)m(v)m(e)h(only)f(a)g(subset)
g(of)g(the)g(p)s(opulation)f(genes.)i(But)f(this)g(is)g(certainly)h
(not)f(the)g(case)240 4259 y(with)26 b(language;)h(migran)m(t)g(p)s
(opulations)f(don't)g(migrate)h(with)f(only)g(a)h(subset)e(of)h(the)g
(v)m(o)s(cabulary)240 4400 y(or)k(grammar)h(of)f(the)h(paren)m(t)f
(language!)381 4558 y(The)21 b(lac)m(k)j(of)e(a)g(theoretical)i(basis)e
(for)f(the)h(age)h(area)g(h)m(yp)s(othesis)e(is)h(also)h(a)f(problem)f
(for)h(its)g(use)240 4699 y(in)e(tec)m(hnical)j(situations.)e(F)-8
b(or)22 b(example,)f(supp)s(ose)e(one)i(wished)f(to)h(include)g(an)f
(ancien)m(t)i(migratory)240 4840 y(path)33 b(in)h(a)g(statistical)i(mo)
s(del?)e(Since)g(the)g(h)m(yp)s(othesis)f(has)g(no)h(theoretical)i
(underpinnings,)31 b(it)240 4981 y(is)f(di\016cult)f(to)i(see)f(ho)m(w)
g(to)g(construct)g(a)g(lik)m(eliho)s(o)s(d)h(for)e(a)h(certain)h(path)e
(or)h(migratory)g(history)-8 b(.)381 5139 y(In)35 b(this)g(pap)s(er,)f
(I)h(dev)m(elop)i(a)e(theoretical)j(foundation)d(for)g(the)h(age-area)h
(h)m(yp)s(othesis,)f(and)p 0 TeXcolorgray 1927 5400 a(2)p
0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 240 399 a Fk(mak)m(e)31 b(some)f(of)f(the)h(terms)g(supp)s
(orting)e(the)i(h)m(yp)s(othesis)f(more)h(rigorous.)g(The)f(theory)h
(is)f(based)240 540 y(up)s(on)42 b(a)i(particular)g(idea)g(that)g
(turns)f(out)h(to)g(corresp)s(ond)e(with)i(a)g(probabilistic)g(notion)g
(of)240 681 y(parsimon)m(y)-8 b(.)31 b(The)f(idea)h(also)240
1021 y Fj(1)135 b(Problem)45 b(Description)h(and)f(Motiv)-7
b(ation)240 1269 y Fk(Consider)25 b(the)h(h)m(yp)s(othetical)h(ph)m
(ylogenetic)g(tree)f(displa)m(y)m(ed)g(in)g(\014gure)f(1.)h(There)f
(are)h(\014v)m(e)g(related)240 1410 y(cultures)33 b(in)f(the)h
(example,)h(and)e(p)s(erhaps)g(a)h(linguist)g(or)g(geneticist)i(has)e
(pieced)g(together)h(that)240 1551 y(degree)21 b(of)g(relatedness)g
(among)g(the)g(groups)f(as)h(depicted)f(on)h(the)f(\014gure.)h(A)f(is)h
(the)g(most)g(div)m(ergen)m(t)240 1692 y(of)35 b(the)g(group,)f(with)g
(B,)h(C,)g(D,)g(E)g(all)g(b)s(eing)f(more)h(closely)h(related,)g(and)e
(D)h(and)f(E)h(b)s(eing)f(the)240 1833 y(t)m(w)m(o)39
b(most)f(closely)h(related)g(languages.)g(T)-8 b(o)38
b(a)m(v)m(oid)h(forming)e(impressions)g(based)h(on)f(evidence)240
1975 y(that)j(is)f(not)h(part)f(of)g(the)h(h)m(yp)s(othesis,)f(w)m(e)g
(will)h(supp)s(ose)e(that)i(the)f(lo)s(cations)i(of)e(the)h(groups)240
2116 y(ha)m(v)m(e)28 b(b)s(een)e(concealed)i(from)e(us,)g(and)g(that)i
(w)m(e)f(ha)m(v)m(e)g(no)g(access)h(to)f(arc)m(haeological)k(or)c
(historical)240 2257 y(information)k(ab)s(out)f(the)g(language)i(sto)s
(c)m(k.)381 2415 y(In)h(terms)h(of)g(the)g(Age-Area)i(h)m(yp)s(othesis)
d(and)g(the)i(ultimate)g(source)f(of)g(the)g(tree)g(\(i.e.,)i(the)240
2556 y(p)s(oin)m(t)c(at)i(whic)m(h)e(the)h(tree)g(originated\))h(-)f
(one)f(w)m(ould)h(p)s(osit)f(that)h(the)g(p)s(oin)m(t)f(of)h(origin)g
(w)m(as)g(A's)240 2697 y(lo)s(cation,)k(as)e(A)g(is)g(the)g(most)h(div)
m(ergen)m(t)g(language)g(from)f(the)g(group.)f(If)h(one)g(w)m(an)m(ted)
h(to)g(push)240 2838 y(the)g(h)m(yp)s(othesis)g(a)h(bit)f(further,)g
(or)g(ev)m(en)h(apply)f(it)h(recursiv)m(ely)-8 b(,)37
b(one)g(w)m(ould)f(come)h(up)f(with)g(a)240 2979 y(h)m(yp)s(othetical)d
(migratory)f(route:)g(the)f(h)m(yp)s(othesis)g(w)m(ould)g(lead)h(one)g
(to)g(b)s(eliev)m(e)g(that)g(the)g(p)s(oin)m(t)240 3120
y(of)h(origin)g(of)f(the)h(sto)s(c)m(k)g(w)m(as)g(A,)g(at)g(whic)m(h)f
(p)s(oin)m(t)h(there)f(w)m(as)h(a)g(migration)g(from)f(A)h(to)g(B,)g
(then)240 3261 y(from)d(B)h(to)g(C,)f(and)g(then)g(from)g(C)g(to)h
(either)g(D)f(or)h(E.)381 3419 y(There)26 b(are)h(a)h(large)f(n)m(um)m
(b)s(er)f(of)h(other)g(p)s(ossibilities)g(as)g(w)m(ell,)h(ev)m(en)f
(though)g(the)g(structure)f(of)240 3560 y(the)i(tree)h(constrains)g
(some)f(sorts)h(of)f(ev)m(en)m(ts.)i(F)-8 b(or)29 b(example,)g(an)f
(additional)h(plausible)g(sequence)240 3701 y(of)f(migratory)h(ev)m(en)
m(ts)h(w)m(ould)d(b)s(e)h(for)g(an)g(initial)h(migratory)g(episo)s(de)f
(from)f(C)h(to)h(A,)f(follo)m(w)m(ed)i(b)m(y)240 3843
y(another)h(from)g(C)g(to)h(B,)f(follo)m(w)m(ed)i(b)m(y)e(y)m(et)h
(another)g(migration)g(from)e(C)h(to)h(D)f(or)h(E.)f(These)g(t)m(w)m(o)
240 3984 y(migratory)g(routes)g(are)f(presen)m(ted)h(in)f(\014gure)g
(1.)381 4142 y(The)37 b(age)h(area)g(h)m(yp)s(othesis)e(suggests)i
(that)f(the)h(second)f(sequence)g(of)g(ev)m(en)m(ts)h(is)f(someho)m(w)
240 4283 y(less)h(lik)m(ely)i(than)e(the)g(sequence)g(of)g(ev)m(en)m
(ts)i(describ)s(ed)c(b)m(y)i(the)g(\014rst.)g(Wh)m(y?)g(F)-8
b(or)39 b(a)f(v)-5 b(ariet)m(y)40 b(of)240 4424 y(reasons)31
b(-)g(one)h(migh)m(t)f(simply)g(app)s(eal)g(to)h(Occam's)g(razor)f(-)g
(the)g(ev)m(en)m(ts)i(on)e(the)g(left-hand)g(side)240
4565 y(of)36 b(\014gure)f(1)h(require)g(only)g(one)g(migratory)h(c)m
(hain,)f(while)g(the)g(ev)m(en)m(ts)i(on)d(the)h(righ)m(t-hand)g(side)
240 4706 y(require)23 b(three)h(separate)g(expansions:)f(an)h(initial)g
(migration)h(from)e(A)g(to)h(C,)f(follo)m(w)m(ed)i(b)m(y)f(another)240
4847 y(from)i(A)g(to)g(B.)h(A)f(third)f(migratory)i(ev)m(en)m(t)h(b)s
(egins)d(from)h(C)f(con)m(tin)m(ues)i(to)g(D,)g(and)e(then)h(to)h(E.)f
(W)-8 b(e)240 4988 y(can)33 b(no)m(w)g(p)s(ose)f(our)g(question)h(as)g
(follo)m(ws:)h(if)f(w)m(e)g(b)s(eliev)m(e)h(these)f(migratory)g(ev)m
(en)m(ts)h(to)g(b)s(e)e(rare,)240 5129 y(and)g(w)m(e)h(wish)f(to)h
(conserv)m(e)g(them)g(in)f(explaining)h(historical)h(migrations,)f
(what)g(sort)f(of)h(mo)s(del)p 0 TeXcolorgray 1927 5400
a(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
240 3855 a @beginspecial 18 @llx 180 @lly 594 @urx 612
@ury 4104 @rwi @setspecial
%%BeginDocument: simplePT.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: C:/Users/mjbaker/Documents/Institutional Evolution/PapersAndWritings/simplePT.eps
%%Creator: matplotlib version 1.5.1, http://matplotlib.org/
%%CreationDate: Thu Mar  3 11:55:22 2016
%%Orientation: portrait
%%BoundingBox: 18 180 594 612
%%EndComments
%%BeginProlog
/mpldict 8 dict def
mpldict begin
/m { moveto } bind def
/l { lineto } bind def
/r { rlineto } bind def
/c { curveto } bind def
/cl { closepath } bind def
/box {
m
1 index 0 r
0 exch r
neg 0 r
cl
} bind def
/clipbox {
box
clip
newpath
} bind def
%!PS-Adobe-3.0 Resource-Font
%%Title: Bitstream Vera Sans
%%Copyright: Copyright (c) 2003 by Bitstream, Inc. All Rights Reserved.
%%Creator: Converted from TrueType to type 3 by PPR
25 dict begin
/_d{bind def}bind def
/_m{moveto}_d
/_l{lineto}_d
/_cl{closepath eofill}_d
/_c{curveto}_d
/_sc{7 -1 roll{setcachedevice}{pop pop pop pop pop pop}ifelse}_d
/_e{exec}_d
/FontName /BitstreamVeraSans-Roman def
/PaintType 0 def
/FontMatrix[.001 0 0 .001 0 0]def
/FontBBox[-183 -236 1287 928]def
/FontType 3 def
/Encoding [ /zero /one /two /three /four /five /six /seven /eight /A /B /C /D /E /t ] def
/FontInfo 10 dict dup begin
/FamilyName (Bitstream Vera Sans) def
/FullName (Bitstream Vera Sans) def
/Notice (Copyright (c) 2003 by Bitstream, Inc. All Rights Reserved. Bitstream Vera is a trademark of Bitstream, Inc.) def
/Weight (Roman) def
/Version (Release 1.10) def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -213 def
/UnderlineThickness 143 def
end readonly def
/CharStrings 15 dict dup begin
/zero{636 0 66 -13 570 742 _sc
318 664 _m
267 664 229 639 203 589 _c
177 539 165 464 165 364 _c
165 264 177 189 203 139 _c
229 89 267 64 318 64 _c
369 64 407 89 433 139 _c
458 189 471 264 471 364 _c
471 464 458 539 433 589 _c
407 639 369 664 318 664 _c
318 742 _m
399 742 461 709 505 645 _c
548 580 570 486 570 364 _c
570 241 548 147 505 83 _c
461 19 399 -13 318 -13 _c
236 -13 173 19 130 83 _c
87 147 66 241 66 364 _c
66 486 87 580 130 645 _c
173 709 236 742 318 742 _c
_cl}_d
/one{636 0 110 0 544 729 _sc
124 83 _m
285 83 _l
285 639 _l
110 604 _l
110 694 _l
284 729 _l
383 729 _l
383 83 _l
544 83 _l
544 0 _l
124 0 _l
124 83 _l
_cl}_d
/two{{636 0 73 0 536 742 _sc
192 83 _m
536 83 _l
536 0 _l
73 0 _l
73 83 _l
110 121 161 173 226 239 _c
290 304 331 346 348 365 _c
380 400 402 430 414 455 _c
426 479 433 504 433 528 _c
433 566 419 598 392 622 _c
365 646 330 659 286 659 _c
255 659 222 653 188 643 _c
154 632 117 616 78 594 _c
78 694 _l
118 710 155 722 189 730 _c
223 738 255 742 284 742 _c
}_e{359 742 419 723 464 685 _c
509 647 532 597 532 534 _c
532 504 526 475 515 449 _c
504 422 484 390 454 354 _c
446 344 420 317 376 272 _c
332 227 271 164 192 83 _c
_cl}_e}_d
/three{{636 0 76 -13 556 742 _sc
406 393 _m
453 383 490 362 516 330 _c
542 298 556 258 556 212 _c
556 140 531 84 482 45 _c
432 6 362 -13 271 -13 _c
240 -13 208 -10 176 -4 _c
144 1 110 10 76 22 _c
76 117 _l
103 101 133 89 166 81 _c
198 73 232 69 268 69 _c
330 69 377 81 409 105 _c
441 129 458 165 458 212 _c
458 254 443 288 413 312 _c
383 336 341 349 287 349 _c
}_e{202 349 _l
202 430 _l
291 430 _l
339 430 376 439 402 459 _c
428 478 441 506 441 543 _c
441 580 427 609 401 629 _c
374 649 336 659 287 659 _c
260 659 231 656 200 650 _c
169 644 135 635 98 623 _c
98 711 _l
135 721 170 729 203 734 _c
235 739 266 742 296 742 _c
370 742 429 725 473 691 _c
517 657 539 611 539 553 _c
539 513 527 479 504 451 _c
481 423 448 403 406 393 _c
_cl}_e}_d
/four{636 0 49 0 580 729 _sc
378 643 _m
129 254 _l
378 254 _l
378 643 _l
352 729 _m
476 729 _l
476 254 _l
580 254 _l
580 172 _l
476 172 _l
476 0 _l
378 0 _l
378 172 _l
49 172 _l
49 267 _l
352 729 _l
_cl}_d
/five{{636 0 77 -13 549 729 _sc
108 729 _m
495 729 _l
495 646 _l
198 646 _l
198 467 _l
212 472 227 476 241 478 _c
255 480 270 482 284 482 _c
365 482 429 459 477 415 _c
525 370 549 310 549 234 _c
549 155 524 94 475 51 _c
426 8 357 -13 269 -13 _c
238 -13 207 -10 175 -6 _c
143 -1 111 6 77 17 _c
77 116 _l
106 100 136 88 168 80 _c
199 72 232 69 267 69 _c
}_e{323 69 368 83 401 113 _c
433 143 450 183 450 234 _c
450 284 433 324 401 354 _c
368 384 323 399 267 399 _c
241 399 214 396 188 390 _c
162 384 135 375 108 363 _c
108 729 _l
_cl}_e}_d
/six{{636 0 70 -13 573 742 _sc
330 404 _m
286 404 251 388 225 358 _c
199 328 186 286 186 234 _c
186 181 199 139 225 109 _c
251 79 286 64 330 64 _c
374 64 409 79 435 109 _c
461 139 474 181 474 234 _c
474 286 461 328 435 358 _c
409 388 374 404 330 404 _c
526 713 _m
526 623 _l
501 635 476 644 451 650 _c
425 656 400 659 376 659 _c
310 659 260 637 226 593 _c
}_e{192 549 172 482 168 394 _c
187 422 211 444 240 459 _c
269 474 301 482 336 482 _c
409 482 467 459 509 415 _c
551 371 573 310 573 234 _c
573 159 550 99 506 54 _c
462 9 403 -13 330 -13 _c
246 -13 181 19 137 83 _c
92 147 70 241 70 364 _c
70 479 97 571 152 639 _c
206 707 280 742 372 742 _c
396 742 421 739 447 735 _c
472 730 498 723 526 713 _c
_cl}_e}_d
/seven{636 0 82 0 551 729 _sc
82 729 _m
551 729 _l
551 687 _l
286 0 _l
183 0 _l
432 646 _l
82 646 _l
82 729 _l
_cl}_d
/eight{{636 0 68 -13 568 742 _sc
318 346 _m
271 346 234 333 207 308 _c
180 283 167 249 167 205 _c
167 161 180 126 207 101 _c
234 76 271 64 318 64 _c
364 64 401 76 428 102 _c
455 127 469 161 469 205 _c
469 249 455 283 429 308 _c
402 333 365 346 318 346 _c
219 388 _m
177 398 144 418 120 447 _c
96 476 85 511 85 553 _c
85 611 105 657 147 691 _c
188 725 245 742 318 742 _c
}_e{390 742 447 725 489 691 _c
530 657 551 611 551 553 _c
551 511 539 476 515 447 _c
491 418 459 398 417 388 _c
464 377 501 355 528 323 _c
554 291 568 251 568 205 _c
568 134 546 80 503 43 _c
459 5 398 -13 318 -13 _c
237 -13 175 5 132 43 _c
89 80 68 134 68 205 _c
68 251 81 291 108 323 _c
134 355 171 377 219 388 _c
183 544 _m
183 506 194 476 218 455 _c
}_e{242 434 275 424 318 424 _c
360 424 393 434 417 455 _c
441 476 453 506 453 544 _c
453 582 441 611 417 632 _c
393 653 360 664 318 664 _c
275 664 242 653 218 632 _c
194 611 183 582 183 544 _c
_cl}_e}_d
/A{684 0 8 0 676 729 _sc
342 632 _m
208 269 _l
476 269 _l
342 632 _l
286 729 _m
398 729 _l
676 0 _l
573 0 _l
507 187 _l
178 187 _l
112 0 _l
8 0 _l
286 729 _l
_cl}_d
/B{{686 0 98 0 615 729 _sc
197 348 _m
197 81 _l
355 81 _l
408 81 447 92 473 114 _c
498 136 511 169 511 215 _c
511 260 498 293 473 315 _c
447 337 408 348 355 348 _c
197 348 _l
197 648 _m
197 428 _l
343 428 _l
391 428 426 437 450 455 _c
474 473 486 500 486 538 _c
486 574 474 602 450 620 _c
426 638 391 648 343 648 _c
197 648 _l
98 729 _m
350 729 _l
}_e{425 729 483 713 524 682 _c
564 650 585 606 585 549 _c
585 504 574 468 553 442 _c
532 416 502 399 462 393 _c
510 382 548 360 575 327 _c
601 294 615 253 615 204 _c
615 138 592 88 548 53 _c
504 17 441 0 360 0 _c
98 0 _l
98 729 _l
_cl}_e}_d
/C{{698 0 56 -13 644 742 _sc
644 673 _m
644 569 _l
610 599 575 622 537 638 _c
499 653 460 661 418 661 _c
334 661 270 635 226 584 _c
182 533 160 460 160 364 _c
160 268 182 194 226 143 _c
270 92 334 67 418 67 _c
460 67 499 74 537 90 _c
575 105 610 128 644 159 _c
644 56 _l
609 32 572 15 534 4 _c
496 -7 455 -13 412 -13 _c
302 -13 215 20 151 87 _c
}_e{87 154 56 246 56 364 _c
56 481 87 573 151 641 _c
215 708 302 742 412 742 _c
456 742 497 736 535 725 _c
573 713 610 696 644 673 _c
_cl}_e}_d
/D{770 0 98 0 711 729 _sc
197 648 _m
197 81 _l
316 81 _l
416 81 490 103 537 149 _c
583 195 607 267 607 365 _c
607 463 583 534 537 580 _c
490 625 416 648 316 648 _c
197 648 _l
98 729 _m
301 729 _l
442 729 546 699 612 641 _c
678 582 711 490 711 365 _c
711 239 677 147 611 88 _c
545 29 441 0 301 0 _c
98 0 _l
98 729 _l
_cl}_d
/E{632 0 98 0 568 729 _sc
98 729 _m
559 729 _l
559 646 _l
197 646 _l
197 430 _l
544 430 _l
544 347 _l
197 347 _l
197 83 _l
568 83 _l
568 0 _l
98 0 _l
98 729 _l
_cl}_d
/t{392 0 27 0 368 702 _sc
183 702 _m
183 547 _l
368 547 _l
368 477 _l
183 477 _l
183 180 _l
183 135 189 106 201 94 _c
213 81 238 75 276 75 _c
368 75 _l
368 0 _l
276 0 _l
206 0 158 13 132 39 _c
106 65 93 112 93 180 _c
93 477 _l
27 477 _l
27 547 _l
93 547 _l
93 702 _l
183 702 _l
_cl}_d
end readonly def

/BuildGlyph
 {exch begin
 CharStrings exch
 2 copy known not{pop /.notdef}if
 true 3 1 roll get exec
 end}_d

/BuildChar {
 1 index /Encoding get exch get
 1 index /BuildGlyph get exec
}_d

FontName currentdict end definefont pop
end
%%EndProlog
mpldict begin
18 180 translate
576 432 0 0 clipbox
100000 setmiterlimit
gsave
0 0 m
576 0 l
576 432 l
0 432 l
cl
1.000 setgray
fill
grestore
1.000 setlinewidth
1 setlinejoin
2 setlinecap
[] 0 setdash
0.000 0.000 1.000 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
131.52 191.314286 m
211.556967 191.314286 l
stroke
grestore
0.000 0.500 0.000 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
211.556967 191.314286 m
211.556967 92.571429 l
stroke
grestore
1.000 0.000 0.000 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
211.556967 191.314286 m
270.068678 216 l
stroke
grestore
0.000 0.750 0.750 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
211.556967 191.314286 m
270.068678 216 l
stroke
grestore
0.750 0.000 0.750 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
211.556967 191.314286 m
270.068678 216 l
stroke
grestore
0.750 0.750 0.000 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
211.556967 191.314286 m
270.068678 216 l
stroke
grestore
0.000 setgray
gsave
446.4 345.6 72 43.2 clipbox
211.556967 92.571429 m
211.556967 92.571429 l
stroke
grestore
0.000 0.000 1.000 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
270.068678 216 m
270.068678 141.942857 l
stroke
grestore
0.000 0.500 0.000 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
270.068678 216 m
312.844167 240.685714 l
stroke
grestore
1.000 0.000 0.000 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
270.068678 216 m
312.844167 240.685714 l
stroke
grestore
0.000 0.750 0.750 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
270.068678 216 m
312.844167 240.685714 l
stroke
grestore
0.750 0.000 0.750 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
211.556967 92.571429 m
211.556967 92.571429 l
stroke
grestore
0.750 0.750 0.000 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
270.068678 141.942857 m
270.068678 141.942857 l
stroke
grestore
0.000 setgray
gsave
446.4 345.6 72 43.2 clipbox
312.844167 240.685714 m
312.844167 191.314286 l
stroke
grestore
0.000 0.000 1.000 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
312.844167 240.685714 m
344.115555 265.371429 l
stroke
grestore
0.000 0.500 0.000 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
312.844167 240.685714 m
344.115555 265.371429 l
stroke
grestore
1.000 0.000 0.000 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
211.556967 92.571429 m
429.12 92.571429 l
stroke
grestore
0.000 0.750 0.750 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
270.068678 141.942857 m
429.12 141.942857 l
stroke
grestore
0.750 0.000 0.750 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
312.844167 191.314286 m
429.12 191.314286 l
stroke
grestore
0.750 0.750 0.000 setrgbcolor
gsave
446.4 345.6 72 43.2 clipbox
344.115555 265.371429 m
429.12 240.685714 l
stroke
grestore
0.000 setgray
gsave
446.4 345.6 72 43.2 clipbox
344.115555 265.371429 m
429.12 290.057143 l
stroke
grestore
/BitstreamVeraSans-Roman findfont
12.000 scalefont
setfont
gsave
171.538483 191.314286 translate
0.000000 rotate
0.000000 0.000000 m /t glyphshow
4.705078 0.000000 m /zero glyphshow
grestore
gsave
237.649060 205.907143 translate
0.000000 rotate
0.000000 0.000000 m /t glyphshow
4.705078 0.000000 m /one glyphshow
grestore
gsave
289.143526 231.092857 translate
0.000000 rotate
0.000000 0.000000 m /t glyphshow
4.705078 0.000000 m /two glyphshow
grestore
gsave
326.788998 256.278571 translate
0.000000 rotate
0.000000 0.000000 m /t glyphshow
4.705078 0.000000 m /three glyphshow
grestore
gsave
318.510837 92.571429 translate
0.000000 rotate
0.000000 0.000000 m /t glyphshow
4.705078 0.000000 m /four glyphshow
grestore
gsave
348.258223 142.942857 translate
0.000000 rotate
0.000000 0.000000 m /t glyphshow
4.705078 0.000000 m /five glyphshow
grestore
gsave
370.005304 193.314286 translate
0.000000 rotate
0.000000 0.000000 m /t glyphshow
4.705078 0.000000 m /six glyphshow
grestore
gsave
385.903694 256.278571 translate
0.000000 rotate
0.000000 0.000000 m /t glyphshow
4.705078 0.000000 m /seven glyphshow
grestore
gsave
385.903694 281.464286 translate
0.000000 rotate
0.000000 0.000000 m /t glyphshow
4.705078 0.000000 m /eight glyphshow
grestore
gsave
441.024000 92.571429 translate
0.000000 rotate
0.000000 0.000000 m /A glyphshow
grestore
gsave
441.024000 141.942857 translate
0.000000 rotate
0.000000 0.000000 m /B glyphshow
grestore
gsave
441.024000 191.314286 translate
0.000000 rotate
0.000000 0.000000 m /C glyphshow
grestore
gsave
441.024000 240.685714 translate
0.000000 rotate
0.000000 0.000000 m /D glyphshow
grestore
gsave
441.024000 290.057143 translate
0.000000 rotate
0.000000 0.000000 m /E glyphshow
grestore

end
showpage

%%EndDocument
 @endspecial 0 TeXcolorgray 1227 4051 a Fk(Figure)31
b(1:)g(A)f(simple)g(ph)m(ylogenetic)j(tree)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1927 5400 a(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
240 3798 a @beginspecial 18 @llx 180 @lly 594 @urx 612
@ury 4104 @rwi @setspecial
%%BeginDocument: simpleMR.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: C:/Users/mjbaker/Documents/Institutional Evolution/PapersAndWritings/simpleMR.eps
%%Creator: matplotlib version 1.5.1, http://matplotlib.org/
%%CreationDate: Tue Feb 16 09:28:29 2016
%%Orientation: portrait
%%BoundingBox: 18 180 594 612
%%EndComments
%%BeginProlog
/mpldict 8 dict def
mpldict begin
/m { moveto } bind def
/l { lineto } bind def
/r { rlineto } bind def
/c { curveto } bind def
/cl { closepath } bind def
/box {
m
1 index 0 r
0 exch r
neg 0 r
cl
} bind def
/clipbox {
box
clip
newpath
} bind def
%!PS-Adobe-3.0 Resource-Font
%%Title: Bitstream Vera Sans
%%Copyright: Copyright (c) 2003 by Bitstream, Inc. All Rights Reserved.
%%Creator: Converted from TrueType to type 3 by PPR
25 dict begin
/_d{bind def}bind def
/_m{moveto}_d
/_l{lineto}_d
/_cl{closepath eofill}_d
/_c{curveto}_d
/_sc{7 -1 roll{setcachedevice}{pop pop pop pop pop pop}ifelse}_d
/_e{exec}_d
/FontName /BitstreamVeraSans-Roman def
/PaintType 0 def
/FontMatrix[.001 0 0 .001 0 0]def
/FontBBox[-183 -236 1287 928]def
/FontType 3 def
/Encoding [ /space /A /B /C /D /E /H /M /R /T /a /c /e /f /g /h /i /l /n /o /p /r /s /t /u /w /y ] def
/FontInfo 10 dict dup begin
/FamilyName (Bitstream Vera Sans) def
/FullName (Bitstream Vera Sans) def
/Notice (Copyright (c) 2003 by Bitstream, Inc. All Rights Reserved. Bitstream Vera is a trademark of Bitstream, Inc.) def
/Weight (Roman) def
/Version (Release 1.10) def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -213 def
/UnderlineThickness 143 def
end readonly def
/CharStrings 27 dict dup begin
/space{318 0 0 0 0 0 _sc
}_d
/A{684 0 8 0 676 729 _sc
342 632 _m
208 269 _l
476 269 _l
342 632 _l
286 729 _m
398 729 _l
676 0 _l
573 0 _l
507 187 _l
178 187 _l
112 0 _l
8 0 _l
286 729 _l
_cl}_d
/B{{686 0 98 0 615 729 _sc
197 348 _m
197 81 _l
355 81 _l
408 81 447 92 473 114 _c
498 136 511 169 511 215 _c
511 260 498 293 473 315 _c
447 337 408 348 355 348 _c
197 348 _l
197 648 _m
197 428 _l
343 428 _l
391 428 426 437 450 455 _c
474 473 486 500 486 538 _c
486 574 474 602 450 620 _c
426 638 391 648 343 648 _c
197 648 _l
98 729 _m
350 729 _l
}_e{425 729 483 713 524 682 _c
564 650 585 606 585 549 _c
585 504 574 468 553 442 _c
532 416 502 399 462 393 _c
510 382 548 360 575 327 _c
601 294 615 253 615 204 _c
615 138 592 88 548 53 _c
504 17 441 0 360 0 _c
98 0 _l
98 729 _l
_cl}_e}_d
/C{{698 0 56 -13 644 742 _sc
644 673 _m
644 569 _l
610 599 575 622 537 638 _c
499 653 460 661 418 661 _c
334 661 270 635 226 584 _c
182 533 160 460 160 364 _c
160 268 182 194 226 143 _c
270 92 334 67 418 67 _c
460 67 499 74 537 90 _c
575 105 610 128 644 159 _c
644 56 _l
609 32 572 15 534 4 _c
496 -7 455 -13 412 -13 _c
302 -13 215 20 151 87 _c
}_e{87 154 56 246 56 364 _c
56 481 87 573 151 641 _c
215 708 302 742 412 742 _c
456 742 497 736 535 725 _c
573 713 610 696 644 673 _c
_cl}_e}_d
/D{770 0 98 0 711 729 _sc
197 648 _m
197 81 _l
316 81 _l
416 81 490 103 537 149 _c
583 195 607 267 607 365 _c
607 463 583 534 537 580 _c
490 625 416 648 316 648 _c
197 648 _l
98 729 _m
301 729 _l
442 729 546 699 612 641 _c
678 582 711 490 711 365 _c
711 239 677 147 611 88 _c
545 29 441 0 301 0 _c
98 0 _l
98 729 _l
_cl}_d
/E{632 0 98 0 568 729 _sc
98 729 _m
559 729 _l
559 646 _l
197 646 _l
197 430 _l
544 430 _l
544 347 _l
197 347 _l
197 83 _l
568 83 _l
568 0 _l
98 0 _l
98 729 _l
_cl}_d
/H{752 0 98 0 654 729 _sc
98 729 _m
197 729 _l
197 430 _l
555 430 _l
555 729 _l
654 729 _l
654 0 _l
555 0 _l
555 347 _l
197 347 _l
197 0 _l
98 0 _l
98 729 _l
_cl}_d
/M{863 0 98 0 765 729 _sc
98 729 _m
245 729 _l
431 233 _l
618 729 _l
765 729 _l
765 0 _l
669 0 _l
669 640 _l
481 140 _l
382 140 _l
194 640 _l
194 0 _l
98 0 _l
98 729 _l
_cl}_d
/R{{695 0 98 0 666 729 _sc
444 342 _m
465 334 486 319 506 296 _c
526 272 546 240 566 199 _c
666 0 _l
560 0 _l
467 187 _l
443 235 419 268 397 284 _c
374 300 343 308 304 308 _c
197 308 _l
197 0 _l
98 0 _l
98 729 _l
321 729 _l
404 729 466 711 507 677 _c
548 642 569 589 569 519 _c
569 473 558 434 537 404 _c
515 374 484 353 444 342 _c
197 648 _m
197 389 _l
321 389 _l
}_e{368 389 404 400 428 422 _c
452 444 465 476 465 519 _c
465 561 452 593 428 615 _c
404 637 368 648 321 648 _c
197 648 _l
_cl}_e}_d
/T{611 0 -2 0 614 729 _sc
-2 729 _m
614 729 _l
614 646 _l
355 646 _l
355 0 _l
256 0 _l
256 646 _l
-2 646 _l
-2 729 _l
_cl}_d
/a{{613 0 60 -13 522 560 _sc
343 275 _m
270 275 220 266 192 250 _c
164 233 150 205 150 165 _c
150 133 160 107 181 89 _c
202 70 231 61 267 61 _c
317 61 357 78 387 114 _c
417 149 432 196 432 255 _c
432 275 _l
343 275 _l
522 312 _m
522 0 _l
432 0 _l
432 83 _l
411 49 385 25 355 10 _c
325 -5 287 -13 243 -13 _c
187 -13 142 2 109 33 _c
76 64 60 106 60 159 _c
}_e{60 220 80 266 122 298 _c
163 329 224 345 306 345 _c
432 345 _l
432 354 _l
432 395 418 427 391 450 _c
364 472 326 484 277 484 _c
245 484 215 480 185 472 _c
155 464 127 453 100 439 _c
100 522 _l
132 534 164 544 195 550 _c
226 556 256 560 286 560 _c
365 560 424 539 463 498 _c
502 457 522 395 522 312 _c
_cl}_e}_d
/c{{550 0 55 -13 488 560 _sc
488 526 _m
488 442 _l
462 456 437 466 411 473 _c
385 480 360 484 334 484 _c
276 484 230 465 198 428 _c
166 391 150 339 150 273 _c
150 206 166 154 198 117 _c
230 80 276 62 334 62 _c
360 62 385 65 411 72 _c
437 79 462 90 488 104 _c
488 21 _l
462 9 436 0 410 -5 _c
383 -10 354 -13 324 -13 _c
242 -13 176 12 128 64 _c
}_e{79 115 55 185 55 273 _c
55 362 79 432 128 483 _c
177 534 244 560 330 560 _c
358 560 385 557 411 551 _c
437 545 463 537 488 526 _c
_cl}_e}_d
/e{{615 0 55 -13 562 560 _sc
562 296 _m
562 252 _l
149 252 _l
153 190 171 142 205 110 _c
238 78 284 62 344 62 _c
378 62 412 66 444 74 _c
476 82 509 95 541 113 _c
541 28 _l
509 14 476 3 442 -3 _c
408 -9 373 -13 339 -13 _c
251 -13 182 12 131 62 _c
80 112 55 181 55 268 _c
55 357 79 428 127 481 _c
175 533 241 560 323 560 _c
397 560 455 536 498 489 _c
}_e{540 441 562 377 562 296 _c
472 322 _m
471 371 457 410 431 440 _c
404 469 368 484 324 484 _c
274 484 234 469 204 441 _c
174 413 156 373 152 322 _c
472 322 _l
_cl}_e}_d
/f{352 0 23 0 371 760 _sc
371 760 _m
371 685 _l
285 685 _l
253 685 230 678 218 665 _c
205 652 199 629 199 595 _c
199 547 _l
347 547 _l
347 477 _l
199 477 _l
199 0 _l
109 0 _l
109 477 _l
23 477 _l
23 547 _l
109 547 _l
109 585 _l
109 645 123 690 151 718 _c
179 746 224 760 286 760 _c
371 760 _l
_cl}_d
/g{{635 0 55 -207 544 560 _sc
454 280 _m
454 344 440 395 414 431 _c
387 467 349 485 301 485 _c
253 485 215 467 188 431 _c
161 395 148 344 148 280 _c
148 215 161 165 188 129 _c
215 93 253 75 301 75 _c
349 75 387 93 414 129 _c
440 165 454 215 454 280 _c
544 68 _m
544 -24 523 -93 482 -139 _c
440 -184 377 -207 292 -207 _c
260 -207 231 -204 203 -200 _c
175 -195 147 -188 121 -178 _c
}_e{121 -91 _l
147 -105 173 -115 199 -122 _c
225 -129 251 -133 278 -133 _c
336 -133 380 -117 410 -87 _c
439 -56 454 -10 454 52 _c
454 96 _l
435 64 411 40 382 24 _c
353 8 319 0 279 0 _c
211 0 157 25 116 76 _c
75 127 55 195 55 280 _c
55 364 75 432 116 483 _c
157 534 211 560 279 560 _c
319 560 353 552 382 536 _c
411 520 435 496 454 464 _c
454 547 _l
544 547 _l
}_e{544 68 _l
_cl}_e}_d
/h{634 0 91 0 549 760 _sc
549 330 _m
549 0 _l
459 0 _l
459 327 _l
459 379 448 417 428 443 _c
408 469 378 482 338 482 _c
289 482 251 466 223 435 _c
195 404 181 362 181 309 _c
181 0 _l
91 0 _l
91 760 _l
181 760 _l
181 462 _l
202 494 227 519 257 535 _c
286 551 320 560 358 560 _c
420 560 468 540 500 501 _c
532 462 549 405 549 330 _c
_cl}_d
/i{278 0 94 0 184 760 _sc
94 547 _m
184 547 _l
184 0 _l
94 0 _l
94 547 _l
94 760 _m
184 760 _l
184 646 _l
94 646 _l
94 760 _l
_cl}_d
/l{278 0 94 0 184 760 _sc
94 760 _m
184 760 _l
184 0 _l
94 0 _l
94 760 _l
_cl}_d
/n{634 0 91 0 549 560 _sc
549 330 _m
549 0 _l
459 0 _l
459 327 _l
459 379 448 417 428 443 _c
408 469 378 482 338 482 _c
289 482 251 466 223 435 _c
195 404 181 362 181 309 _c
181 0 _l
91 0 _l
91 547 _l
181 547 _l
181 462 _l
202 494 227 519 257 535 _c
286 551 320 560 358 560 _c
420 560 468 540 500 501 _c
532 462 549 405 549 330 _c
_cl}_d
/o{612 0 55 -13 557 560 _sc
306 484 _m
258 484 220 465 192 427 _c
164 389 150 338 150 273 _c
150 207 163 156 191 118 _c
219 80 257 62 306 62 _c
354 62 392 80 420 118 _c
448 156 462 207 462 273 _c
462 337 448 389 420 427 _c
392 465 354 484 306 484 _c
306 560 _m
384 560 445 534 490 484 _c
534 433 557 363 557 273 _c
557 183 534 113 490 63 _c
445 12 384 -13 306 -13 _c
227 -13 165 12 121 63 _c
77 113 55 183 55 273 _c
55 363 77 433 121 484 _c
165 534 227 560 306 560 _c
_cl}_d
/p{{635 0 91 -207 580 560 _sc
181 82 _m
181 -207 _l
91 -207 _l
91 547 _l
181 547 _l
181 464 _l
199 496 223 520 252 536 _c
281 552 316 560 356 560 _c
422 560 476 533 518 481 _c
559 428 580 359 580 273 _c
580 187 559 117 518 65 _c
476 13 422 -13 356 -13 _c
316 -13 281 -5 252 10 _c
223 25 199 49 181 82 _c
487 273 _m
487 339 473 390 446 428 _c
418 466 381 485 334 485 _c
}_e{286 485 249 466 222 428 _c
194 390 181 339 181 273 _c
181 207 194 155 222 117 _c
249 79 286 61 334 61 _c
381 61 418 79 446 117 _c
473 155 487 207 487 273 _c
_cl}_e}_d
/r{411 0 91 0 411 560 _sc
411 463 _m
401 469 390 473 378 476 _c
366 478 353 480 339 480 _c
288 480 249 463 222 430 _c
194 397 181 350 181 288 _c
181 0 _l
91 0 _l
91 547 _l
181 547 _l
181 462 _l
199 495 224 520 254 536 _c
284 552 321 560 365 560 _c
371 560 378 559 386 559 _c
393 558 401 557 411 555 _c
411 463 _l
_cl}_d
/s{{521 0 54 -13 472 560 _sc
443 531 _m
443 446 _l
417 458 391 468 364 475 _c
336 481 308 485 279 485 _c
234 485 200 478 178 464 _c
156 450 145 430 145 403 _c
145 382 153 366 169 354 _c
185 342 217 330 265 320 _c
296 313 _l
360 299 405 279 432 255 _c
458 230 472 195 472 151 _c
472 100 452 60 412 31 _c
372 1 316 -13 246 -13 _c
216 -13 186 -10 154 -5 _c
}_e{122 0 89 8 54 20 _c
54 113 _l
87 95 120 82 152 74 _c
184 65 216 61 248 61 _c
290 61 323 68 346 82 _c
368 96 380 117 380 144 _c
380 168 371 187 355 200 _c
339 213 303 226 247 238 _c
216 245 _l
160 257 119 275 95 299 _c
70 323 58 356 58 399 _c
58 450 76 490 112 518 _c
148 546 200 560 268 560 _c
301 560 332 557 362 552 _c
391 547 418 540 443 531 _c
}_e{_cl}_e}_d
/t{392 0 27 0 368 702 _sc
183 702 _m
183 547 _l
368 547 _l
368 477 _l
183 477 _l
183 180 _l
183 135 189 106 201 94 _c
213 81 238 75 276 75 _c
368 75 _l
368 0 _l
276 0 _l
206 0 158 13 132 39 _c
106 65 93 112 93 180 _c
93 477 _l
27 477 _l
27 547 _l
93 547 _l
93 702 _l
183 702 _l
_cl}_d
/u{634 0 85 -13 543 547 _sc
85 216 _m
85 547 _l
175 547 _l
175 219 _l
175 167 185 129 205 103 _c
225 77 255 64 296 64 _c
344 64 383 79 411 110 _c
439 141 453 183 453 237 _c
453 547 _l
543 547 _l
543 0 _l
453 0 _l
453 84 _l
431 50 405 26 377 10 _c
348 -5 315 -13 277 -13 _c
214 -13 166 6 134 45 _c
101 83 85 140 85 216 _c
_cl}_d
/w{818 0 42 0 776 547 _sc
42 547 _m
132 547 _l
244 120 _l
356 547 _l
462 547 _l
574 120 _l
686 547 _l
776 547 _l
633 0 _l
527 0 _l
409 448 _l
291 0 _l
185 0 _l
42 547 _l
_cl}_d
/y{592 0 30 -207 562 547 _sc
322 -50 _m
296 -114 271 -157 247 -177 _c
223 -197 191 -207 151 -207 _c
79 -207 _l
79 -132 _l
132 -132 _l
156 -132 175 -126 189 -114 _c
203 -102 218 -75 235 -31 _c
251 9 _l
30 547 _l
125 547 _l
296 119 _l
467 547 _l
562 547 _l
322 -50 _l
_cl}_d
end readonly def

/BuildGlyph
 {exch begin
 CharStrings exch
 2 copy known not{pop /.notdef}if
 true 3 1 roll get exec
 end}_d

/BuildChar {
 1 index /Encoding get exch get
 1 index /BuildGlyph get exec
}_d

FontName currentdict end definefont pop
end
%%EndProlog
mpldict begin
18 180 translate
576 432 0 0 clipbox
100000 setmiterlimit
gsave
0 0 m
576 0 l
576 432 l
0 432 l
cl
1.000 setgray
fill
grestore
/p0_0 {
newpath
translate
0 -19.364917 m
5.135636 -19.364917 10.061621 -17.324507 13.693064 -13.693064 c
17.324507 -10.061621 19.364917 -5.135636 19.364917 0 c
19.364917 5.135636 17.324507 10.061621 13.693064 13.693064 c
10.061621 17.324507 5.135636 19.364917 0 19.364917 c
-5.135636 19.364917 -10.061621 17.324507 -13.693064 13.693064 c
-17.324507 10.061621 -19.364917 5.135636 -19.364917 0 c
-19.364917 -5.135636 -17.324507 -10.061621 -13.693064 -13.693064 c
-10.061621 -17.324507 -5.135636 -19.364917 0 -19.364917 c
cl

} bind def
1.000 setlinewidth
1 setlinejoin
0 setlinecap
[] 0 setdash
0.000 setgray
gsave
202.9 231.9 72 100.1 clipbox
100.987 253.683 p0_0
gsave
0.404 0.000 0.051 setrgbcolor
fill
grestore
stroke
grestore
gsave
202.9 231.9 72 100.1 clipbox
115.481 143.532 p0_0
gsave
0.793 0.093 0.113 setrgbcolor
fill
grestore
stroke
grestore
gsave
202.9 231.9 72 100.1 clipbox
187.948 244.987 p0_0
gsave
0.984 0.413 0.288 setrgbcolor
fill
grestore
stroke
grestore
gsave
202.9 231.9 72 100.1 clipbox
245.922 187.013 p0_0
gsave
0.988 0.732 0.630 setrgbcolor
fill
grestore
stroke
grestore
gsave
202.9 231.9 72 100.1 clipbox
245.922 302.961 p0_0
gsave
1.000 0.961 0.941 setrgbcolor
fill
grestore
stroke
grestore
0 setlinejoin
gsave
202.9 231.9 72 100.1 clipbox
111.15976 176.370239 m
105.676604 190.267203 l
109.197168 190.730435 l
105.056167 222.202049 l
105.199863 222.220956 l
109.340865 190.749342 l
112.861429 191.212575 l
cl
gsave
fill
grestore
stroke
grestore
gsave
202.9 231.9 72 100.1 clipbox
165.314718 213.300345 m
159.839001 199.400449 l
156.949507 201.464373 l
136.244498 172.47736 l
136.12656 172.561601 l
156.831569 201.548614 l
153.942075 203.612538 l
cl
gsave
fill
grestore
stroke
grestore
gsave
202.9 231.9 72 100.1 clipbox
231.324524 201.610541 m
218.513953 209.296884 l
221.024825 211.807756 l
204.460817 228.371763 l
204.563302 228.474248 l
221.127309 211.91024 l
223.638181 214.421112 l
cl
gsave
fill
grestore
stroke
grestore
gsave
202.9 231.9 72 100.1 clipbox
245.922078 267.762523 m
249.545455 253.269017 l
245.994545 253.269017 l
245.994545 220.141002 l
245.84961 220.141002 l
245.84961 253.269017 l
242.298701 253.269017 l
cl
gsave
fill
grestore
stroke
grestore
/BitstreamVeraSans-Roman findfont
12.000 scalefont
setfont
gsave
100.987013 253.683117 translate
0.000000 rotate
0.000000 0.000000 m /A glyphshow
grestore
gsave
115.480519 143.532468 translate
0.000000 rotate
0.000000 0.000000 m /B glyphshow
grestore
gsave
187.948052 244.987013 translate
0.000000 rotate
0.000000 0.000000 m /C glyphshow
grestore
gsave
245.922078 187.012987 translate
0.000000 rotate
0.000000 0.000000 m /D glyphshow
grestore
gsave
245.922078 302.961039 translate
0.000000 rotate
0.000000 0.000000 m /E glyphshow
grestore
/BitstreamVeraSans-Roman findfont
14.400 scalefont
setfont
gsave
107.907670 336.948052 translate
0.000000 rotate
0.000000 0.000000 m /A glyphshow
9.833679 0.000000 m /space glyphshow
14.403076 0.000000 m /i glyphshow
18.396912 0.000000 m /s glyphshow
25.886230 0.000000 m /space glyphshow
30.455627 0.000000 m /p glyphshow
39.580383 0.000000 m /o glyphshow
48.375244 0.000000 m /i glyphshow
52.369080 0.000000 m /n glyphshow
61.479797 0.000000 m /t glyphshow
67.116089 0.000000 m /space glyphshow
71.685486 0.000000 m /o glyphshow
80.480347 0.000000 m /f glyphshow
85.541077 0.000000 m /space glyphshow
90.110474 0.000000 m /o glyphshow
98.905334 0.000000 m /r glyphshow
104.815369 0.000000 m /i glyphshow
108.809204 0.000000 m /g glyphshow
117.933960 0.000000 m /i glyphshow
121.927795 0.000000 m /n glyphshow
grestore
/p1_0 {
newpath
translate
0 -19.364917 m
5.135636 -19.364917 10.061621 -17.324507 13.693064 -13.693064 c
17.324507 -10.061621 19.364917 -5.135636 19.364917 0 c
19.364917 5.135636 17.324507 10.061621 13.693064 13.693064 c
10.061621 17.324507 5.135636 19.364917 0 19.364917 c
-5.135636 19.364917 -10.061621 17.324507 -13.693064 13.693064 c
-17.324507 10.061621 -19.364917 5.135636 -19.364917 0 c
-19.364917 -5.135636 -17.324507 -10.061621 -13.693064 -13.693064 c
-10.061621 -17.324507 -5.135636 -19.364917 0 -19.364917 c
cl

} bind def
1 setlinejoin
gsave
202.9 231.9 315.5 100.1 clipbox
344.478 253.683 p1_0
gsave
0.404 0.000 0.051 setrgbcolor
fill
grestore
stroke
grestore
gsave
202.9 231.9 315.5 100.1 clipbox
358.971 143.532 p1_0
gsave
0.793 0.093 0.113 setrgbcolor
fill
grestore
stroke
grestore
gsave
202.9 231.9 315.5 100.1 clipbox
431.439 244.987 p1_0
gsave
0.984 0.413 0.288 setrgbcolor
fill
grestore
stroke
grestore
gsave
202.9 231.9 315.5 100.1 clipbox
489.413 187.013 p1_0
gsave
0.988 0.732 0.630 setrgbcolor
fill
grestore
stroke
grestore
gsave
202.9 231.9 315.5 100.1 clipbox
489.413 302.961 p1_0
gsave
1.000 0.961 0.941 setrgbcolor
fill
grestore
stroke
grestore
0 setlinejoin
gsave
202.9 231.9 315.5 100.1 clipbox
367.325361 251.398373 m
382.107478 253.56161 l
381.75415 250.028323 l
406.600161 247.543722 l
406.585739 247.399506 l
381.739728 249.884107 l
381.386399 246.350821 l
cl
gsave
fill
grestore
stroke
grestore
gsave
202.9 231.9 315.5 100.1 clipbox
381.604763 175.219136 m
387.08048 189.119032 l
389.969973 187.055108 l
410.674983 216.042121 l
410.792921 215.957879 l
390.087912 186.970866 l
392.977405 184.906942 l
cl
gsave
fill
grestore
stroke
grestore
gsave
202.9 231.9 315.5 100.1 clipbox
474.815433 201.610541 m
462.004862 209.296884 l
464.515734 211.807756 l
447.951726 228.371763 l
448.054211 228.474248 l
464.618218 211.91024 l
467.12909 214.421112 l
cl
gsave
fill
grestore
stroke
grestore
gsave
202.9 231.9 315.5 100.1 clipbox
489.412987 267.762523 m
493.036364 253.269017 l
489.485455 253.269017 l
489.485455 220.141002 l
489.340519 220.141002 l
489.340519 253.269017 l
485.78961 253.269017 l
cl
gsave
fill
grestore
stroke
grestore
/BitstreamVeraSans-Roman findfont
12.000 scalefont
setfont
gsave
344.477922 253.683117 translate
0.000000 rotate
0.000000 0.000000 m /A glyphshow
grestore
gsave
358.971429 143.532468 translate
0.000000 rotate
0.000000 0.000000 m /B glyphshow
grestore
gsave
431.438961 244.987013 translate
0.000000 rotate
0.000000 0.000000 m /C glyphshow
grestore
gsave
489.412987 187.012987 translate
0.000000 rotate
0.000000 0.000000 m /D glyphshow
grestore
gsave
489.412987 302.961039 translate
0.000000 rotate
0.000000 0.000000 m /E glyphshow
grestore
/BitstreamVeraSans-Roman findfont
14.400 scalefont
setfont
gsave
351.297017 336.948052 translate
0.000000 rotate
0.000000 0.000000 m /C glyphshow
10.037231 0.000000 m /space glyphshow
14.606628 0.000000 m /i glyphshow
18.600464 0.000000 m /s glyphshow
26.089783 0.000000 m /space glyphshow
30.659180 0.000000 m /p glyphshow
39.783936 0.000000 m /o glyphshow
48.578796 0.000000 m /i glyphshow
52.572632 0.000000 m /n glyphshow
61.683350 0.000000 m /t glyphshow
67.319641 0.000000 m /space glyphshow
71.889038 0.000000 m /o glyphshow
80.683899 0.000000 m /f glyphshow
85.744629 0.000000 m /space glyphshow
90.314026 0.000000 m /o glyphshow
99.108887 0.000000 m /r glyphshow
105.018921 0.000000 m /i glyphshow
109.012756 0.000000 m /g glyphshow
118.137512 0.000000 m /i glyphshow
122.131348 0.000000 m /n glyphshow
grestore
/BitstreamVeraSans-Roman findfont
16.000 scalefont
setfont
gsave
147.046875 411.203750 translate
0.000000 rotate
0.000000 0.000000 m /T glyphshow
9.742188 0.000000 m /w glyphshow
22.828125 0.000000 m /o glyphshow
32.617188 0.000000 m /space glyphshow
37.703125 0.000000 m /H glyphshow
49.734375 0.000000 m /y glyphshow
59.203125 0.000000 m /p glyphshow
69.359375 0.000000 m /o glyphshow
79.148438 0.000000 m /t glyphshow
85.421875 0.000000 m /h glyphshow
95.562500 0.000000 m /e glyphshow
105.406250 0.000000 m /t glyphshow
111.679688 0.000000 m /i glyphshow
116.125000 0.000000 m /c glyphshow
124.921875 0.000000 m /a glyphshow
134.726562 0.000000 m /l glyphshow
139.171875 0.000000 m /space glyphshow
144.257812 0.000000 m /M glyphshow
158.062500 0.000000 m /i glyphshow
162.507812 0.000000 m /g glyphshow
172.664062 0.000000 m /r glyphshow
179.242188 0.000000 m /a glyphshow
189.046875 0.000000 m /t glyphshow
195.320312 0.000000 m /o glyphshow
205.109375 0.000000 m /r glyphshow
211.687500 0.000000 m /y glyphshow
221.156250 0.000000 m /space glyphshow
226.242188 0.000000 m /R glyphshow
237.359375 0.000000 m /o glyphshow
247.148438 0.000000 m /u glyphshow
257.289062 0.000000 m /t glyphshow
263.562500 0.000000 m /e glyphshow
273.406250 0.000000 m /s glyphshow
grestore

end
showpage

%%EndDocument
 @endspecial 196 x Fk(Figure)30 b(2:)f(P)m(oten)m(tial)j(migratory)e
(routes)f(among)h(a)f(language)i(sto)s(c)m(k)f(consisting)g(of)f(\014v)
m(e)g(groups,)240 4107 y(follo)m(wing)j(the)e(Ph)m(ylogenetic)j(T)-8
b(ree)31 b(in)f(\014gure)g(1)p 0 TeXcolorgray 0 TeXcolorgray
1927 5400 a(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 240 399 a Fk(w)m(ould)30 b(accomplish)h(this?)240
739 y Fj(2)135 b(A)44 b(simple)i(mo)t(del)240 987 y Fk(In)37
b(addition)g(to)h(pro)m(viding)f(a)h(foundation)f(for)g(the)h(age-area)
h(h)m(yp)s(othesis,)e(w)m(e)h(migh)m(t)g(lean)g(on)240
1128 y(some)g(additional)h(principles)e(that)h(w)m(e)g(wish)f(to)h
(encapsulate)h(in)e(the)h(theory)-8 b(.)38 b(W)-8 b(e)39
b(migh)m(t)g(lik)m(e)240 1269 y(the)33 b(mo)s(del)f(to)h(conserv)m(e)h
(on)f(estimation)h(of)e(parameters,)i(and)e(w)m(e)h(migh)m(t)g(also)g
(lik)m(e)h(the)f(mo)s(del)240 1410 y(to)38 b(ha)m(v)m(e)h(a)f
(consisten)m(t)i(in)m(ternal)e(logic.)i(A)e(simple)f(mo)s(del)h(with)f
(transparen)m(t)h(mac)m(hinery)g(also)240 1551 y(creates)f(the)g(p)s
(ossibilit)m(y)f(of)h(expansion)e(and)h(further)f(dev)m(elopmen)m(t.)j
(While)e(the)h(assumptions)240 1692 y(listed)31 b(b)s(elo)m(w)g(are)f
(restrictiv)m(e,)j(one)d(can)h(see)g(ho)m(w)f(they)h(migh)m(t)g(b)s(e)f
(relaxed)h(in)f(future)f(w)m(ork.)381 1850 y(Accordingly)-8
b(,)32 b(let's)g(mak)m(e)f(the)f(follo)m(wing)i(preliminary)e
(assumptions:)p 0 TeXcolorgray 351 2083 a(1.)p 0 TeXcolorgray
46 w(The)48 b(en)m(tire)g(ph)m(ylogenetic)i(tree)e(is)g(observ)m(ed;)g
(there)g(are)h(no)e(unobserv)m(ed)g(migratory)467 2224
y(ev)m(en)m(ts.)p 0 TeXcolorgray 351 2440 a(2.)p 0 TeXcolorgray
46 w(A)36 b(group)e(arriv)m(es)i(in)f(its)h(curren)m(t)f(p)s(osition)g
(with)g(w)m(e)h(migh)m(t)g(call)g(a)g(\\prop)s(ensit)m(y)f(to)h(mi-)467
2581 y(grate.")c(It)d(then)g(disc)m(harges)h(an)g(additional)g
(migratory)g(rate)g(with)g(exp)s(onen)m(tial)g(densit)m(y)-8
b(.)p 0 TeXcolorgray 351 2797 a(3.)p 0 TeXcolorgray 46
w(Once)33 b(a)g(group)f(arriv)m(es)i(in)e(its)h(curren)m(t)g(and)f
(disc)m(harges)i(a)f(migratory)h(group,)e(it)h(is)g(then)467
2938 y(dorman)m(t;)27 b(subsequen)m(t)f(migration)h(from)f(the)g
(group's)g(lo)s(cation)i(requires)e(the)h(b)s(eginnings)467
3079 y(of)k(an)f(additional)h(migratory)h(episo)s(de.)381
3311 y(One)c(go)s(o)s(d)g(thing)g(ab)s(out)g(this)g(mo)s(del)g(is)g
(that)g(it)h(can)g(b)s(e)e(easily)i(concen)m(trated.)h(That)e(is,)h
(the)240 3452 y(parameters)34 b(of)f(an)m(y)h(exp)s(onen)m(tial)g
(distribution)e(can)i(b)s(e)f(concen)m(trated)i(out)e(of)g(the)h(lik)m
(eliho)s(o)s(d,)240 3594 y(and)27 b(this)g(mak)m(es)h(the)f(w)m
(orkings)h(of)f(the)h(mo)s(del)f(clear)h(in)f(that)h(one)g(can)f
(easily)i(see)e(ho)m(w)h(and)e(wh)m(y)240 3735 y(it)31
b(w)m(ould)f(p)s(osit)g(that)h(the)g(\014rst)e(sequence)i(of)g(ev)m(en)
m(ts)h(on)e(\014gure)g(1)g(are)h(more)g(lik)m(ely)-8
b(.)381 3892 y(T)g(o)33 b(see)f(the)h(basic)f(idea,)h(let's)g(dev)m
(elop)g(a)g(comparison)f(of)h(the)f(t)m(w)m(o)h(scenarios)g(describ)s
(ed)e(in)240 4034 y(\014gure)39 b(1.)h(The)f(\014rst)f(scenario)j
(requires)e(an)g(initial)i(migratory)f(ev)m(en)m(t)h(to)f(start)g
(after)g(time)g Fi(t)3621 4048 y Fh(0)240 4175 y Fk(from)34
b(p)s(oin)m(t)g Fi(A)p Fk(.)h(A)m(t)g(this)f(p)s(oin)m(t,)h(according)g
(to)g(the)g(mo)s(del)f(assumptions,)g Fi(A)h Fk(is)f(dorman)m(t,)h(and)
240 4316 y(the)d(migratory)g(bug)e(is)i(transitioned)g(to)g(lo)s
(cation)h Fi(B)5 b Fk(.)31 b(After)g(time)h Fi(t)2666
4330 y Fh(1)2705 4316 y Fk(,)g Fi(B)k Fk(emits)c(the)f(migratory)240
4457 y(bug)25 b(to)h Fi(C)32 b Fk(and)24 b(is)i(then)f(dorman)m(t,)h
(follo)m(w)m(ed)h(b)m(y)e Fi(C)7 b Fk('s)25 b(emission)g(and)g
(subsequen)m(t)g(dormancy)-8 b(,)26 b(and)240 4598 y(then)k
Fi(D)s Fk('s.)h(Finally)-8 b(,)32 b Fi(E)j Fk(retains)c(the)g(bug)e
(but)h(nev)m(er)h(emits.)381 4756 y(This)f(is)h(the)f(only)h(migratory)
h(episo)s(de)e(needed)g(to)i(explain)e(the)h(p)s(ositioning)g(of)g(the)
g(groups)240 4897 y(in)41 b(the)g(tree,)i(and)d(giv)m(en)j(the)e
(assumption)g(that)h(disc)m(harges)f(are)h(exp)s(onen)m(tial,)h(supp)s
(ose)c(our)240 5038 y(ev)m(en)m(ts)31 b(are)e(describ)s(ed)f(b)m(y)h
(the)h(distribution)e(Exp\()p Fi(\025)p Fk(\).)i(Then,)e(w)m(e)i(ha)m
(v)m(e)g(the)g(lik)m(eliho)s(o)s(d)g(of)f(p)s(oin)m(t)p
0 TeXcolorgray 1927 5400 a(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 240 399 a Fi(A)30 b Fk(b)s(eing)g(the)h(p)s(oin)m(t)f(of)h
(origin)g(as:)1219 654 y Fi(P)1277 668 y Fg(A)1360 654
y Fk(=)25 b Fi(\025e)1551 616 y Ff(\000)p Fg(\025t)1672
625 y Fe(0)1711 654 y Fi(\025e)1806 616 y Ff(\000)p Fg(\025t)1927
625 y Fe(1)1967 654 y Fi(\025e)2062 616 y Ff(\000)p Fg(\025t)2183
625 y Fe(2)2223 654 y Fi(\025e)2318 616 y Ff(\000)p Fg(\025t)2439
625 y Fe(3)2478 654 y Fi(e)2520 616 y Ff(\000)p Fg(\025t)2641
625 y Fe(8)3544 654 y Fk(\(1\))240 909 y(or)1427 1050
y Fi(P)1485 1064 y Fg(A)1567 1050 y Fk(=)g Fi(\025)1716
1013 y Fh(4)1756 1050 y Fi(e)1798 1013 y Ff(\000)p Fg(\025)p
Fh(\()p Fg(t)1946 1022 y Fe(0)1982 1013 y Fh(+)p Fg(t)2062
1022 y Fe(1)2097 1013 y Fh(+)p Fg(t)2177 1022 y Fe(2)2212
1013 y Fh(+)p Fg(t)2292 1022 y Fe(3)2327 1013 y Fh(+)p
Fg(t)2407 1022 y Fe(8)2442 1013 y Fh(\))3544 1050 y Fk(\(2\))381
1275 y(There)45 b(are)h(a)g(couple)g(of)f(p)s(oin)m(ts)h(of)f(in)m
(terest)i(for)e(equation)h(\(1\).)h(First,)f(since)g(only)g(one)240
1417 y(migratory)e(path)g(is)f(needed)g(to)h(explain)g(the)g(ev)m(en)m
(ts,)h(only)f(one)f(exp)s(onen)m(tial)i(parameter)f(is)240
1558 y(needed)31 b(for)g(the)g(whole)g(pro)s(cess.)g(Also,)h(since)f(a)
h(migratory)g(ev)m(en)m(t)g(after)g Fi(t)2885 1572 y
Fh(8)2955 1558 y Fk(is)f(nev)m(er)h(observ)m(ed,)240
1699 y(w)m(e)37 b(ha)m(v)m(e)h(1)25 b Fd(\000)f Fi(F)13
b Fk(\()p Fi(t)900 1713 y Fh(8)940 1699 y Fi(;)i(\025)p
Fk(\))37 b(=)e Fi(e)1253 1666 y Ff(\000)p Fg(\025t)1374
1675 y Fe(8)1414 1699 y Fk(;)i(there)g(is)f(only)h(one)g(suc)m(h)g
(\\op)s(erational)h(branc)m(h")f(when)e(our)240 1840
y(observ)-5 b(ation)31 b(p)s(erio)s(d)e(ends.)381 1998
y(Since)34 b(the)g(migration)h(parameter)g(is)f(not)g(of)g(as)g(great)i
(of)e(in)m(terest)h(as)f(the)g(probabilit)m(y)-8 b(,)35
b(w)m(e)240 2139 y(can)24 b(tak)m(e)i(the)e(log)i(of)e(equation)h(3)f
(and)g(maximize)h(the)f(result)g(with)g(resp)s(ect)g(to)h
Fi(\025)p Fk(,)g(and)e(substitute)240 2280 y(the)k(result)g(bac)m(k)g
(in)g(to)g(concen)m(trated)i(lik)m(eliho)s(o)s(d,)f(giving)g(us)e(a)h
(closed-form)h(expression)e(for)h(the)240 2421 y(probabilit)m(y)k(that)
g Fi(A)f Fk(is)h(the)f(p)s(oin)m(t)h(of)f(origin:)1364
2699 y Fi(P)1422 2713 y Fg(A)1504 2699 y Fk(=)1958 2637
y(4)2003 2604 y Fh(4)2042 2637 y Fi(e)2084 2604 y Ff(\000)p
Fh(4)p 1610 2678 916 4 v 1610 2761 a Fk(\()p Fi(t)1678
2775 y Fh(0)1738 2761 y Fk(+)20 b Fi(t)1862 2775 y Fh(1)1922
2761 y Fk(+)f Fi(t)2045 2775 y Fh(2)2105 2761 y Fk(+)h
Fi(t)2229 2775 y Fh(3)2288 2761 y Fk(+)g Fi(t)2412 2775
y Fh(8)2451 2761 y Fk(\))2486 2735 y Fh(4)3544 2699 y
Fk(\(3\))240 2969 y(Of)28 b(course,)h(this)f(is)h(not)g(all)g(that)g
(meaningful)g(without)f(a)h(p)s(oin)m(t)g(of)f(comparison.)h(So,)g(b)m
(y)f(w)m(a)m(y)i(of)240 3110 y(comparison,)i(according)h(to)f(this)g
(mo)s(del,)g(what)f(is)h(the)g(lik)m(eliho)s(o)s(d)g(that)g(the)g(p)s
(oin)m(t)g(of)g(origin)g(is)240 3252 y Fi(C)7 b Fk(?)381
3409 y(In)24 b(this)g(case,)h(the)g(pro)s(cess)f(b)s(egins)g(with)g(a)g
(migration)i(after)e Fi(t)2528 3423 y Fh(0)2592 3409
y Fk(from)g Fi(C)30 b Fk(to)25 b Fi(A)p Fk(.)g(Subsequen)m(tly)-8
b(,)240 3550 y(no)21 b(additional)i(migrations)f(o)s(ccur)g(from)f
Fi(A)p Fk(,)g(so)h Fi(A)g Fk(remains)f(activ)m(e.)j(Then,)d(after)h
(time)g Fi(t)3269 3564 y Fh(1)3330 3550 y Fk(a)g(second)240
3692 y(migratory)29 b(ev)m(en)m(t)h(arises)f(leading)g(from)e
Fi(C)35 b Fk(to)29 b Fi(B)5 b Fk(,)28 b(after)h(whic)m(h)f(nothing)g
(further)f(o)s(ccurs)h(on)g(this)240 3833 y(branc)m(h.)j(Then,)f(a)i
(migratory)g(ev)m(en)m(t)g(leads)g(from)e Fi(C)38 b Fk(to)32
b Fi(D)i Fk(o)m(v)m(er)e(time)g Fi(t)2774 3847 y Fh(2)2813
3833 y Fk(,)f(and)g(then)g(from)f Fi(D)k Fk(to)240 3974
y Fi(E)i Fk(o)m(v)m(er)31 b(time)g Fi(t)777 3988 y Fh(3)817
3974 y Fk(,)f(at)h(whic)m(h)f(p)s(oin)m(t)h(nothing)f(more)h(happ)s
(ens.)381 4132 y(The)39 b(k)m(ey)g(thing)h(ab)s(out)e(this)h
(explanation)h(is)f(that)h(there)f(are)h(three)f(separate)h(migratory)
240 4273 y(ev)m(en)m(ts)27 b(needed)f(to)g(explain)g(things,)g(so)g(w)m
(e)g(need)g(three)g(exp)s(onen)m(tial)g(parameters)g(in)g(the)g(mo)s
(del.)240 4414 y(Another)37 b(k)m(ey)h(thing)e(is)h(that)h(w)m(e)f(ha)m
(v)m(e)i(more)e(branc)m(hes)f(that)i(are)f(\\aliv)m(e")j(at)d(the)g
(end)g(of)g(the)240 4555 y(pro)s(cess.)h(These)h(migh)m(t)g(suggest)g
(in)m(tuitiv)m(ely)h(that)f(this)g(explanation)g(is)g(less)g(lik)m(ely)
h(than)e(the)240 4696 y(previous,)e(and)f(this)h(is)g(indeed)f(the)h
(case)h(under)e(the)h(mo)s(del.)g(F)-8 b(orming)36 b(the)g(lik)m(eliho)
s(o)s(d)h(in)f(the)240 4837 y(same)31 b(w)m(a)m(y)g(as)g(w)m(e)g(did)e
(ab)s(o)m(v)m(e,)j(w)m(e)f(ha)m(v)m(e:)1024 5093 y Fi(P)1082
5107 y Fg(C)1167 5093 y Fk(=)25 b Fi(\025)1316 5107 y
Fh(1)1355 5093 y Fi(e)1397 5055 y Ff(\000)p Fg(\025)1493
5064 y Fe(1)1528 5055 y Fh(\()p Fg(t)1580 5064 y Fe(0)1616
5055 y Fh(+)p Fg(t)1696 5064 y Fe(4)1731 5055 y Fh(\))1762
5093 y Fi(\025)1815 5107 y Fh(2)1855 5093 y Fi(e)1897
5055 y Ff(\000)p Fg(\025)1993 5064 y Fe(2)2028 5055 y
Fh(\()p Fg(t)2080 5064 y Fe(1)2115 5055 y Fh(+)p Fg(t)2195
5064 y Fe(5)2230 5055 y Fh(\))2262 5093 y Fi(\025)2315
5055 y Fh(2)2315 5115 y(3)2354 5093 y Fi(e)2396 5055
y Ff(\000)p Fg(\025)2492 5064 y Fe(3)2527 5055 y Fh(\()p
Fg(t)2579 5064 y Fe(2)2615 5055 y Fh(+)p Fg(t)2695 5064
y Fe(3)2730 5055 y Fh(+)p Fg(t)2810 5064 y Fe(8)2845
5055 y Fh(\))3544 5093 y Fk(\(4\))p 0 TeXcolorgray 1927
5400 a(7)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 240 399 a Fk(So,)24 b(here)f(w)m(e)h(ha)m(v)m(e)h(a)f
(three-parameter)h(mo)s(del,)e(whic)m(h)h(is)f(ho)m(w)h(the)g
(increased)g(complexit)m(y)h(of)f(the)240 540 y(explanation)f(\(the)f
(an)m(ti-Occam's)i(razor)e(e\013ect\))h(is)f(manifest)g(in)f(the)h
(probabilit)m(y)-8 b(.)23 b(Concen)m(trating)240 681
y(4)31 b(as)f(ab)s(o)m(v)m(e)i(giv)m(es)g(the)e(result:)1839
897 y(2)1884 864 y Fh(2)1924 897 y Fi(e)1966 864 y Ff(\000)p
Fh(4)p 1369 937 1163 4 v 1369 1021 a Fk(\()p Fi(t)1437
1035 y Fh(0)1497 1021 y Fk(+)20 b Fi(t)1621 1035 y Fh(4)1660
1021 y Fk(\)\()p Fi(t)1763 1035 y Fh(1)1823 1021 y Fk(+)g
Fi(t)1947 1035 y Fh(5)1986 1021 y Fk(\)\()p Fi(t)2089
1035 y Fh(2)2149 1021 y Fk(+)g Fi(t)2273 1035 y Fh(3)2333
1021 y Fk(+)g Fi(t)2457 1035 y Fh(5)2496 1021 y Fk(\))3544
958 y(\(5\))381 1245 y(W)-8 b(e)40 b(can)f(form)f(the)h(ratio)h(of)f
(this)g(and)f(the)h(previous)f(expression)g(and)h(see)g(whic)m(h)f
(tree)i(is)240 1387 y(more)k(lik)m(ely)g(under)e(whic)m(h)h
(con\014guration)h(of)g(the)f(parameters.)h(The)f(in)m(tuition)h(b)s
(ehind)e(the)240 1528 y(explanation)31 b(can)g(b)s(e)f(written)g(as:)
1242 1816 y Fi(LR)c Fk(=)f(4)1555 1688 y Fc(\022)1623
1816 y Fk(1)20 b Fd(\000)1789 1755 y Fi(t)1822 1769 y
Fh(0)p 1789 1795 73 4 v 1792 1879 a Fi(T)1871 1688 y
Fc(\023)1953 1816 y Fk(4)1998 1779 y Fh(2)2053 1688 y
Fc(\022)2120 1816 y Fk(1)h Fd(\000)2287 1755 y Fi(t)2320
1769 y Fg(o)2378 1755 y Fk(+)f Fi(t)2502 1769 y Fh(1)p
2287 1795 255 4 v 2381 1879 a Fi(T)2551 1688 y Fc(\023)2618
1711 y Fh(2)240 2093 y Fk(So)30 b(w)m(e)g(see)g(that)g(unless)f(the)h
(branc)m(hes)g Fi(t)1675 2107 y Fh(0)1744 2093 y Fk(and)f
Fi(t)1953 2107 y Fh(1)2022 2093 y Fk(constitute)i(a)f(\(v)m(ery\))g
(large)h(span)e(of)h(the)g(tree,)240 2234 y(our)g(mo)s(del)g(claims)h
(that)g Fi(A)g Fk(is)f(the)h(most)g(lik)m(ely)g(place)h(of)e(origin.)
240 2575 y Fj(3)135 b(Theorems)p 0 TeXcolorgray 240 2823
a Fb(Theorem)35 b(1)p 0 TeXcolorgray 46 w Fa(The)e(A)-5
b(ge-A)n(r)g(e)g(a)32 b(the)-5 b(or)g(em)381 2980 y(T)e(ake)25
b(the)g(r)-5 b(oute)25 b(c)-5 b(ol)5 b(le)-5 b(ction)26
b Fi(R)g Fa(thr)-5 b(ough)26 b(tr)-5 b(e)g(e)25 b Fi(T)38
b Fa(and)25 b(apply)i(to)e(it)f(a)h(r)-5 b(e)g(dir)g(e)g(ct,)27
b(c)-5 b(al)5 b(ling)25 b(the)g(r)-5 b(esult)240 3121
y Fi(R)310 3088 y Ff(0)333 3121 y Fa(.)32 b(Then,)h(c)-5
b(ompute)34 b(the)f(c)-5 b(onc)g(entr)g(ate)g(d)36 b(likeliho)-5
b(o)g(d)35 b(of)d(the)h(new)g(tr)-5 b(e)g(e)34 b(gives)e
Fi(p)p Fk(\()p Fi(R)q Fk(\))25 b Fi(>)g(p)p Fk(\()p Fi(R)3384
3088 y Ff(0)3407 3121 y Fk(\))p Fa(.)240 3462 y Fj(4)135
b(An)44 b(algorithm)240 3710 y Fk(As)23 b(is)h(often)g(the)f(case)i
(when)d(dealing)i(with)f(estimation)i(o)m(v)m(er)g(trees,)f(it)g(b)s
(eho)s(o)m(v)m(es)g(one)g(to)g(consider)240 3851 y(an)29
b(algorithm)g(that)h(w)m(orks)f(bac)m(kw)m(ards)g(from)f(the)h(branc)m
(hes)f(to)i(the)f(base.)g(The)f(algorithm)i(pre-)240
3992 y(sen)m(ted)g(here)f(is)g(essen)m(tially)i(a)f(pruning)d
(algorithm)k(lik)m(e)f(F)-8 b(elsenstein's)31 b(with)e(a)g(hin)m(t)h
(of)f(dynamic)240 4133 y(programming.)22 b(The)f(dynamic)g(programming)
g(asp)s(ect)h(in)m(tro)s(duces)g(a)g(sort)f(of)h(con)m(tin)m(uation)i
(max-)240 4274 y(im)m(um)30 b(lik)m(eliho)s(o)s(d)h(in)m(to)h(the)e
(tree.)381 4432 y(The)36 b(algorithm)h(w)m(orks)f(as)h(follo)m(ws.)g(A)
m(t)h(termination,)f(the)f(result)h(is)f(a)h(concen)m(trated)h(log-)240
4573 y(lik)m(eliho)s(o)s(d)h(of)f(eac)m(h)i(lo)s(cation)g(b)s(eing)e
(the)g(p)s(oin)m(t)g(of)h(origin.)g(The)f(follo)m(wing)h(is)g(an)f
(illustration)240 4714 y(sho)m(wing)30 b(ho)m(w)h(the)f(algorithm)i(w)m
(orks)e(on)g(the)h(example)g(giv)m(en)g(ab)s(o)m(v)m(e.)p
0 TeXcolorgray 351 4972 a(0.)p 0 TeXcolorgray 46 w(Initialization:)j(a)
c(\\activ)m(e")k(v)m(ector)e(of)f(zeros)g Fi(A)26 b Fk(=)f([0)p
Fi(;)15 b Fk(0)p Fi(;)g Fk(0)p Fi(;)g Fk(0)p Fi(;)g Fk(0],)35
b(a)c(v)m(ector)h(of)f(exp)s(onen)m(tial)467 5113 y(parameters)j(that)f
(start)h(with)e(zero,)j Fi(E)g Fk(=)29 b([0)p Fi(;)15
b Fk(0)p Fi(;)g Fk(0)p Fi(;)g Fk(0)p Fi(;)g Fk(0],)37
b(and)c(a)g(con)m(tin)m(uation)i(lik)m(eliho)s(o)s(d)p
0 TeXcolorgray 1927 5400 a(8)p 0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 467 399 a Fi(L)25 b Fk(=)g([)p Fd(\000)p
Fi(t)779 413 y Fh(4)819 399 y Fi(;)15 b Fd(\000)p Fi(t)963
413 y Fh(5)1002 399 y Fi(;)g Fd(\000)p Fi(t)1146 413
y Fh(6)1185 399 y Fi(;)g Fd(\000)p Fi(t)1329 413 y Fh(7)1369
399 y Fi(;)g Fd(\000)p Fi(t)1513 413 y Fh(8)1552 399
y Fk(])p 0 TeXcolorgray 351 614 a(1.)p 0 TeXcolorgray
46 w(Select)32 b(an)e(in)m(terior)h(no)s(de)f(and)g(pic)m(k)h(out)f
(its)h(branc)m(hes.)p 0 TeXcolorgray 351 830 a(2.)p 0
TeXcolorgray 46 w(P)m(o)s(o)p 0 TeXcolorgray 1927 5400
a(9)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
